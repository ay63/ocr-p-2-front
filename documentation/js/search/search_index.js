var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.41,1,0.89]],["body/components/AppComponent.html",[0,0.597,1,1.408,2,1.327,3,0.457,4,0.284,5,1.116,6,2.812,7,1.116,8,1.116,9,0.284,10,2.342,11,1.881,12,2.645,13,1.116,14,2.371,15,2.196,16,2.066,17,3.967,18,4.596,19,1.574,20,3.967,21,0.324,22,1.026,23,3.324,24,0.94,25,2.873,26,0.94,27,2.033,28,2.845,29,0.906,30,3.967,31,0.864,32,0.033,33,1.089,34,0.515,35,0.864,36,2.812,37,0.666,38,1.718,39,1.444,40,1.024,41,0.793,42,1.026,43,2.868,44,3.967,45,0.597,46,0.503,47,2.812,48,0.727,49,2.812,50,0.324,51,0.245,52,1.333,53,2.812,54,2.342,55,2.812,56,3.967,57,2.812,58,2.812,59,2.812,60,2.812,61,2.812,62,3.967,63,2.812,64,2.812,65,2.812,66,0.94,67,1.574,68,1.574,69,1.116,70,1.981,71,1.116,72,1.116,73,0.94,74,1.116,75,1.824,76,0.94,77,0.94,78,1.218,79,0.727,80,1.574,81,1.116,82,0.864,83,1.116,84,0.793,85,1.116,86,0.727,87,0.727,88,1.116,89,0.94,90,0.793,91,1.024,92,1.116,93,1.116,94,0.02,95,0.02]],["title/modules/AppModule.html",[96,2.023,97,2.023]],["body/modules/AppModule.html",[1,1.709,3,0.332,4,0.291,9,0.291,15,1.05,32,0.032,45,0.793,46,0.517,50,0.332,51,0.252,66,0.965,79,1.425,84,1.553,86,1.425,87,1.045,90,1.553,94,0.021,95,0.021,96,1.849,97,4.033,98,1.66,99,1.849,100,3.883,101,3.883,102,3.883,103,2.086,104,2.403,105,2.403,106,2.403,107,2.403,108,2.403,109,3.17,110,3.17,111,3.365,112,2.403,113,2.403,114,2.885,115,1.471,116,4.039,117,4.039,118,2.086,119,3.365,120,4.039,121,3.365,122,2.086,123,2.885,124,2.885,125,2.885,126,2.885,127,2.086,128,2.885,129,2.403,130,1.849,131,2.403,132,2.921,133,1.66,134,1.503,135,4.039,136,2.885,137,2.885,138,2.885,139,1.368,140,1.368,141,1.849,142,1.503,143,1.849,144,2.885,145,2.885,146,2.885,147,2.885,148,2.885,149,2.885,150,2.885,151,2.885,152,1.471,153,2.885,154,2.885,155,2.885]],["title/modules/AppRoutingModule.html",[96,2.023,109,1.816]],["body/modules/AppRoutingModule.html",[0,0.709,3,0.455,4,0.399,9,0.399,32,0.033,45,0.767,46,0.708,50,0.455,51,0.345,77,1.292,78,1.214,79,1.288,82,1.53,86,1.288,94,0.026,95,0.026,98,2.274,103,2.858,109,2.866,115,1.439,119,4.149,129,4.149,130,2.533,131,3.292,141,2.533,142,2.058,143,2.533,156,3.952,157,3.952,158,4.981,159,3.496,160,2.058,161,2.858,162,3.952,163,2.533,164,5.454,165,3.952,166,3.952]],["title/injectables/ChartDataService.html",[167,0.97,168,1.816]],["body/injectables/ChartDataService.html",[3,0.32,4,0.28,9,0.28,16,1.448,21,0.32,24,0.932,26,0.93,27,2.01,28,2.835,29,0.98,31,1.209,32,0.034,33,0.932,34,0.511,35,1.209,37,1.082,39,1.663,42,1.408,45,0.707,46,0.498,48,0.719,50,0.32,51,0.243,52,1.318,94,0.02,95,0.02,139,1.318,140,1.318,167,1.209,168,2.264,169,1.448,170,3.016,171,3.36,172,2.01,173,3.278,174,4.138,175,4.138,176,2.928,177,3.184,178,2.78,179,3.278,180,1.663,181,2.316,182,1.204,183,2.424,184,2.78,185,2.78,186,2.316,187,2.316,188,2.01,189,2.01,190,2.316,191,1.599,192,1.103,193,2.607,194,3.805,195,3.278,196,3.303,197,2.845,198,2.049,199,2.78,200,3.303,201,3.936,202,2.928,203,2.78,204,1.318,205,2.78,206,2.78,207,2.316,208,2.78,209,2.316,210,2.78]],["title/injectables/ChartFormatDataService.html",[167,0.97,211,1.816]],["body/injectables/ChartFormatDataService.html",[3,0.324,4,0.284,9,0.284,16,1.464,21,0.324,24,0.94,26,0.94,27,2.033,28,2.845,29,0.906,31,1.218,32,0.034,33,1.247,34,0.515,35,1.218,37,0.94,39,1.024,41,1.119,42,1.413,45,0.745,46,0.503,48,0.727,50,0.324,51,0.245,52,1.333,94,0.02,95,0.02,139,1.333,140,1.333,167,1.218,169,1.464,170,2.873,172,2.033,176,2.946,177,3.2,180,1.024,181,2.342,182,1.218,183,1.991,186,2.342,187,2.342,188,2.033,189,2.033,191,1.618,192,1.116,193,2.432,194,2.342,195,2.342,196,2.033,197,2.033,198,1.464,200,2.033,201,2.868,202,1.802,209,2.342,211,2.283,212,3.2,213,2.873,214,3.305,215,4.159,216,2.812,217,3.305,218,2.946,219,2.812,220,2.367,221,2.812,222,1.333,223,2.812,224,2.812,225,2.812,226,3.967,227,2.812,228,2.812,229,3.967,230,2.342,231,2.342,232,2.812,233,2.812]],["title/classes/ChartFormatServiceMock.html",[51,0.275,234,2.283]],["body/classes/ChartFormatServiceMock.html",[3,0.401,4,0.352,9,0.352,21,0.401,24,1.089,29,0.906,31,1.071,32,0.033,33,1.381,34,0.453,35,1.071,37,1.089,41,1.54,42,1.468,45,0.71,48,0.902,50,0.401,51,0.304,94,0.024,95,0.024,163,2.236,182,2.226,183,2.226,193,1.991,214,3.828,215,4.551,217,3.828,218,3.294,222,2.179,230,4.281,231,2.906,234,3.323,235,2.236,236,2.906,237,3.488,238,3.488,239,3.488,240,3.488,241,2.906,242,3.488,243,2.522,244,3.488,245,2.946,246,2.906,247,3.488,248,2.236,249,2.906,250,2.906,251,2.236,252,3.488,253,4.595]],["title/components/CountriesChartComponent.html",[0,0.41,73,1.056]],["body/components/CountriesChartComponent.html",[0,0.527,1,0.637,2,1.131,3,0.389,4,0.228,5,0.896,7,0.896,8,0.896,9,0.228,13,0.896,14,2.264,15,2.078,19,1.342,21,0.26,22,0.875,24,0.801,26,0.755,29,1.064,31,1.039,32,0.033,33,1.067,34,0.701,35,1.039,37,0.535,38,1.465,40,1.477,41,1.144,45,0.627,46,0.404,50,0.26,51,0.197,52,1.071,66,0.755,67,1.342,68,1.342,69,0.896,70,1.787,71,0.896,72,0.896,73,1.506,74,2.083,75,1.609,76,0.755,77,0.801,78,1.246,79,0.584,80,1.342,81,0.896,82,0.694,83,0.896,84,0.637,85,0.896,86,0.584,87,0.584,88,0.896,89,0.755,90,0.637,91,0.823,92,0.896,93,0.896,94,0.017,95,0.017,115,1.232,132,2.933,133,1.3,134,1.177,139,1.071,140,1.071,152,1.843,160,1.177,163,1.448,176,2.6,177,2.886,180,1.756,192,0.896,202,1.448,222,2.4,254,4.597,255,3.99,256,1.448,257,2.168,258,1.465,259,2.446,260,1.465,261,2.446,262,3.378,263,4.055,264,4.055,265,4.055,266,4.055,267,3.383,268,1.947,269,2.591,270,1.882,271,4.217,272,3.383,273,2.259,274,3.383,275,2.259,276,3.378,277,1.882,278,2.818,279,2.259,280,3.245,281,2.259,282,2.818,283,2.259,284,2.259,285,2.259,286,1.947,287,1.882,288,1.882,289,2.259,290,2.259,291,2.259,292,2.259]],["title/components/CountryDetailChartComponent.html",[0,0.41,76,1.056]],["body/components/CountryDetailChartComponent.html",[0,0.532,1,0.647,2,1.144,3,0.394,4,0.231,5,0.91,7,0.91,8,0.91,9,0.231,13,0.91,14,2.272,15,2.085,19,1.358,21,0.264,22,0.885,29,1.069,32,0.033,33,0.81,34,0.704,39,1.246,40,1.853,41,1.435,45,0.532,46,0.411,50,0.264,51,0.2,66,0.767,67,1.358,68,1.358,69,0.91,70,1.8,71,0.91,72,0.91,73,0.767,74,0.91,75,1.624,76,1.517,77,1.284,78,1.925,79,0.593,80,1.358,81,0.91,82,0.704,83,0.91,84,0.647,85,0.91,86,0.593,87,0.593,88,0.91,89,0.767,90,0.647,91,0.835,92,0.91,93,0.91,94,0.018,95,0.018,115,1.246,132,2.959,133,1.319,134,1.194,152,2.111,256,1.47,257,2.193,258,1.482,259,2.474,260,1.482,261,2.474,262,3.409,268,1.968,269,2.355,276,3.409,277,1.91,278,2.85,280,3.616,286,1.968,287,1.91,293,4.616,294,4.007,295,4.092,296,4.092,297,4.092,298,4.092,299,4.092,300,4.092,301,2.355,302,2.293,303,1.91,304,2.293,305,2.293,306,2.293,307,2.293,308,3.421,309,2.293,310,2.293,311,2.293]],["title/components/DashboardCountriesComponent.html",[0,0.41,79,0.817]],["body/components/DashboardCountriesComponent.html",[0,0.456,1,0.506,2,0.947,3,0.326,4,0.181,5,0.712,7,0.712,8,0.712,9,0.181,11,1.343,12,2.02,13,0.712,14,2.137,15,1.961,19,1.124,21,0.206,22,0.733,23,3.139,24,0.671,25,2.294,26,0.947,29,1.041,31,0.551,32,0.033,33,0.831,34,0.628,35,0.551,37,0.831,38,1.999,39,1.031,40,0.653,41,0.506,42,0.733,43,2.883,45,0.686,46,0.321,48,0.733,50,0.206,51,0.156,66,0.6,67,1.124,68,1.124,69,0.712,70,1.582,71,0.712,72,0.712,73,1.333,74,1.393,75,1.393,76,0.6,77,0.831,78,1.225,79,1.031,80,1.987,81,0.712,82,0.551,83,0.712,84,0.506,85,0.712,86,1.031,87,0.464,88,0.712,89,1.333,90,0.506,91,0.653,92,0.712,93,0.712,94,0.015,95,0.015,115,1.031,130,3.304,141,1.149,142,0.934,143,1.149,152,1.031,168,2.294,170,1.63,171,1.149,180,1.68,192,1.917,198,1.828,204,0.85,211,2.294,212,1.149,213,1.032,222,1.89,255,1.297,258,1.227,260,1.227,269,1.63,280,1.815,288,1.494,312,3.728,313,1.494,314,2.359,315,2.498,316,2.832,317,2.832,318,3.51,319,3.51,320,4.341,321,4.341,322,2.048,323,3.987,324,2.883,325,1.793,326,3.51,327,2.832,328,2.048,329,1.793,330,2.359,331,1.793,332,1.793,333,1.793,334,1.793,335,1.793,336,1.793,337,2.048,338,1.494,339,2.832,340,1.494,341,1.494,342,1.149,343,2.359,344,1.149,345,1.149,346,1.494,347,2.359,348,1.793,349,1.494,350,1.793,351,1.793,352,1.793,353,1.793,354,1.793,355,1.793,356,1.793,357,1.793,358,2.832,359,2.832,360,2.832,361,1.793,362,1.793,363,1.793,364,1.793,365,1.793,366,2.832,367,2.832,368,2.832,369,2.359,370,2.832,371,2.832,372,2.832,373,2.832,374,2.832,375,2.832,376,2.832,377,2.832,378,2.832,379,2.832,380,2.832,381,2.832,382,2.832,383,2.832,384,2.832,385,2.832,386,2.832,387,2.832,388,2.832,389,2.832,390,2.832]],["title/components/DashboardCountryDetailComponent.html",[0,0.41,82,0.97]],["body/components/DashboardCountryDetailComponent.html",[0,0.432,1,0.465,2,0.886,3,0.305,4,0.166,5,0.655,7,0.655,8,0.655,9,0.166,11,1.256,12,1.911,13,0.655,14,2.087,15,1.915,19,1.052,21,0.19,22,0.686,24,0.628,25,2.189,26,0.552,29,1.015,31,0.507,32,0.034,33,0.787,34,0.608,35,0.507,37,0.787,38,1.805,40,1.385,41,1.073,42,0.984,45,0.717,46,0.295,48,0.427,50,0.19,51,0.144,52,0.782,66,0.552,67,1.052,68,1.052,69,0.655,70,1.509,71,0.655,72,0.655,73,0.552,74,0.655,75,1.318,76,1.272,77,1.426,78,1.493,79,0.427,80,1.929,81,0.655,82,1.168,83,0.655,84,0.465,85,0.655,86,0.984,87,0.427,88,0.655,89,1.272,90,0.465,91,0.601,92,0.655,93,0.655,94,0.014,95,0.014,115,0.965,133,0.949,134,0.859,141,1.058,142,0.859,143,1.058,152,0.965,160,0.859,161,3.627,163,1.058,168,2.189,170,1.525,171,1.058,180,1.826,192,1.509,198,2.612,204,0.782,207,3.471,211,2.189,212,1.058,213,0.949,220,1.575,258,1.148,260,1.148,268,1.525,269,1.525,286,1.911,294,1.193,301,1.911,312,3.627,314,2.208,315,2.397,322,1.917,324,2.402,328,2.402,330,2.208,337,1.917,338,1.374,340,1.374,341,1.374,342,1.058,343,2.208,344,1.058,345,1.058,346,1.374,347,2.208,349,1.374,391,1.374,392,3.322,393,2.402,394,2.65,395,2.65,396,3.322,397,3.322,398,3.322,399,3.803,400,4.166,401,3.322,402,1.65,403,3.322,404,3.803,405,2.65,406,2.208,407,1.65,408,1.65,409,1.65,410,1.65,411,1.65,412,1.65,413,1.65,414,1.058,415,1.65,416,1.65,417,1.65,418,1.65,419,1.65,420,1.65,421,1.65,422,1.65,423,3.322,424,2.65,425,1.65,426,1.65,427,1.65,428,1.65,429,1.65,430,2.65,431,2.65,432,1.65,433,1.65,434,1.65,435,2.65]],["title/components/HeaderComponent.html",[0,0.41,84,0.89]],["body/components/HeaderComponent.html",[0,0.648,1,0.925,2,1.475,3,0.508,4,0.331,5,1.302,7,1.302,8,1.302,9,0.331,13,1.302,14,2.439,15,2.268,19,1.751,32,0.033,33,1.045,42,1.141,43,3.191,45,0.573,46,0.588,50,0.378,51,0.286,66,1.097,67,1.751,68,1.751,69,1.302,70,2.115,71,1.302,72,1.302,73,1.097,74,1.302,75,1.978,76,1.097,77,1.045,78,1.355,79,0.849,80,2.115,81,1.302,82,1.008,83,1.302,84,1.503,85,1.302,86,0.849,87,0.849,88,1.302,89,1.097,90,0.925,91,1.195,92,1.302,93,1.302,94,0.023,95,0.023,115,1.607,152,1.607,160,1.709,258,1.911,260,1.911,436,2.734,437,3.676,438,4.153,439,4.985,440,4.412,441,4.412]],["title/components/HttpErrorComponent.html",[0,0.41,86,0.817]],["body/components/HttpErrorComponent.html",[0,0.565,1,0.717,2,1.234,3,0.425,4,0.256,5,1.009,7,1.009,8,1.009,9,0.256,11,1.75,12,2.5,13,1.009,14,2.323,15,2.132,19,1.464,21,0.293,22,0.955,24,0.874,25,2.743,26,0.85,29,0.999,31,0.781,32,0.033,33,1.029,34,0.62,35,0.781,37,0.602,38,1.599,39,1.344,40,0.926,41,0.717,45,0.565,46,0.455,50,0.293,51,0.222,52,1.205,66,0.85,67,1.464,68,1.464,69,1.009,70,1.892,71,1.009,72,1.009,73,0.85,74,1.009,75,1.724,76,0.85,77,0.874,78,1.134,79,0.657,80,1.464,81,1.009,82,0.781,83,1.009,84,0.717,85,1.009,86,1.233,87,1.409,88,1.009,89,0.85,90,0.717,91,0.926,92,1.009,93,1.009,94,0.019,95,0.019,115,1.344,142,2.751,152,1.344,160,1.324,180,1.344,258,1.599,260,1.599,268,2.124,270,2.117,271,4.4,280,2.365,286,2.5,393,3.142,414,1.629,438,3.619,442,4.4,443,2.117,444,3.69,445,3.69,446,3.69,447,4.345,448,5.063,449,5.063,450,3.69,451,3.69,452,2.669,453,3.69,454,2.542,455,2.542,456,2.542,457,2.542,458,2.542,459,3.69,460,3.69]],["title/components/InfoDetailChartComponent.html",[0,0.41,89,1.056]],["body/components/InfoDetailChartComponent.html",[0,0.615,1,0.837,2,1.378,3,0.669,4,0.3,5,1.178,7,1.178,8,1.178,9,0.3,13,1.178,14,2.396,15,2.198,19,1.635,21,0.342,23,3.884,29,0.813,32,0.033,33,0.976,34,0.536,39,1.501,41,1.515,45,0.386,46,0.532,50,0.342,51,0.259,66,0.993,67,1.635,68,1.635,69,1.178,70,2.029,71,1.178,72,1.178,73,0.993,74,1.178,75,1.878,76,0.993,77,0.976,78,1.896,79,0.768,80,1.635,81,1.178,82,0.912,83,1.178,84,0.837,85,1.178,86,0.768,87,0.768,88,1.178,89,1.71,90,0.837,91,1.081,92,1.178,93,1.178,94,0.021,95,0.021,115,1.081,152,1.501,180,1.501,256,1.903,257,2.642,258,1.785,259,2.98,260,1.785,261,2.98,268,2.371,286,2.724,303,2.474,342,3.034,461,3.943,462,2.969]],["title/components/LoaderComponent.html",[0,0.41,90,0.89]],["body/components/LoaderComponent.html",[0,0.605,1,0.812,2,1.348,3,0.464,4,0.29,5,1.142,7,1.142,8,1.142,9,0.29,11,1.912,12,2.678,13,1.142,14,2.382,15,2.186,19,1.6,21,0.331,22,1.043,24,0.955,25,2.902,26,1.348,29,0.918,31,0.884,32,0.033,33,1.103,34,0.524,35,0.884,37,0.682,38,1.747,45,0.655,46,0.515,48,0.744,50,0.331,51,0.251,66,0.962,67,1.6,68,1.6,69,1.142,70,2.002,71,1.142,72,1.142,73,0.962,74,1.142,75,1.847,76,0.962,77,0.955,78,1.239,79,0.744,80,1.6,81,1.142,82,0.884,83,1.142,84,0.812,85,1.142,86,0.744,87,0.744,88,1.142,89,0.962,90,1.422,91,1.695,92,1.142,93,1.142,94,0.021,95,0.021,115,1.468,152,1.468,183,2.016,192,1.142,258,1.747,260,1.747,393,3.366,414,1.845,452,2.916,463,2.398,464,4.655,465,4.032,466,4.032,467,4.424,468,2.398,469,3.167,470,4.032,471,2.878,472,2.878,473,2.878,474,2.878]],["title/interceptors/LoaderHttpInterceptorService.html",[110,1.816,475,2.63]],["body/interceptors/LoaderHttpInterceptorService.html",[3,0.4,4,0.351,9,0.351,11,1.649,16,1.812,21,0.4,24,1.086,26,1.163,29,0.905,31,1.409,32,0.033,33,1.086,34,0.596,35,1.409,37,0.824,45,0.709,46,0.623,48,0.9,50,0.4,51,0.304,52,1.649,87,1.507,94,0.024,95,0.024,110,2.639,118,2.515,127,3.711,167,1.409,183,2.223,191,2.001,193,1.507,468,2.898,469,3.351,476,3.478,477,4.275,478,2.898,479,4.587,480,3.478,481,4.587,482,5.456,483,5.132,484,5.456,485,3.478,486,3.478,487,3.478,488,4.587,489,4.587,490,3.478,491,3.478,492,3.478,493,3.478]],["title/injectables/LoaderService.html",[167,0.97,469,1.816]],["body/injectables/LoaderService.html",[3,0.415,4,0.363,9,0.363,16,1.876,21,0.415,22,1.214,24,1.112,26,1.746,29,1.131,32,0.033,34,0.61,37,1.112,38,2.033,40,1.709,41,1.323,45,0.61,46,0.645,48,0.932,50,0.415,51,0.314,94,0.024,95,0.024,167,1.441,169,1.876,183,2.261,191,2.072,192,2.071,204,2.225,467,4.349,469,2.7,494,3,495,4.349,496,5.22,497,5.531,498,5.531,499,4.693,500,3.601,501,3.601,502,4.693,503,4.349,504,4.693,505,3.601,506,3.601,507,3.601,508,3.601]],["title/interfaces/Olympic.html",[42,0.817,509,1.816]],["body/interfaces/Olympic.html",[3,0.488,4,0.428,9,0.428,21,0.488,22,1.346,32,0.033,34,0.732,39,2.05,42,1.346,45,0.551,50,0.488,77,1.391,94,0.027,95,0.027,180,2.05,182,2.543,220,2.856,509,2.44,510,2.719,511,3.533,512,3.378]],["title/injectables/OlympicService.html",[28,1.644,167,0.97]],["body/injectables/OlympicService.html",[3,0.345,4,0.303,9,0.303,16,1.562,21,0.345,22,1.073,24,0.983,26,1.388,28,2.161,29,1.063,31,0.921,32,0.033,33,0.71,34,0.618,35,0.921,37,0.983,39,1.511,40,1.511,41,1.342,42,1.073,45,0.725,46,0.537,48,0.776,50,0.345,51,0.262,87,1.073,94,0.021,95,0.021,118,2.168,139,1.422,140,1.422,167,1.274,169,1.562,176,3.05,177,3.291,183,1.797,188,2.168,189,2.168,190,2.498,191,1.725,192,2.312,193,2.061,196,3,197,3.44,198,1.562,200,2.168,201,3,202,1.922,204,1.967,503,3.964,513,2.498,514,4.149,515,4.277,516,4.277,517,2.999,518,5.134,519,4.149,520,2.999,521,2.999,522,4.149,523,4.149,524,2.999,525,2.999,526,2.999,527,2.999,528,2.999,529,2.999,530,2.999,531,2.999,532,2.999,533,2.999,534,2.999,535,2.999,536,2.498,537,2.999,538,2.999,539,2.999]],["title/classes/OlympicsServiceMock.html",[51,0.275,540,2.283]],["body/classes/OlympicsServiceMock.html",[3,0.375,4,0.328,9,0.328,21,0.375,24,1.039,29,0.865,32,0.033,37,1.039,45,0.423,48,0.842,50,0.375,51,0.284,77,1.039,94,0.023,95,0.023,182,2.573,193,1.901,235,2.086,245,3.406,248,2.813,251,2.813,512,2.525,515,4.426,516,4.426,540,3.173,541,2.712,542,3.255,543,3.255,544,3.656,545,3.663,546,3.656,547,3.663,548,3.656,549,3.663,550,4.426,551,3.663,552,3.656,553,3.656,554,3.656,555,3.656,556,3.656,557,3.656,558,3.656,559,3.656,560,3.656,561,3.656]],["title/interfaces/Participation.html",[220,1.497,509,1.816]],["body/interfaces/Participation.html",[3,0.467,4,0.409,9,0.409,21,0.467,22,1.31,32,0.032,34,0.773,39,2.01,50,0.467,94,0.026,95,0.026,180,2.324,182,2.504,220,2.4,509,2.335,510,2.601,545,3.705,547,3.705,549,3.705,551,3.705,562,3.38]],["title/injectables/UnsubscribeObservableService.html",[167,0.97,315,1.816]],["body/injectables/UnsubscribeObservableService.html",[3,0.434,4,0.38,9,0.38,11,1.787,21,0.434,22,1.25,24,1.145,29,1.052,32,0.033,34,0.49,37,0.893,38,2.093,40,1.372,41,1.063,45,0.628,46,0.675,48,0.975,50,0.434,51,0.329,94,0.025,95,0.025,167,1.484,169,1.963,192,2.117,193,1.633,204,2.291,315,2.781,322,3.857,324,4.069,337,4.304,344,3.607,345,3.607,495,3.14,563,3.14,564,4.832,565,5.334,566,3.769,567,3.769,568,3.769,569,3.769,570,4.832,571,3.769,572,3.769,573,3.769]],["title/classes/chartDataServiceMock.html",[51,0.275,574,2.283]],["body/classes/chartDataServiceMock.html",[3,0.421,4,0.369,9,0.369,21,0.421,24,1.122,29,1.037,31,1.123,32,0.033,33,0.866,34,0.475,35,1.123,37,1.245,42,0.946,45,0.616,48,0.946,50,0.421,51,0.319,77,0.866,94,0.024,95,0.024,173,3.947,174,4.634,175,4.634,179,3.947,180,1.914,182,2.277,183,2.603,193,2.277,235,2.343,241,3.045,243,2.643,245,3.037,250,3.045,512,2.104,545,2.343,547,2.343,549,2.343,551,2.343,574,3.426,575,3.045,576,3.656,577,3.656,578,3.656,579,3.656,580,3.656,581,3.656,582,3.656,583,3.656]],["title/coverage.html",[584,3.581]],["body/coverage.html",[0,0.746,1,0.742,9,0.265,10,2.191,28,1.37,32,0.033,34,0.667,42,0.68,51,0.387,73,0.879,76,0.879,77,0.896,78,1.488,79,0.68,82,0.808,84,0.742,86,0.68,87,0.978,89,0.879,90,0.742,94,0.019,95,0.019,110,1.513,127,1.901,130,1.686,142,1.37,161,1.901,167,1.576,168,1.513,170,2.176,171,1.686,172,2.735,198,3.333,204,1.247,211,1.513,212,1.686,213,1.513,218,1.686,220,1.247,222,1.247,234,1.901,236,2.191,254,2.191,255,1.901,256,2.839,293,2.191,294,1.901,301,1.513,312,2.735,313,2.191,315,1.513,342,1.686,344,1.686,345,1.686,391,2.191,436,2.191,442,2.191,443,2.191,461,2.191,463,2.191,469,1.513,475,2.191,477,2.191,478,2.191,494,2.191,509,2.176,511,2.191,513,2.191,540,1.901,541,2.191,562,2.191,563,2.191,574,1.901,575,2.191,584,2.191,585,2.63,586,2.63,587,2.63,588,5.131,589,3.782,590,5.896,591,4.843,592,5.131,593,2.191,594,4.843,595,3.69,596,2.191,597,2.63,598,3.782,599,2.191,600,5.343,601,3.151,602,2.191,603,3.151,604,2.191,605,2.191,606,2.191,607,2.191,608,2.191,609,2.191,610,2.63,611,2.63]],["title/dependencies.html",[99,2.432,612,2.2]],["body/dependencies.html",[32,0.033,46,0.762,48,1.101,94,0.027,95,0.027,99,2.728,121,4.345,122,3.771,133,2.449,134,2.217,139,2.018,140,2.018,160,2.217,414,2.728,613,4.256,614,5.228,615,4.256,616,4.256,617,4.256,618,4.256,619,4.256,620,4.256,621,4.256,622,4.256,623,4.256,624,4.256]],["title/index.html",[21,0.304,625,2.641,626,2.641]],["body/index.html",[0,0.766,2,1.581,4,0.299,32,0.021,42,1.223,54,2.468,78,1.264,87,0.766,91,1.721,94,0.021,95,0.021,134,2.143,139,1.95,140,1.404,213,2.367,220,1.404,222,1.404,257,3.03,269,3.196,301,1.704,328,2.142,369,3.427,406,2.468,437,3.427,452,2.975,510,2.637,512,1.704,614,2.468,627,2.962,628,4.727,629,2.962,630,2.962,631,2.962,632,2.468,633,2.962,634,2.962,635,4.114,636,2.962,637,2.962,638,2.962,639,4.114,640,2.962,641,4.114,642,4.114,643,4.114,644,2.962,645,2.962,646,2.962,647,2.962,648,2.962,649,2.962,650,2.962,651,2.962,652,2.962,653,5.107,654,2.962,655,2.962,656,2.962,657,2.962,658,4.727,659,5.808,660,5.366,661,2.962,662,4.114,663,2.962,664,4.114,665,2.962,666,2.962,667,2.962,668,2.962,669,2.962,670,2.962,671,2.962,672,4.727,673,2.962,674,2.962,675,2.962,676,2.962,677,2.962,678,4.114,679,2.962,680,4.727,681,4.727,682,4.114,683,2.962,684,2.962,685,2.962,686,2.962,687,2.962,688,2.962,689,2.962,690,4.114,691,2.962,692,2.962,693,2.962,694,2.962,695,2.962,696,2.962,697,2.962,698,2.962,699,5.107,700,2.962,701,2.962,702,2.962,703,2.962,704,2.962,705,2.962]],["title/modules.html",[98,2.473]],["body/modules.html",[32,0.029,94,0.029,95,0.029,97,3.108,98,2.79,109,2.79,122,3.506,536,4.04,706,4.849,707,5.638,708,4.849,709,4.849]],["title/overview.html",[710,3.581]],["body/overview.html",[1,1.711,2,1.272,32,0.032,66,1.272,79,1.386,84,1.511,86,1.386,90,1.511,94,0.025,95,0.025,96,2.438,97,4.129,98,2.189,99,2.438,100,3.169,101,3.169,102,3.169,103,2.751,104,3.169,105,3.169,106,3.169,107,3.169,108,3.169,109,3.083,110,3.083,111,4.05,112,3.169,113,3.169,159,2.438,169,1.981,235,2.438,248,3.116,251,3.116,510,2.438,710,3.169,711,3.804,712,3.169]],["title/properties.html",[22,0.981,612,2.2]],["body/properties.html",[22,1.285,32,0.031,94,0.029,95,0.029,632,4.138,713,4.968]],["title/routes.html",[159,2.755]],["body/routes.html",[32,0.03,94,0.03,95,0.03,159,3.224]],["title/miscellaneous/typealiases.html",[714,1.693,715,3.794]],["body/miscellaneous/typealiases.html",[21,0.527,32,0.028,34,0.783,94,0.028,95,0.028,218,3.73,222,2.583,301,3.135,593,3.812,595,3.812,596,4.539,714,2.933,716,4.576,717,4.576,718,5.818,719,4.847]],["title/miscellaneous/variables.html",[714,1.693,720,3.161]],["body/miscellaneous/variables.html",[21,0.24,32,0.034,34,0.638,40,1.696,41,1.313,42,0.539,77,1.278,94,0.016,95,0.016,152,1.159,182,2.669,243,1.508,245,3.529,246,1.737,248,3.529,249,1.737,251,3.375,282,1.737,512,2.938,544,1.737,545,3.815,546,3.879,547,3.815,548,3.879,549,3.815,550,2.652,551,3.815,552,1.737,553,3.879,554,3.879,555,3.879,556,3.879,557,1.737,558,3.879,559,3.879,560,1.737,561,1.737,599,1.737,601,3.602,602,1.737,603,1.737,604,2.652,605,2.652,606,1.737,607,2.652,608,1.737,609,2.652,712,1.737,714,1.336,719,1.737,720,1.737,721,3.184,722,2.085,723,2.085,724,2.085,725,2.085,726,2.085,727,2.085,728,3.184,729,3.184,730,3.184,731,3.184,732,2.085,733,2.085,734,3.184,735,2.085,736,2.085,737,2.085,738,2.085,739,2.085,740,2.085,741,2.085,742,2.085,743,2.085,744,2.085,745,2.085,746,3.184,747,3.184,748,2.085,749,2.085,750,2.085,751,2.085,752,2.085,753,2.085,754,2.085,755,2.085]]],"invertedIndex":[["",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{},"classes/ChartFormatServiceMock.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/HttpErrorComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoaderHttpInterceptorService.html":{},"injectables/LoaderService.html":{},"interfaces/Olympic.html":{},"injectables/OlympicService.html":{},"classes/OlympicsServiceMock.html":{},"interfaces/Participation.html":{},"injectables/UnsubscribeObservableService.html":{},"classes/chartDataServiceMock.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":198,"title":{},"body":{"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"injectables/OlympicService.html":{},"coverage.html":{}}}],["0.0.0",{"_index":713,"title":{},"body":{"properties.html":{}}}],["0.14.3",{"_index":624,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":590,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":598,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":592,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":588,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":597,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":591,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":589,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":245,"title":{},"body":{"classes/ChartFormatServiceMock.html":{},"classes/OlympicsServiceMock.html":{},"classes/chartDataServiceMock.html":{},"miscellaneous/variables.html":{}}}],["100vh",{"_index":63,"title":{},"body":{"components/AppComponent.html":{}}}],["100vw",{"_index":61,"title":{},"body":{"components/AppComponent.html":{}}}],["109",{"_index":739,"title":{},"body":{"miscellaneous/variables.html":{}}}],["113",{"_index":743,"title":{},"body":{"miscellaneous/variables.html":{}}}],["120",{"_index":250,"title":{},"body":{"classes/ChartFormatServiceMock.html":{},"classes/chartDataServiceMock.html":{}}}],["123",{"_index":741,"title":{},"body":{"miscellaneous/variables.html":{}}}],["150",{"_index":247,"title":{},"body":{"classes/ChartFormatServiceMock.html":{}}}],["17",{"_index":734,"title":{},"body":{"miscellaneous/variables.html":{}}}],["18.0.3",{"_index":614,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["19.0.0",{"_index":619,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":248,"title":{},"body":{"classes/ChartFormatServiceMock.html":{},"classes/OlympicsServiceMock.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["2.3.0",{"_index":622,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":732,"title":{},"body":{"miscellaneous/variables.html":{}}}],["200",{"_index":244,"title":{},"body":{"classes/ChartFormatServiceMock.html":{}}}],["2000",{"_index":730,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2012",{"_index":546,"title":{},"body":{"classes/OlympicsServiceMock.html":{},"miscellaneous/variables.html":{}}}],["2016",{"_index":553,"title":{},"body":{"classes/OlympicsServiceMock.html":{},"miscellaneous/variables.html":{}}}],["2018",{"_index":581,"title":{},"body":{"classes/chartDataServiceMock.html":{}}}],["2020",{"_index":558,"title":{},"body":{"classes/OlympicsServiceMock.html":{},"miscellaneous/variables.html":{}}}],["21.1.2",{"_index":618,"title":{},"body":{"dependencies.html":{}}}],["28",{"_index":550,"title":{},"body":{"classes/OlympicsServiceMock.html":{},"miscellaneous/variables.html":{}}}],["3",{"_index":251,"title":{},"body":{"classes/ChartFormatServiceMock.html":{},"classes/OlympicsServiceMock.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["312",{"_index":735,"title":{},"body":{"miscellaneous/variables.html":{}}}],["315",{"_index":733,"title":{},"body":{"miscellaneous/variables.html":{}}}],["321",{"_index":736,"title":{},"body":{"miscellaneous/variables.html":{}}}],["33",{"_index":754,"title":{},"body":{"miscellaneous/variables.html":{}}}],["35",{"_index":750,"title":{},"body":{"miscellaneous/variables.html":{}}}],["350",{"_index":583,"title":{},"body":{"classes/chartDataServiceMock.html":{}}}],["37",{"_index":749,"title":{},"body":{"miscellaneous/variables.html":{}}}],["372",{"_index":552,"title":{},"body":{"classes/OlympicsServiceMock.html":{},"miscellaneous/variables.html":{}}}],["375",{"_index":557,"title":{},"body":{"classes/OlympicsServiceMock.html":{},"miscellaneous/variables.html":{}}}],["381",{"_index":561,"title":{},"body":{"classes/OlympicsServiceMock.html":{},"miscellaneous/variables.html":{}}}],["4",{"_index":745,"title":{},"body":{"miscellaneous/variables.html":{}}}],["40",{"_index":560,"title":{},"body":{"classes/OlympicsServiceMock.html":{},"miscellaneous/variables.html":{}}}],["403",{"_index":755,"title":{},"body":{"miscellaneous/variables.html":{}}}],["412",{"_index":753,"title":{},"body":{"miscellaneous/variables.html":{}}}],["422",{"_index":748,"title":{},"body":{"miscellaneous/variables.html":{}}}],["423",{"_index":751,"title":{},"body":{"miscellaneous/variables.html":{}}}],["425",{"_index":747,"title":{},"body":{"miscellaneous/variables.html":{}}}],["44",{"_index":746,"title":{},"body":{"miscellaneous/variables.html":{}}}],["45",{"_index":752,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5",{"_index":712,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["50000",{"_index":146,"title":{},"body":{"modules/AppModule.html":{}}}],["610",{"_index":740,"title":{},"body":{"miscellaneous/variables.html":{}}}],["626",{"_index":744,"title":{},"body":{"miscellaneous/variables.html":{}}}],["652",{"_index":742,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.8.0",{"_index":620,"title":{},"body":{"dependencies.html":{}}}],["800px",{"_index":65,"title":{},"body":{"components/AppComponent.html":{}}}],["9",{"_index":711,"title":{},"body":{"overview.html":{}}}],["acc",{"_index":431,"title":{},"body":{"components/DashboardCountryDetailComponent.html":{}}}],["accessors",{"_index":564,"title":{},"body":{"injectables/UnsubscribeObservableService.html":{}}}],["accumulator",{"_index":228,"title":{},"body":{"injectables/ChartFormatDataService.html":{}}}],["activatedroute",{"_index":404,"title":{},"body":{"components/DashboardCountryDetailComponent.html":{}}}],["actual_component",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/HttpErrorComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{}}}],["adjust",{"_index":702,"title":{},"body":{"index.html":{}}}],["afterviewinit",{"_index":285,"title":{},"body":{"components/CountriesChartComponent.html":{}}}],["alias",{"_index":594,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":716,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["angular",{"_index":630,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":613,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":414,"title":{},"body":{"components/DashboardCountryDetailComponent.html":{},"components/HttpErrorComponent.html":{},"components/LoaderComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"interceptors/LoaderHttpInterceptorService.html":{},"injectables/OlympicService.html":{}}}],["angular/compiler",{"_index":615,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/HttpErrorComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoaderHttpInterceptorService.html":{},"injectables/LoaderService.html":{},"injectables/OlympicService.html":{},"injectables/UnsubscribeObservableService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":616,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":160,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/CountriesChartComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/HttpErrorComponent.html":{},"dependencies.html":{}}}],["api",{"_index":694,"title":{},"body":{"index.html":{}}}],["app",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/HttpErrorComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{}}}],["app.component",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":20,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["app/core/models/interfaces/olympic",{"_index":241,"title":{},"body":{"classes/ChartFormatServiceMock.html":{},"classes/chartDataServiceMock.html":{}}}],["app/core/models/types/countryallchartformat",{"_index":239,"title":{},"body":{"classes/ChartFormatServiceMock.html":{}}}],["app/core/models/types/countrydetailchartformat",{"_index":240,"title":{},"body":{"classes/ChartFormatServiceMock.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/HttpErrorComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":369,"title":{},"body":{"components/DashboardCountriesComponent.html":{},"index.html":{}}}],["appmodule",{"_index":97,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":109,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["artifacts",{"_index":654,"title":{},"body":{"index.html":{}}}],["assets/mock/olympic.json",{"_index":523,"title":{},"body":{"injectables/OlympicService.html":{}}}],["asyncpipe",{"_index":464,"title":{},"body":{"components/LoaderComponent.html":{}}}],["athlete",{"_index":386,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["athletecount",{"_index":551,"title":{},"body":{"classes/OlympicsServiceMock.html":{},"interfaces/Participation.html":{},"classes/chartDataServiceMock.html":{},"miscellaneous/variables.html":{}}}],["automatically",{"_index":649,"title":{},"body":{"index.html":{}}}],["available",{"_index":709,"title":{},"body":{"modules.html":{}}}],["back",{"_index":460,"title":{},"body":{"components/HttpErrorComponent.html":{}}}],["bar",{"_index":669,"title":{},"body":{"index.html":{}}}],["basic",{"_index":670,"title":{},"body":{"index.html":{}}}],["before",{"_index":637,"title":{},"body":{"index.html":{}}}],["behaviorsubject",{"_index":503,"title":{},"body":{"injectables/LoaderService.html":{},"injectables/OlympicService.html":{}}}],["behaviorsubject(false",{"_index":504,"title":{},"body":{"injectables/LoaderService.html":{}}}],["behaviorsubject(null",{"_index":522,"title":{},"body":{"injectables/OlympicService.html":{}}}],["boolean",{"_index":280,"title":{},"body":{"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/HttpErrorComponent.html":{}}}],["bootstrap",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["bring",{"_index":371,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["browse",{"_index":707,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":135,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":653,"title":{},"body":{"index.html":{}}}],["business",{"_index":677,"title":{},"body":{"index.html":{}}}],["calls",{"_index":695,"title":{},"body":{"index.html":{}}}],["catcherror",{"_index":189,"title":{},"body":{"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{},"injectables/OlympicService.html":{}}}],["catcherror((error",{"_index":200,"title":{},"body":{"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{},"injectables/OlympicService.html":{}}}],["caught",{"_index":201,"title":{},"body":{"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{},"injectables/OlympicService.html":{}}}],["center",{"_index":150,"title":{},"body":{"modules/AppModule.html":{}}}],["change",{"_index":651,"title":{},"body":{"index.html":{}}}],["chart",{"_index":257,"title":{},"body":{"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/InfoDetailChartComponent.html":{},"index.html":{}}}],["chart'},{'name",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/HttpErrorComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{}}}],["chart.component",{"_index":343,"title":{},"body":{"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{}}}],["chart.component.html",{"_index":259,"title":{},"body":{"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/InfoDetailChartComponent.html":{}}}],["chart.component.scss",{"_index":261,"title":{},"body":{"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/InfoDetailChartComponent.html":{}}}],["chart.component.ts",{"_index":256,"title":{},"body":{"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/InfoDetailChartComponent.html":{},"coverage.html":{}}}],["chart.component.ts:13",{"_index":462,"title":{},"body":{"components/InfoDetailChartComponent.html":{}}}],["chart.component.ts:16",{"_index":303,"title":{},"body":{"components/CountryDetailChartComponent.html":{},"components/InfoDetailChartComponent.html":{}}}],["chart.component.ts:19",{"_index":302,"title":{},"body":{"components/CountryDetailChartComponent.html":{}}}],["chart.component.ts:20",{"_index":307,"title":{},"body":{"components/CountryDetailChartComponent.html":{}}}],["chart.component.ts:21",{"_index":310,"title":{},"body":{"components/CountryDetailChartComponent.html":{}}}],["chart.component.ts:22",{"_index":305,"title":{},"body":{"components/CountryDetailChartComponent.html":{}}}],["chart.component.ts:23",{"_index":304,"title":{},"body":{"components/CountryDetailChartComponent.html":{}}}],["chart.component.ts:24",{"_index":309,"title":{},"body":{"components/CountryDetailChartComponent.html":{}}}],["chart.component.ts:25",{"_index":306,"title":{},"body":{"components/CountryDetailChartComponent.html":{}}}],["chart.component.ts:27",{"_index":279,"title":{},"body":{"components/CountriesChartComponent.html":{}}}],["chart.component.ts:30",{"_index":273,"title":{},"body":{"components/CountriesChartComponent.html":{}}}],["chart.component.ts:31",{"_index":281,"title":{},"body":{"components/CountriesChartComponent.html":{}}}],["chart.component.ts:32",{"_index":284,"title":{},"body":{"components/CountriesChartComponent.html":{}}}],["chart.component.ts:33",{"_index":283,"title":{},"body":{"components/CountriesChartComponent.html":{}}}],["chart.component.ts:34",{"_index":272,"title":{},"body":{"components/CountriesChartComponent.html":{}}}],["chart.component.ts:39",{"_index":275,"title":{},"body":{"components/CountriesChartComponent.html":{}}}],["chart/${idcountry}`).catch(error",{"_index":292,"title":{},"body":{"components/CountriesChartComponent.html":{}}}],["chart/:id",{"_index":165,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["chart/countries",{"_index":255,"title":{},"body":{"components/CountriesChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"coverage.html":{}}}],["chart/country",{"_index":294,"title":{},"body":{"components/CountryDetailChartComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"coverage.html":{}}}],["chart/info",{"_index":342,"title":{},"body":{"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/InfoDetailChartComponent.html":{},"coverage.html":{}}}],["chartdata",{"_index":328,"title":{},"body":{"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"index.html":{}}}],["chartdataservice",{"_index":168,"title":{"injectables/ChartDataService.html":{}},"body":{"injectables/ChartDataService.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"coverage.html":{}}}],["chartdataservicemock",{"_index":574,"title":{"classes/chartDataServiceMock.html":{}},"body":{"classes/chartDataServiceMock.html":{},"coverage.html":{}}}],["chartformat",{"_index":406,"title":{},"body":{"components/DashboardCountryDetailComponent.html":{},"index.html":{}}}],["chartformatdataservice",{"_index":211,"title":{"injectables/ChartFormatDataService.html":{}},"body":{"injectables/ChartFormatDataService.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"coverage.html":{}}}],["chartformatservice",{"_index":326,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["chartformatservicemock",{"_index":234,"title":{"classes/ChartFormatServiceMock.html":{}},"body":{"classes/ChartFormatServiceMock.html":{},"coverage.html":{}}}],["charts",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"dependencies.html":{},"index.html":{}}}],["circular",{"_index":663,"title":{},"body":{"index.html":{}}}],["city",{"_index":547,"title":{},"body":{"classes/OlympicsServiceMock.html":{},"interfaces/Participation.html":{},"classes/chartDataServiceMock.html":{},"miscellaneous/variables.html":{}}}],["class",{"_index":51,"title":{"classes/ChartFormatServiceMock.html":{},"classes/OlympicsServiceMock.html":{},"classes/chartDataServiceMock.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{},"classes/ChartFormatServiceMock.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/HttpErrorComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoaderHttpInterceptorService.html":{},"injectables/LoaderService.html":{},"injectables/OlympicService.html":{},"classes/OlympicsServiceMock.html":{},"injectables/UnsubscribeObservableService.html":{},"classes/chartDataServiceMock.html":{},"coverage.html":{}}}],["classes",{"_index":235,"title":{},"body":{"classes/ChartFormatServiceMock.html":{},"classes/OlympicsServiceMock.html":{},"classes/chartDataServiceMock.html":{},"overview.html":{}}}],["cli",{"_index":631,"title":{},"body":{"index.html":{}}}],["closure",{"_index":697,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["column",{"_index":58,"title":{},"body":{"components/AppComponent.html":{}}}],["combinelatest",{"_index":339,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/HttpErrorComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/HttpErrorComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/HttpErrorComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/HttpErrorComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{},"index.html":{},"overview.html":{}}}],["components/countries",{"_index":348,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["components/country",{"_index":415,"title":{},"body":{"components/DashboardCountryDetailComponent.html":{}}}],["components/header/header.component",{"_index":125,"title":{},"body":{"modules/AppModule.html":{}}}],["components/http",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{}}}],["components/info",{"_index":341,"title":{},"body":{"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{}}}],["components/loader/loader.component",{"_index":137,"title":{},"body":{"modules/AppModule.html":{}}}],["const",{"_index":163,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/ChartFormatServiceMock.html":{},"components/CountriesChartComponent.html":{},"components/DashboardCountryDetailComponent.html":{}}}],["constructor",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{},"components/CountriesChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HttpErrorComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoaderHttpInterceptorService.html":{},"injectables/LoaderService.html":{},"injectables/OlympicService.html":{}}}],["constructor(chartdata",{"_index":325,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["constructor(chartformat",{"_index":402,"title":{},"body":{"components/DashboardCountryDetailComponent.html":{}}}],["constructor(http",{"_index":517,"title":{},"body":{"injectables/OlympicService.html":{}}}],["constructor(loaderservice",{"_index":468,"title":{},"body":{"components/LoaderComponent.html":{},"interceptors/LoaderHttpInterceptorService.html":{}}}],["constructor(olympicservice",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{}}}],["constructor(private",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{},"components/CountriesChartComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HttpErrorComponent.html":{},"interceptors/LoaderHttpInterceptorService.html":{}}}],["constructor(router",{"_index":270,"title":{},"body":{"components/CountriesChartComponent.html":{},"components/HttpErrorComponent.html":{}}}],["contact",{"_index":535,"title":{},"body":{"injectables/OlympicService.html":{}}}],["containerref",{"_index":262,"title":{},"body":{"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{}}}],["contains",{"_index":660,"title":{},"body":{"index.html":{}}}],["context",{"_index":604,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["core",{"_index":676,"title":{},"body":{"index.html":{}}}],["core/models/types/countrydetailchartformat",{"_index":311,"title":{},"body":{"components/CountryDetailChartComponent.html":{}}}],["core/services/loader",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["core/services/loader/loader.service",{"_index":472,"title":{},"body":{"components/LoaderComponent.html":{}}}],["core/services/olympic/olympic.service",{"_index":49,"title":{},"body":{"components/AppComponent.html":{}}}],["corresponding",{"_index":451,"title":{},"body":{"components/HttpErrorComponent.html":{}}}],["countries",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/HttpErrorComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{}}}],["countries'},{'name",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/HttpErrorComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{}}}],["countries.component",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["countries.component.html",{"_index":316,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["countries.component.scss",{"_index":317,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["countries.component.ts",{"_index":313,"title":{},"body":{"components/DashboardCountriesComponent.html":{},"coverage.html":{}}}],["countries.component.ts:22",{"_index":336,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["countries.component.ts:23",{"_index":335,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["countries.component.ts:24",{"_index":333,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["countries.component.ts:25",{"_index":334,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["countries.component.ts:26",{"_index":327,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["countries.component.ts:35",{"_index":332,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["countries.component.ts:40",{"_index":329,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["countries/dashboard",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DashboardCountriesComponent.html":{},"coverage.html":{}}}],["countrieschart",{"_index":662,"title":{},"body":{"index.html":{}}}],["countrieschartcomponent",{"_index":73,"title":{"components/CountriesChartComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/HttpErrorComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{},"coverage.html":{}}}],["country",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/HttpErrorComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{},"interfaces/Olympic.html":{},"classes/OlympicsServiceMock.html":{},"classes/chartDataServiceMock.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["countryallchartformat",{"_index":222,"title":{},"body":{"injectables/ChartFormatDataService.html":{},"classes/ChartFormatServiceMock.html":{},"components/CountriesChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["countrydata",{"_index":423,"title":{},"body":{"components/DashboardCountryDetailComponent.html":{}}}],["countrydata.participations.length",{"_index":428,"title":{},"body":{"components/DashboardCountryDetailComponent.html":{}}}],["countrydata.participations.reduce((acc",{"_index":430,"title":{},"body":{"components/DashboardCountryDetailComponent.html":{}}}],["countrydetailchart",{"_index":664,"title":{},"body":{"index.html":{}}}],["countrydetailchartcomponent",{"_index":76,"title":{"components/CountryDetailChartComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/HttpErrorComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{},"coverage.html":{}}}],["countrydetailchartdata",{"_index":218,"title":{},"body":{"injectables/ChartFormatDataService.html":{},"classes/ChartFormatServiceMock.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["countrydetailchartformat",{"_index":301,"title":{},"body":{"components/CountryDetailChartComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["countryid",{"_index":420,"title":{},"body":{"components/DashboardCountryDetailComponent.html":{}}}],["countryselecteddata",{"_index":400,"title":{},"body":{"components/DashboardCountryDetailComponent.html":{}}}],["countryselecteddata.country",{"_index":435,"title":{},"body":{"components/DashboardCountryDetailComponent.html":{}}}],["counts",{"_index":385,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["coverage",{"_index":584,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["dashboard",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/HttpErrorComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{}}}],["dashboardcountries",{"_index":674,"title":{},"body":{"index.html":{}}}],["dashboardcountriescomponent",{"_index":79,"title":{"components/DashboardCountriesComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/HttpErrorComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dashboardcountrydetail",{"_index":675,"title":{},"body":{"index.html":{}}}],["dashboardcountrydetailcomponent",{"_index":82,"title":{"components/DashboardCountryDetailComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/HttpErrorComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{},"coverage.html":{}}}],["dashboarddata",{"_index":358,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["data",{"_index":269,"title":{},"body":{"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"index.html":{}}}],["data.athletecount",{"_index":434,"title":{},"body":{"components/DashboardCountryDetailComponent.html":{}}}],["data.extra.id",{"_index":290,"title":{},"body":{"components/CountriesChartComponent.html":{}}}],["data.medalscount",{"_index":432,"title":{},"body":{"components/DashboardCountryDetailComponent.html":{}}}],["data.service",{"_index":347,"title":{},"body":{"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{}}}],["data.service.ts",{"_index":172,"title":{},"body":{"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{},"coverage.html":{}}}],["data.service.ts:11",{"_index":178,"title":{},"body":{"injectables/ChartDataService.html":{}}}],["data.service.ts:14",{"_index":216,"title":{},"body":{"injectables/ChartFormatDataService.html":{}}}],["data.service.ts:16",{"_index":185,"title":{},"body":{"injectables/ChartDataService.html":{}}}],["data.service.ts:19",{"_index":219,"title":{},"body":{"injectables/ChartFormatDataService.html":{}}}],["data.service.ts:29",{"_index":184,"title":{},"body":{"injectables/ChartDataService.html":{}}}],["data.service.ts:42",{"_index":181,"title":{},"body":{"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{}}}],["data/chart",{"_index":171,"title":{},"body":{"injectables/ChartDataService.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"coverage.html":{}}}],["datacountrychart",{"_index":401,"title":{},"body":{"components/DashboardCountryDetailComponent.html":{}}}],["datafordashboard",{"_index":318,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["dates",{"_index":308,"title":{},"body":{"components/CountryDetailChartComponent.html":{}}}],["de",{"_index":555,"title":{},"body":{"classes/OlympicsServiceMock.html":{},"miscellaneous/variables.html":{}}}],["declarations",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decorators",{"_index":277,"title":{},"body":{"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{}}}],["default",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HttpErrorComponent.html":{},"injectables/LoaderService.html":{},"injectables/OlympicService.html":{},"injectables/UnsubscribeObservableService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{},"classes/ChartFormatServiceMock.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HttpErrorComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoaderHttpInterceptorService.html":{},"injectables/LoaderService.html":{},"injectables/OlympicService.html":{},"classes/OlympicsServiceMock.html":{},"injectables/UnsubscribeObservableService.html":{},"classes/chartDataServiceMock.html":{}}}],["defines",{"_index":699,"title":{},"body":{"index.html":{}}}],["demographics",{"_index":383,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["dependencies",{"_index":99,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["designed",{"_index":370,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["detail",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/HttpErrorComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{},"coverage.html":{},"index.html":{}}}],["detail'},{'name",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/HttpErrorComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{}}}],["detail.component",{"_index":162,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["detail.component.html",{"_index":394,"title":{},"body":{"components/DashboardCountryDetailComponent.html":{}}}],["detail.component.scss",{"_index":395,"title":{},"body":{"components/DashboardCountryDetailComponent.html":{}}}],["detail.component.ts",{"_index":391,"title":{},"body":{"components/DashboardCountryDetailComponent.html":{},"coverage.html":{}}}],["detail.component.ts:32",{"_index":407,"title":{},"body":{"components/DashboardCountryDetailComponent.html":{}}}],["detail.component.ts:34",{"_index":408,"title":{},"body":{"components/DashboardCountryDetailComponent.html":{}}}],["detail.component.ts:36",{"_index":412,"title":{},"body":{"components/DashboardCountryDetailComponent.html":{}}}],["detail.component.ts:37",{"_index":413,"title":{},"body":{"components/DashboardCountryDetailComponent.html":{}}}],["detail.component.ts:38",{"_index":405,"title":{},"body":{"components/DashboardCountryDetailComponent.html":{}}}],["detail.component.ts:47",{"_index":410,"title":{},"body":{"components/DashboardCountryDetailComponent.html":{}}}],["detail.component.ts:51",{"_index":409,"title":{},"body":{"components/DashboardCountryDetailComponent.html":{}}}],["detail/dashboard",{"_index":161,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/DashboardCountryDetailComponent.html":{},"coverage.html":{}}}],["dev",{"_index":646,"title":{},"body":{"index.html":{}}}],["development",{"_index":640,"title":{},"body":{"index.html":{}}}],["directive",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/HttpErrorComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{}}}],["directives",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/HttpErrorComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{}}}],["directory",{"_index":657,"title":{},"body":{"index.html":{}}}],["display",{"_index":55,"title":{},"body":{"components/AppComponent.html":{}}}],["displaying",{"_index":691,"title":{},"body":{"index.html":{}}}],["dist",{"_index":656,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":585,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/HttpErrorComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{}}}],["don't",{"_index":633,"title":{},"body":{"index.html":{}}}],["dynamic",{"_index":617,"title":{},"body":{"dependencies.html":{}}}],["dynamically",{"_index":704,"title":{},"body":{"index.html":{}}}],["editions",{"_index":390,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["element",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/HttpErrorComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{}}}],["elementref",{"_index":276,"title":{},"body":{"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{}}}],["engaging",{"_index":376,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["environment",{"_index":601,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":444,"title":{},"body":{"components/HttpErrorComponent.html":{}}}],["error'},{'name",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/HttpErrorComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{}}}],["error.component",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{}}}],["error.component.html",{"_index":445,"title":{},"body":{"components/HttpErrorComponent.html":{}}}],["error.component.scss",{"_index":446,"title":{},"body":{"components/HttpErrorComponent.html":{}}}],["error.component.ts",{"_index":443,"title":{},"body":{"components/HttpErrorComponent.html":{},"coverage.html":{}}}],["error.component.ts:18",{"_index":454,"title":{},"body":{"components/HttpErrorComponent.html":{}}}],["error.component.ts:21",{"_index":455,"title":{},"body":{"components/HttpErrorComponent.html":{}}}],["error.component.ts:23",{"_index":450,"title":{},"body":{"components/HttpErrorComponent.html":{}}}],["error.component.ts:28",{"_index":456,"title":{},"body":{"components/HttpErrorComponent.html":{}}}],["error/http",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HttpErrorComponent.html":{},"coverage.html":{}}}],["export",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{},"classes/ChartFormatServiceMock.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/HttpErrorComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoaderHttpInterceptorService.html":{},"injectables/LoaderService.html":{},"interfaces/Olympic.html":{},"injectables/OlympicService.html":{},"classes/OlympicsServiceMock.html":{},"interfaces/Participation.html":{},"injectables/UnsubscribeObservableService.html":{},"classes/chartDataServiceMock.html":{}}}],["exports",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["extends",{"_index":314,"title":{},"body":{"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{}}}],["extra",{"_index":230,"title":{},"body":{"injectables/ChartFormatDataService.html":{},"classes/ChartFormatServiceMock.html":{}}}],["false",{"_index":282,"title":{},"body":{"components/CountriesChartComponent.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{},"classes/ChartFormatServiceMock.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/HttpErrorComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoaderHttpInterceptorService.html":{},"injectables/LoaderService.html":{},"interfaces/Olympic.html":{},"injectables/OlympicService.html":{},"classes/OlympicsServiceMock.html":{},"interfaces/Participation.html":{},"injectables/UnsubscribeObservableService.html":{},"classes/chartDataServiceMock.html":{},"coverage.html":{}}}],["files",{"_index":652,"title":{},"body":{"index.html":{}}}],["finalize",{"_index":489,"title":{},"body":{"interceptors/LoaderHttpInterceptorService.html":{}}}],["flex",{"_index":56,"title":{},"body":{"components/AppComponent.html":{}}}],["flow",{"_index":57,"title":{},"body":{"components/AppComponent.html":{}}}],["folder",{"_index":659,"title":{},"body":{"index.html":{}}}],["folders",{"_index":683,"title":{},"body":{"index.html":{}}}],["forget",{"_index":634,"title":{},"body":{"index.html":{}}}],["format",{"_index":213,"title":{},"body":{"injectables/ChartFormatDataService.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"coverage.html":{},"index.html":{}}}],["format/chart",{"_index":212,"title":{},"body":{"injectables/ChartFormatDataService.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"coverage.html":{}}}],["formats",{"_index":687,"title":{},"body":{"index.html":{}}}],["found",{"_index":453,"title":{},"body":{"components/HttpErrorComponent.html":{}}}],["france",{"_index":243,"title":{},"body":{"classes/ChartFormatServiceMock.html":{},"classes/chartDataServiceMock.html":{},"miscellaneous/variables.html":{}}}],["games",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/HeaderComponent.html":{}}}],["generated",{"_index":629,"title":{},"body":{"index.html":{}}}],["germany",{"_index":246,"title":{},"body":{"classes/ChartFormatServiceMock.html":{},"miscellaneous/variables.html":{}}}],["getcountriesdata",{"_index":323,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["getcountrydata",{"_index":399,"title":{},"body":{"components/DashboardCountryDetailComponent.html":{}}}],["getdatabycountryid",{"_index":173,"title":{},"body":{"injectables/ChartDataService.html":{},"classes/chartDataServiceMock.html":{}}}],["getdatabycountryid(id",{"_index":179,"title":{},"body":{"injectables/ChartDataService.html":{},"classes/chartDataServiceMock.html":{}}}],["getformatdataforlinechartbycountry",{"_index":214,"title":{},"body":{"injectables/ChartFormatDataService.html":{},"classes/ChartFormatServiceMock.html":{}}}],["getformatdataforlinechartbycountry(olympic",{"_index":217,"title":{},"body":{"injectables/ChartFormatDataService.html":{},"classes/ChartFormatServiceMock.html":{}}}],["getformatdataforpiechartforallcountry",{"_index":215,"title":{},"body":{"injectables/ChartFormatDataService.html":{},"classes/ChartFormatServiceMock.html":{}}}],["getgetunsubscribe",{"_index":568,"title":{},"body":{"injectables/UnsubscribeObservableService.html":{}}}],["getolympics",{"_index":515,"title":{},"body":{"injectables/OlympicService.html":{},"classes/OlympicsServiceMock.html":{}}}],["getting",{"_index":625,"title":{"index.html":{}},"body":{}}],["gettotalcountry",{"_index":174,"title":{},"body":{"injectables/ChartDataService.html":{},"classes/chartDataServiceMock.html":{}}}],["gettotaljos",{"_index":175,"title":{},"body":{"injectables/ChartDataService.html":{},"classes/chartDataServiceMock.html":{}}}],["getunsubscribe",{"_index":565,"title":{},"body":{"injectables/UnsubscribeObservableService.html":{}}}],["go",{"_index":459,"title":{},"body":{"components/HttpErrorComponent.html":{}}}],["gradient",{"_index":263,"title":{},"body":{"components/CountriesChartComponent.html":{}}}],["graph",{"_index":708,"title":{},"body":{"modules.html":{}}}],["graphical",{"_index":378,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["graphics",{"_index":688,"title":{},"body":{"index.html":{}}}],["handles",{"_index":685,"title":{},"body":{"index.html":{}}}],["header",{"_index":437,"title":{},"body":{"components/HeaderComponent.html":{},"index.html":{}}}],["header'},{'name",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/HttpErrorComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{}}}],["header.component.html",{"_index":440,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.scss",{"_index":441,"title":{},"body":{"components/HeaderComponent.html":{}}}],["headercomponent",{"_index":84,"title":{"components/HeaderComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/HttpErrorComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["height",{"_index":62,"title":{},"body":{"components/AppComponent.html":{}}}],["history",{"_index":372,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["html",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/HttpErrorComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{}}}],["http",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/HttpErrorComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoaderHttpInterceptorService.html":{},"injectables/OlympicService.html":{},"coverage.html":{},"index.html":{}}}],["http://localhost:4200",{"_index":648,"title":{},"body":{"index.html":{}}}],["http_interceptors",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":518,"title":{},"body":{"injectables/OlympicService.html":{}}}],["httpclientmodule",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorcomponent",{"_index":86,"title":{"components/HttpErrorComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/HttpErrorComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["httpevent",{"_index":487,"title":{},"body":{"interceptors/LoaderHttpInterceptorService.html":{}}}],["httphandler",{"_index":484,"title":{},"body":{"interceptors/LoaderHttpInterceptorService.html":{}}}],["httpinterceptor",{"_index":488,"title":{},"body":{"interceptors/LoaderHttpInterceptorService.html":{}}}],["httprequest",{"_index":482,"title":{},"body":{"interceptors/LoaderHttpInterceptorService.html":{}}}],["id",{"_index":182,"title":{},"body":{"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{},"classes/ChartFormatServiceMock.html":{},"interfaces/Olympic.html":{},"classes/OlympicsServiceMock.html":{},"interfaces/Participation.html":{},"classes/chartDataServiceMock.html":{},"miscellaneous/variables.html":{}}}],["idcountry",{"_index":289,"title":{},"body":{"components/CountriesChartComponent.html":{}}}],["identifier",{"_index":586,"title":{},"body":{"coverage.html":{}}}],["if(isdataloaded",{"_index":366,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["implements",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HttpErrorComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoaderHttpInterceptorService.html":{},"injectables/UnsubscribeObservableService.html":{}}}],["import",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{},"classes/ChartFormatServiceMock.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/HttpErrorComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoaderHttpInterceptorService.html":{},"injectables/LoaderService.html":{},"interfaces/Olympic.html":{},"injectables/OlympicService.html":{},"classes/OlympicsServiceMock.html":{},"injectables/UnsubscribeObservableService.html":{},"classes/chartDataServiceMock.html":{}}}],["imports",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/HttpErrorComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{}}}],["including",{"_index":679,"title":{},"body":{"index.html":{}}}],["index",{"_index":21,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{},"classes/ChartFormatServiceMock.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HttpErrorComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoaderHttpInterceptorService.html":{},"injectables/LoaderService.html":{},"interfaces/Olympic.html":{},"injectables/OlympicService.html":{},"classes/OlympicsServiceMock.html":{},"interfaces/Participation.html":{},"injectables/UnsubscribeObservableService.html":{},"classes/chartDataServiceMock.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{},"classes/ChartFormatServiceMock.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/HttpErrorComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoaderHttpInterceptorService.html":{},"injectables/LoaderService.html":{},"interfaces/Olympic.html":{},"injectables/OlympicService.html":{},"classes/OlympicsServiceMock.html":{},"interfaces/Participation.html":{},"injectables/UnsubscribeObservableService.html":{},"classes/chartDataServiceMock.html":{}}}],["infodetailchart",{"_index":666,"title":{},"body":{"index.html":{}}}],["infodetailchartcomponent",{"_index":89,"title":{"components/InfoDetailChartComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/HttpErrorComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{},"coverage.html":{}}}],["inherited",{"_index":330,"title":{},"body":{"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{}}}],["injectable",{"_index":167,"title":{"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{},"injectables/LoaderService.html":{},"injectables/OlympicService.html":{},"injectables/UnsubscribeObservableService.html":{}},"body":{"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{},"interceptors/LoaderHttpInterceptorService.html":{},"injectables/LoaderService.html":{},"injectables/OlympicService.html":{},"injectables/UnsubscribeObservableService.html":{},"coverage.html":{}}}],["injectables",{"_index":169,"title":{},"body":{"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{},"injectables/LoaderService.html":{},"injectables/OlympicService.html":{},"injectables/UnsubscribeObservableService.html":{},"overview.html":{}}}],["input",{"_index":286,"title":{},"body":{"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HttpErrorComponent.html":{},"components/InfoDetailChartComponent.html":{}}}],["inputs",{"_index":268,"title":{},"body":{"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HttpErrorComponent.html":{},"components/InfoDetailChartComponent.html":{}}}],["install",{"_index":635,"title":{},"body":{"index.html":{}}}],["interactive",{"_index":377,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["intercept",{"_index":479,"title":{},"body":{"interceptors/LoaderHttpInterceptorService.html":{}}}],["intercept(req",{"_index":481,"title":{},"body":{"interceptors/LoaderHttpInterceptorService.html":{}}}],["interceptor",{"_index":475,"title":{"interceptors/LoaderHttpInterceptorService.html":{}},"body":{"coverage.html":{}}}],["interceptor.service",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["interceptor.service.ts",{"_index":478,"title":{},"body":{"interceptors/LoaderHttpInterceptorService.html":{},"coverage.html":{}}}],["interceptor.service.ts:14",{"_index":485,"title":{},"body":{"interceptors/LoaderHttpInterceptorService.html":{}}}],["interceptor.service.ts:9",{"_index":480,"title":{},"body":{"interceptors/LoaderHttpInterceptorService.html":{}}}],["interceptor/loader",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"interceptors/LoaderHttpInterceptorService.html":{},"coverage.html":{}}}],["interceptors",{"_index":476,"title":{},"body":{"interceptors/LoaderHttpInterceptorService.html":{}}}],["interface",{"_index":509,"title":{"interfaces/Olympic.html":{},"interfaces/Participation.html":{}},"body":{"interfaces/Olympic.html":{},"interfaces/Participation.html":{},"coverage.html":{}}}],["interfaces",{"_index":510,"title":{},"body":{"interfaces/Olympic.html":{},"interfaces/Participation.html":{},"index.html":{},"overview.html":{}}}],["isdataloaded",{"_index":319,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["isdoughnut",{"_index":264,"title":{},"body":{"components/CountriesChartComponent.html":{}}}],["italy",{"_index":544,"title":{},"body":{"classes/OlympicsServiceMock.html":{},"miscellaneous/variables.html":{}}}],["janeiro",{"_index":556,"title":{},"body":{"classes/OlympicsServiceMock.html":{},"miscellaneous/variables.html":{}}}],["key",{"_index":380,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["la",{"_index":582,"title":{},"body":{"classes/chartDataServiceMock.html":{}}}],["later",{"_index":534,"title":{},"body":{"injectables/OlympicService.html":{}}}],["legend",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/HttpErrorComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{},"overview.html":{}}}],["libraries",{"_index":705,"title":{},"body":{"index.html":{}}}],["library",{"_index":689,"title":{},"body":{"index.html":{}}}],["life",{"_index":373,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["line",{"_index":665,"title":{},"body":{"index.html":{}}}],["linechartmodule",{"_index":392,"title":{},"body":{"components/DashboardCountryDetailComponent.html":{}}}],["literal",{"_index":719,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["loader",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/HttpErrorComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{},"index.html":{}}}],["loader.component.html",{"_index":465,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loader.component.scss",{"_index":466,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loader/loader.service",{"_index":490,"title":{},"body":{"interceptors/LoaderHttpInterceptorService.html":{}}}],["loadercomponent",{"_index":90,"title":{"components/LoaderComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/HttpErrorComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loaderhttpinterceptorservice",{"_index":110,"title":{"interceptors/LoaderHttpInterceptorService.html":{}},"body":{"modules/AppModule.html":{},"interceptors/LoaderHttpInterceptorService.html":{},"coverage.html":{},"overview.html":{}}}],["loaders",{"_index":692,"title":{},"body":{"index.html":{}}}],["loaderservice",{"_index":469,"title":{"injectables/LoaderService.html":{}},"body":{"components/LoaderComponent.html":{},"interceptors/LoaderHttpInterceptorService.html":{},"injectables/LoaderService.html":{},"coverage.html":{}}}],["loading",{"_index":467,"title":{},"body":{"components/LoaderComponent.html":{},"injectables/LoaderService.html":{}}}],["loadingoff",{"_index":497,"title":{},"body":{"injectables/LoaderService.html":{}}}],["loadingon",{"_index":498,"title":{},"body":{"injectables/LoaderService.html":{}}}],["loadingsubject",{"_index":496,"title":{},"body":{"injectables/LoaderService.html":{}}}],["loadinitialdata",{"_index":516,"title":{},"body":{"injectables/OlympicService.html":{},"classes/OlympicsServiceMock.html":{}}}],["logic",{"_index":678,"title":{},"body":{"index.html":{}}}],["londres",{"_index":548,"title":{},"body":{"classes/OlympicsServiceMock.html":{},"miscellaneous/variables.html":{}}}],["main",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["manages",{"_index":690,"title":{},"body":{"index.html":{}}}],["map",{"_index":186,"title":{},"body":{"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{}}}],["map((olympic",{"_index":203,"title":{},"body":{"injectables/ChartDataService.html":{}}}],["map((olympics",{"_index":195,"title":{},"body":{"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{}}}],["matching",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{},"classes/ChartFormatServiceMock.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/HttpErrorComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoaderHttpInterceptorService.html":{},"injectables/LoaderService.html":{},"interfaces/Olympic.html":{},"injectables/OlympicService.html":{},"classes/OlympicsServiceMock.html":{},"interfaces/Participation.html":{},"injectables/UnsubscribeObservableService.html":{},"classes/chartDataServiceMock.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["medal",{"_index":384,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["medals",{"_index":351,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["medalscount",{"_index":549,"title":{},"body":{"classes/OlympicsServiceMock.html":{},"interfaces/Participation.html":{},"classes/chartDataServiceMock.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":448,"title":{},"body":{"components/HttpErrorComponent.html":{}}}],["metadata",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/HttpErrorComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{}}}],["methods",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{},"classes/ChartFormatServiceMock.html":{},"components/CountriesChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HttpErrorComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoaderHttpInterceptorService.html":{},"injectables/LoaderService.html":{},"injectables/OlympicService.html":{},"classes/OlympicsServiceMock.html":{},"injectables/UnsubscribeObservableService.html":{},"classes/chartDataServiceMock.html":{}}}],["min",{"_index":64,"title":{},"body":{"components/AppComponent.html":{}}}],["miscellaneous",{"_index":714,"title":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mockdata",{"_index":242,"title":{},"body":{"classes/ChartFormatServiceMock.html":{}}}],["models",{"_index":682,"title":{},"body":{"index.html":{}}}],["models/interfaces/olympic",{"_index":188,"title":{},"body":{"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{},"injectables/OlympicService.html":{}}}],["models/interfaces/participation",{"_index":221,"title":{},"body":{"injectables/ChartFormatDataService.html":{}}}],["models/types/countryallchartformat",{"_index":223,"title":{},"body":{"injectables/ChartFormatDataService.html":{}}}],["models/types/countrydetailchartformat",{"_index":224,"title":{},"body":{"injectables/ChartFormatDataService.html":{}}}],["module",{"_index":96,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":98,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":388,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["multi",{"_index":155,"title":{},"body":{"modules/AppModule.html":{}}}],["name",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{},"classes/ChartFormatServiceMock.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/HttpErrorComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoaderHttpInterceptorService.html":{},"injectables/OlympicService.html":{},"classes/chartDataServiceMock.html":{}}}],["navigate",{"_index":647,"title":{},"body":{"index.html":{}}}],["navigation",{"_index":668,"title":{},"body":{"index.html":{}}}],["new",{"_index":204,"title":{},"body":{"injectables/ChartDataService.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"injectables/LoaderService.html":{},"injectables/OlympicService.html":{},"injectables/UnsubscribeObservableService.html":{},"coverage.html":{}}}],["next",{"_index":483,"title":{},"body":{"interceptors/LoaderHttpInterceptorService.html":{}}}],["next.handle(req).pipe",{"_index":492,"title":{},"body":{"interceptors/LoaderHttpInterceptorService.html":{}}}],["ng",{"_index":643,"title":{},"body":{"index.html":{}}}],["ngif",{"_index":393,"title":{},"body":{"components/DashboardCountryDetailComponent.html":{},"components/HttpErrorComponent.html":{},"components/LoaderComponent.html":{}}}],["ngmodule",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngondestroy",{"_index":324,"title":{},"body":{"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"injectables/UnsubscribeObservableService.html":{}}}],["ngoninit",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HttpErrorComponent.html":{},"components/LoaderComponent.html":{}}}],["ngx",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{},"components/CountriesChartComponent.html":{},"injectables/OlympicService.html":{},"dependencies.html":{},"index.html":{}}}],["ngxchartsmodule",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{}}}],["node_modules",{"_index":636,"title":{},"body":{"index.html":{}}}],["nowrap",{"_index":59,"title":{},"body":{"components/AppComponent.html":{}}}],["npm",{"_index":639,"title":{},"body":{"index.html":{}}}],["null",{"_index":196,"title":{},"body":{"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{},"injectables/OlympicService.html":{}}}],["number",{"_index":180,"title":{},"body":{"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{},"components/CountriesChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HttpErrorComponent.html":{},"components/InfoDetailChartComponent.html":{},"interfaces/Olympic.html":{},"interfaces/Participation.html":{},"classes/chartDataServiceMock.html":{}}}],["number(id",{"_index":210,"title":{},"body":{"injectables/ChartDataService.html":{}}}],["numberofentries",{"_index":396,"title":{},"body":{"components/DashboardCountryDetailComponent.html":{}}}],["object",{"_index":728,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observable",{"_index":183,"title":{},"body":{"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{},"classes/ChartFormatServiceMock.html":{},"components/LoaderComponent.html":{},"interceptors/LoaderHttpInterceptorService.html":{},"injectables/LoaderService.html":{},"injectables/OlympicService.html":{},"classes/chartDataServiceMock.html":{}}}],["observable.service",{"_index":346,"title":{},"body":{"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{}}}],["observable.service.ts",{"_index":563,"title":{},"body":{"injectables/UnsubscribeObservableService.html":{},"coverage.html":{}}}],["observable.service.ts:14",{"_index":569,"title":{},"body":{"injectables/UnsubscribeObservableService.html":{}}}],["observable.service.ts:7",{"_index":567,"title":{},"body":{"injectables/UnsubscribeObservableService.html":{}}}],["observable.service.ts:9",{"_index":566,"title":{},"body":{"injectables/UnsubscribeObservableService.html":{}}}],["observable/unsubscribe",{"_index":345,"title":{},"body":{"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"injectables/UnsubscribeObservableService.html":{},"coverage.html":{}}}],["observables",{"_index":698,"title":{},"body":{"index.html":{}}}],["of(2",{"_index":579,"title":{},"body":{"classes/chartDataServiceMock.html":{}}}],["of(5",{"_index":580,"title":{},"body":{"classes/chartDataServiceMock.html":{}}}],["of(mockdata",{"_index":252,"title":{},"body":{"classes/ChartFormatServiceMock.html":{}}}],["offering",{"_index":374,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["olymp.country)).size",{"_index":206,"title":{},"body":{"injectables/ChartDataService.html":{}}}],["olympic",{"_index":42,"title":{"interfaces/Olympic.html":{}},"body":{"components/AppComponent.html":{},"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{},"classes/ChartFormatServiceMock.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"interfaces/Olympic.html":{},"injectables/OlympicService.html":{},"classes/chartDataServiceMock.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["olympic.country",{"_index":226,"title":{},"body":{"injectables/ChartFormatDataService.html":{}}}],["olympic.id",{"_index":209,"title":{},"body":{"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{}}}],["olympic.participations.map((participation",{"_index":232,"title":{},"body":{"injectables/ChartFormatDataService.html":{}}}],["olympic.participations.reduce((accumulator",{"_index":227,"title":{},"body":{"injectables/ChartFormatDataService.html":{}}}],["olympic/olympic.service",{"_index":187,"title":{},"body":{"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{}}}],["olympicgamesstarter",{"_index":627,"title":{},"body":{"index.html":{}}}],["olympics",{"_index":197,"title":{},"body":{"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{},"injectables/OlympicService.html":{}}}],["olympics.find(olympic",{"_index":208,"title":{},"body":{"injectables/ChartDataService.html":{}}}],["olympics.map(olympic",{"_index":225,"title":{},"body":{"injectables/ChartFormatDataService.html":{}}}],["olympics[0].participations.length",{"_index":199,"title":{},"body":{"injectables/ChartDataService.html":{}}}],["olympicservice",{"_index":28,"title":{"injectables/OlympicService.html":{}},"body":{"components/AppComponent.html":{},"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{},"injectables/OlympicService.html":{},"coverage.html":{}}}],["olympicsmockdata",{"_index":607,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["olympicsservicemock",{"_index":540,"title":{"classes/OlympicsServiceMock.html":{}},"body":{"classes/OlympicsServiceMock.html":{},"coverage.html":{}}}],["olympicstest",{"_index":609,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["olympicurl",{"_index":514,"title":{},"body":{"injectables/OlympicService.html":{}}}],["olympicurl:string",{"_index":526,"title":{},"body":{"injectables/OlympicService.html":{}}}],["ondestroy",{"_index":570,"title":{},"body":{"injectables/UnsubscribeObservableService.html":{}}}],["oninit",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HttpErrorComponent.html":{},"components/LoaderComponent.html":{}}}],["onresize",{"_index":701,"title":{},"body":{"index.html":{}}}],["onselect",{"_index":267,"title":{},"body":{"components/CountriesChartComponent.html":{}}}],["onselect(data",{"_index":274,"title":{},"body":{"components/CountriesChartComponent.html":{}}}],["optional",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{},"classes/ChartFormatServiceMock.html":{},"components/CountriesChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HttpErrorComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoaderHttpInterceptorService.html":{},"injectables/OlympicService.html":{},"classes/chartDataServiceMock.html":{}}}],["out",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["override",{"_index":364,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["overview",{"_index":710,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":612,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":452,"title":{},"body":{"components/HttpErrorComponent.html":{},"components/LoaderComponent.html":{},"index.html":{}}}],["pages",{"_index":671,"title":{},"body":{"index.html":{}}}],["pages/dashboard",{"_index":129,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["parameters",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{},"classes/ChartFormatServiceMock.html":{},"components/CountriesChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HttpErrorComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoaderHttpInterceptorService.html":{},"injectables/OlympicService.html":{},"classes/chartDataServiceMock.html":{}}}],["paris",{"_index":731,"title":{},"body":{"miscellaneous/variables.html":{}}}],["participant",{"_index":382,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["participation",{"_index":220,"title":{"interfaces/Participation.html":{}},"body":{"injectables/ChartFormatDataService.html":{},"components/DashboardCountryDetailComponent.html":{},"interfaces/Olympic.html":{},"interfaces/Participation.html":{},"coverage.html":{},"index.html":{}}}],["participation.medalscount",{"_index":229,"title":{},"body":{"injectables/ChartFormatDataService.html":{}}}],["participations",{"_index":512,"title":{},"body":{"interfaces/Olympic.html":{},"classes/OlympicsServiceMock.html":{},"classes/chartDataServiceMock.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["past",{"_index":389,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["path",{"_index":164,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["per",{"_index":352,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["pipe(takeuntil(this.getunsubscribe)).subscribe",{"_index":357,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["please",{"_index":532,"title":{},"body":{"injectables/OlympicService.html":{}}}],["positionclass",{"_index":147,"title":{},"body":{"modules/AppModule.html":{}}}],["preventduplicates",{"_index":151,"title":{},"body":{"modules/AppModule.html":{}}}],["private",{"_index":192,"title":{},"body":{"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{},"components/CountriesChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"injectables/OlympicService.html":{},"injectables/UnsubscribeObservableService.html":{}}}],["processing",{"_index":686,"title":{},"body":{"index.html":{}}}],["production",{"_index":729,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":628,"title":{},"body":{"index.html":{}}}],["properties",{"_index":22,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HttpErrorComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"interfaces/Olympic.html":{},"injectables/OlympicService.html":{},"interfaces/Participation.html":{},"injectables/UnsubscribeObservableService.html":{},"properties.html":{}}}],["provide",{"_index":153,"title":{},"body":{"modules/AppModule.html":{}}}],["providedin",{"_index":191,"title":{},"body":{"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{},"interceptors/LoaderHttpInterceptorService.html":{},"injectables/LoaderService.html":{},"injectables/OlympicService.html":{}}}],["providers",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["public",{"_index":495,"title":{},"body":{"injectables/LoaderService.html":{},"injectables/UnsubscribeObservableService.html":{}}}],["reload",{"_index":650,"title":{},"body":{"index.html":{}}}],["representations",{"_index":379,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["req",{"_index":486,"title":{},"body":{"interceptors/LoaderHttpInterceptorService.html":{}}}],["require",{"_index":605,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":726,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["responses",{"_index":700,"title":{},"body":{"index.html":{}}}],["results",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{},"classes/ChartFormatServiceMock.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/HttpErrorComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoaderHttpInterceptorService.html":{},"injectables/LoaderService.html":{},"interfaces/Olympic.html":{},"injectables/OlympicService.html":{},"classes/OlympicsServiceMock.html":{},"interfaces/Participation.html":{},"injectables/UnsubscribeObservableService.html":{},"classes/chartDataServiceMock.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":193,"title":{},"body":{"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{},"classes/ChartFormatServiceMock.html":{},"interceptors/LoaderHttpInterceptorService.html":{},"injectables/OlympicService.html":{},"classes/OlympicsServiceMock.html":{},"injectables/UnsubscribeObservableService.html":{},"classes/chartDataServiceMock.html":{}}}],["returns",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{},"classes/ChartFormatServiceMock.html":{},"components/CountriesChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HttpErrorComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoaderHttpInterceptorService.html":{},"injectables/LoaderService.html":{},"injectables/OlympicService.html":{},"classes/OlympicsServiceMock.html":{},"injectables/UnsubscribeObservableService.html":{},"classes/chartDataServiceMock.html":{}}}],["reusable",{"_index":661,"title":{},"body":{"index.html":{}}}],["rio",{"_index":554,"title":{},"body":{"classes/OlympicsServiceMock.html":{},"miscellaneous/variables.html":{}}}],["root",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{},"interceptors/LoaderHttpInterceptorService.html":{},"injectables/LoaderService.html":{},"injectables/OlympicService.html":{}}}],["root'},{'name",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/HttpErrorComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{}}}],["route",{"_index":403,"title":{},"body":{"components/DashboardCountryDetailComponent.html":{}}}],["router",{"_index":271,"title":{},"body":{"components/CountriesChartComponent.html":{},"components/HttpErrorComponent.html":{}}}],["routerlink",{"_index":438,"title":{},"body":{"components/HeaderComponent.html":{},"components/HttpErrorComponent.html":{}}}],["routerlinkactive",{"_index":439,"title":{},"body":{"components/HeaderComponent.html":{}}}],["routermodule",{"_index":158,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":166,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":159,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing",{"_index":673,"title":{},"body":{"index.html":{}}}],["routing.module",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":157,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":642,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{},"classes/ChartFormatServiceMock.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoaderHttpInterceptorService.html":{},"injectables/LoaderService.html":{},"injectables/OlympicService.html":{},"classes/OlympicsServiceMock.html":{},"injectables/UnsubscribeObservableService.html":{},"classes/chartDataServiceMock.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":190,"title":{},"body":{"injectables/ChartDataService.html":{},"injectables/OlympicService.html":{}}}],["section",{"_index":667,"title":{},"body":{"index.html":{}}}],["selector",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/HttpErrorComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{}}}],["series",{"_index":231,"title":{},"body":{"injectables/ChartFormatDataService.html":{},"classes/ChartFormatServiceMock.html":{}}}],["seriesdata",{"_index":596,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["serve",{"_index":644,"title":{},"body":{"index.html":{}}}],["server",{"_index":641,"title":{},"body":{"index.html":{}}}],["services",{"_index":680,"title":{},"body":{"index.html":{}}}],["set(olympic.map((olymp",{"_index":205,"title":{},"body":{"injectables/ChartDataService.html":{}}}],["showgobacklink",{"_index":447,"title":{},"body":{"components/HttpErrorComponent.html":{}}}],["showlabels",{"_index":265,"title":{},"body":{"components/CountriesChartComponent.html":{}}}],["showxaxislabel",{"_index":295,"title":{},"body":{"components/CountryDetailChartComponent.html":{}}}],["showyaxislabel",{"_index":296,"title":{},"body":{"components/CountryDetailChartComponent.html":{}}}],["simulates",{"_index":693,"title":{},"body":{"index.html":{}}}],["sizes",{"_index":703,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{},"classes/ChartFormatServiceMock.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/HttpErrorComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoaderHttpInterceptorService.html":{},"injectables/LoaderService.html":{},"interfaces/Olympic.html":{},"injectables/OlympicService.html":{},"classes/OlympicsServiceMock.html":{},"interfaces/Participation.html":{},"injectables/UnsubscribeObservableService.html":{},"classes/chartDataServiceMock.html":{},"index.html":{}}}],["spain",{"_index":249,"title":{},"body":{"classes/ChartFormatServiceMock.html":{},"miscellaneous/variables.html":{}}}],["spec\\.ts",{"_index":727,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../countryallchartformat.ts",{"_index":717,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../countrydetailchartformat.ts",{"_index":718,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../environment.prod.ts",{"_index":722,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":723,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../olympics_test.ts",{"_index":725,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../olympicsdatamock.ts",{"_index":724,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":721,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":156,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:11",{"_index":30,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:15",{"_index":36,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/components/countries",{"_index":254,"title":{},"body":{"components/CountriesChartComponent.html":{},"coverage.html":{}}}],["src/app/components/country",{"_index":293,"title":{},"body":{"components/CountryDetailChartComponent.html":{},"coverage.html":{}}}],["src/app/components/header/header.component.ts",{"_index":436,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/components/http",{"_index":442,"title":{},"body":{"components/HttpErrorComponent.html":{},"coverage.html":{}}}],["src/app/components/info",{"_index":461,"title":{},"body":{"components/InfoDetailChartComponent.html":{},"coverage.html":{}}}],["src/app/components/loader/loader.component.ts",{"_index":463,"title":{},"body":{"components/LoaderComponent.html":{},"coverage.html":{}}}],["src/app/components/loader/loader.component.ts:15",{"_index":470,"title":{},"body":{"components/LoaderComponent.html":{}}}],["src/app/components/loader/loader.component.ts:22",{"_index":471,"title":{},"body":{"components/LoaderComponent.html":{}}}],["src/app/core/models/interfaces/olympic",{"_index":417,"title":{},"body":{"components/DashboardCountryDetailComponent.html":{}}}],["src/app/core/models/interfaces/olympic.ts",{"_index":511,"title":{},"body":{"interfaces/Olympic.html":{},"coverage.html":{}}}],["src/app/core/models/interfaces/participation",{"_index":418,"title":{},"body":{"components/DashboardCountryDetailComponent.html":{}}}],["src/app/core/models/interfaces/participation.ts",{"_index":562,"title":{},"body":{"interfaces/Participation.html":{},"coverage.html":{}}}],["src/app/core/models/types/countryallchartformat",{"_index":288,"title":{},"body":{"components/CountriesChartComponent.html":{},"components/DashboardCountriesComponent.html":{}}}],["src/app/core/models/types/countryallchartformat.ts",{"_index":593,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/core/models/types/countrydetailchartformat",{"_index":416,"title":{},"body":{"components/DashboardCountryDetailComponent.html":{}}}],["src/app/core/models/types/countrydetailchartformat.ts",{"_index":595,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/core/services/chart",{"_index":170,"title":{},"body":{"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"coverage.html":{}}}],["src/app/core/services/loader",{"_index":477,"title":{},"body":{"interceptors/LoaderHttpInterceptorService.html":{},"coverage.html":{}}}],["src/app/core/services/loader/loader.service.ts",{"_index":494,"title":{},"body":{"injectables/LoaderService.html":{},"coverage.html":{}}}],["src/app/core/services/loader/loader.service.ts:10",{"_index":499,"title":{},"body":{"injectables/LoaderService.html":{}}}],["src/app/core/services/loader/loader.service.ts:15",{"_index":501,"title":{},"body":{"injectables/LoaderService.html":{}}}],["src/app/core/services/loader/loader.service.ts:19",{"_index":500,"title":{},"body":{"injectables/LoaderService.html":{}}}],["src/app/core/services/loader/loader.service.ts:9",{"_index":505,"title":{},"body":{"injectables/LoaderService.html":{}}}],["src/app/core/services/olympic/olympic.service.ts",{"_index":513,"title":{},"body":{"injectables/OlympicService.html":{},"coverage.html":{}}}],["src/app/core/services/olympic/olympic.service.ts:12",{"_index":524,"title":{},"body":{"injectables/OlympicService.html":{}}}],["src/app/core/services/olympic/olympic.service.ts:13",{"_index":519,"title":{},"body":{"injectables/OlympicService.html":{}}}],["src/app/core/services/olympic/olympic.service.ts:20",{"_index":521,"title":{},"body":{"injectables/OlympicService.html":{}}}],["src/app/core/services/olympic/olympic.service.ts:37",{"_index":520,"title":{},"body":{"injectables/OlympicService.html":{}}}],["src/app/core/services/unsubsribe",{"_index":344,"title":{},"body":{"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"injectables/UnsubscribeObservableService.html":{},"coverage.html":{}}}],["src/app/pages/dashboard",{"_index":312,"title":{},"body":{"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"coverage.html":{}}}],["src/environments/environment.prod.ts",{"_index":599,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":602,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":603,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test/mockdata/chartdataservicemock.ts",{"_index":575,"title":{},"body":{"classes/chartDataServiceMock.html":{},"coverage.html":{}}}],["src/test/mockdata/chartdataservicemock.ts:10",{"_index":577,"title":{},"body":{"classes/chartDataServiceMock.html":{}}}],["src/test/mockdata/chartdataservicemock.ts:14",{"_index":576,"title":{},"body":{"classes/chartDataServiceMock.html":{}}}],["src/test/mockdata/chartdataservicemock.ts:6",{"_index":578,"title":{},"body":{"classes/chartDataServiceMock.html":{}}}],["src/test/mockdata/chartformatservicemock.ts",{"_index":236,"title":{},"body":{"classes/ChartFormatServiceMock.html":{},"coverage.html":{}}}],["src/test/mockdata/chartformatservicemock.ts:30",{"_index":237,"title":{},"body":{"classes/ChartFormatServiceMock.html":{}}}],["src/test/mockdata/chartformatservicemock.ts:8",{"_index":238,"title":{},"body":{"classes/ChartFormatServiceMock.html":{}}}],["src/test/mockdata/olympics_test.ts",{"_index":608,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test/mockdata/olympicsdatamock.ts",{"_index":606,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test/olympicsservicemock.ts",{"_index":541,"title":{},"body":{"classes/OlympicsServiceMock.html":{},"coverage.html":{}}}],["src/test/olympicsservicemock.ts:37",{"_index":542,"title":{},"body":{"classes/OlympicsServiceMock.html":{}}}],["src/test/olympicsservicemock.ts:6",{"_index":543,"title":{},"body":{"classes/OlympicsServiceMock.html":{}}}],["standalone",{"_index":258,"title":{},"body":{"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/HttpErrorComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{}}}],["start",{"_index":645,"title":{},"body":{"index.html":{}}}],["started",{"_index":626,"title":{"index.html":{}},"body":{}}],["starter",{"_index":44,"title":{},"body":{"components/AppComponent.html":{}}}],["starting",{"_index":638,"title":{},"body":{"index.html":{}}}],["statements",{"_index":587,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":738,"title":{},"body":{"miscellaneous/variables.html":{}}}],["statistics",{"_index":387,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["statuscode",{"_index":449,"title":{},"body":{"components/HttpErrorComponent.html":{}}}],["stored",{"_index":655,"title":{},"body":{"index.html":{}}}],["string",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/HttpErrorComponent.html":{},"components/InfoDetailChartComponent.html":{},"interfaces/Olympic.html":{},"injectables/OlympicService.html":{},"interfaces/Participation.html":{}}}],["string(participation.year",{"_index":233,"title":{},"body":{"injectables/ChartFormatDataService.html":{}}}],["structure",{"_index":658,"title":{},"body":{"index.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{}}}],["styleurl",{"_index":260,"title":{},"body":{"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/HttpErrorComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{}}}],["styleurls",{"_index":17,"title":{},"body":{"components/AppComponent.html":{}}}],["subject",{"_index":337,"title":{},"body":{"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"injectables/UnsubscribeObservableService.html":{}}}],["such",{"_index":381,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["super",{"_index":349,"title":{},"body":{"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{}}}],["super.ngondestroy",{"_index":365,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["support",{"_index":536,"title":{},"body":{"injectables/OlympicService.html":{},"modules.html":{}}}],["svg",{"_index":706,"title":{},"body":{"modules.html":{}}}],["swimlane/ngx",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"dependencies.html":{}}}],["table",{"_index":611,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":610,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":47,"title":{},"body":{"components/AppComponent.html":{}}}],["takeuntil",{"_index":340,"title":{},"body":{"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{}}}],["tap",{"_index":525,"title":{},"body":{"injectables/OlympicService.html":{}}}],["tap((value",{"_index":528,"title":{},"body":{"injectables/OlympicService.html":{}}}],["team",{"_index":537,"title":{},"body":{"injectables/OlympicService.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/HttpErrorComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{}}}],["templateurl",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/HttpErrorComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{}}}],["test",{"_index":253,"title":{},"body":{"classes/ChartFormatServiceMock.html":{}}}],["this.chartdata.getdatabycountryid(countryid).pipe(takeuntil(this.getunsubscribe)).subscribe",{"_index":422,"title":{},"body":{"components/DashboardCountryDetailComponent.html":{}}}],["this.chartdata.gettotalcountry",{"_index":355,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["this.chartdata.gettotaljos",{"_index":354,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["this.chartformat.getformatdataforlinechartbycountry(this.countryselecteddata",{"_index":426,"title":{},"body":{"components/DashboardCountryDetailComponent.html":{}}}],["this.chartformatservice.getformatdataforpiechartforallcountry",{"_index":356,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["this.countryselecteddata",{"_index":424,"title":{},"body":{"components/DashboardCountryDetailComponent.html":{}}}],["this.datacountrychart",{"_index":425,"title":{},"body":{"components/DashboardCountryDetailComponent.html":{}}}],["this.datafordashboard",{"_index":361,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["this.datafordashboard?.length",{"_index":363,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["this.getcountriesdata",{"_index":353,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["this.getcountrydata",{"_index":419,"title":{},"body":{"components/DashboardCountryDetailComponent.html":{}}}],["this.http.get(this.olympicurl).pipe",{"_index":527,"title":{},"body":{"injectables/OlympicService.html":{}}}],["this.isdataloaded",{"_index":362,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["this.loaderservice.loading",{"_index":474,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.loaderservice.loadingoff",{"_index":493,"title":{},"body":{"interceptors/LoaderHttpInterceptorService.html":{}}}],["this.loaderservice.loadingon",{"_index":491,"title":{},"body":{"interceptors/LoaderHttpInterceptorService.html":{}}}],["this.loading",{"_index":473,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.loadingsubject.asobservable",{"_index":502,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this.loadingsubject.complete();0",{"_index":508,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this.loadingsubject.next(false",{"_index":507,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this.loadingsubject.next(true",{"_index":506,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this.numberofentries",{"_index":427,"title":{},"body":{"components/DashboardCountryDetailComponent.html":{}}}],["this.olympics$.asobservable",{"_index":539,"title":{},"body":{"injectables/OlympicService.html":{}}}],["this.olympics$.next(null",{"_index":538,"title":{},"body":{"injectables/OlympicService.html":{}}}],["this.olympics$.next(value",{"_index":530,"title":{},"body":{"injectables/OlympicService.html":{}}}],["this.olympicservice.getolympics().pipe",{"_index":194,"title":{},"body":{"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{}}}],["this.olympicservice.loadinitialdata().pipe(take(1)).subscribe",{"_index":53,"title":{},"body":{"components/AppComponent.html":{}}}],["this.route.snapshot.params['id",{"_index":421,"title":{},"body":{"components/DashboardCountryDetailComponent.html":{}}}],["this.router.navigatebyurl(`country",{"_index":291,"title":{},"body":{"components/CountriesChartComponent.html":{}}}],["this.router.url",{"_index":458,"title":{},"body":{"components/HttpErrorComponent.html":{}}}],["this.showgobacklink",{"_index":457,"title":{},"body":{"components/HttpErrorComponent.html":{}}}],["this.title",{"_index":350,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["this.toastservice.error('error",{"_index":531,"title":{},"body":{"injectables/OlympicService.html":{}}}],["this.toastservice.error(error",{"_index":202,"title":{},"body":{"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{},"components/CountriesChartComponent.html":{},"injectables/OlympicService.html":{}}}],["this.totalhostingcountries",{"_index":360,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["this.totalnumbermedals",{"_index":429,"title":{},"body":{"components/DashboardCountryDetailComponent.html":{}}}],["this.totalnumberofathletes",{"_index":433,"title":{},"body":{"components/DashboardCountryDetailComponent.html":{}}}],["this.totalolympics",{"_index":359,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["this.unsubscribe",{"_index":573,"title":{},"body":{"injectables/UnsubscribeObservableService.html":{}}}],["this.unsubscribe$.complete",{"_index":572,"title":{},"body":{"injectables/UnsubscribeObservableService.html":{}}}],["this.unsubscribe$.next",{"_index":571,"title":{},"body":{"injectables/UnsubscribeObservableService.html":{}}}],["timeline",{"_index":297,"title":{},"body":{"components/CountryDetailChartComponent.html":{}}}],["timeout",{"_index":145,"title":{},"body":{"modules/AppModule.html":{}}}],["title",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/InfoDetailChartComponent.html":{}}}],["toast",{"_index":148,"title":{},"body":{"modules/AppModule.html":{}}}],["toastr",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{},"components/CountriesChartComponent.html":{},"injectables/OlympicService.html":{},"dependencies.html":{},"index.html":{}}}],["toastrmodule",{"_index":138,"title":{},"body":{"modules/AppModule.html":{}}}],["toastrmodule.forroot",{"_index":144,"title":{},"body":{"modules/AppModule.html":{}}}],["toastrservice",{"_index":177,"title":{},"body":{"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{},"components/CountriesChartComponent.html":{},"injectables/OlympicService.html":{}}}],["toastservice",{"_index":176,"title":{},"body":{"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{},"components/CountriesChartComponent.html":{},"injectables/OlympicService.html":{}}}],["tokyo",{"_index":559,"title":{},"body":{"classes/OlympicsServiceMock.html":{},"miscellaneous/variables.html":{}}}],["top",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["totalhostingcountries",{"_index":320,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["totalnumbermedals",{"_index":397,"title":{},"body":{"components/DashboardCountryDetailComponent.html":{}}}],["totalnumberofathletes",{"_index":398,"title":{},"body":{"components/DashboardCountryDetailComponent.html":{}}}],["totalolympics",{"_index":321,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/HttpErrorComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{}}}],["true",{"_index":152,"title":{},"body":{"modules/AppModule.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/HttpErrorComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":533,"title":{},"body":{"injectables/OlympicService.html":{}}}],["tslib",{"_index":621,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{},"classes/ChartFormatServiceMock.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HttpErrorComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoaderHttpInterceptorService.html":{},"injectables/LoaderService.html":{},"interfaces/Olympic.html":{},"injectables/OlympicService.html":{},"interfaces/Participation.html":{},"injectables/UnsubscribeObservableService.html":{},"classes/chartDataServiceMock.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":715,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":681,"title":{},"body":{"index.html":{}}}],["télésport",{"_index":367,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["undefined",{"_index":207,"title":{},"body":{"injectables/ChartDataService.html":{},"components/DashboardCountryDetailComponent.html":{}}}],["united",{"_index":737,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unsubscribe",{"_index":322,"title":{},"body":{"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"injectables/UnsubscribeObservableService.html":{}}}],["unsubscribeobservable",{"_index":696,"title":{},"body":{"index.html":{}}}],["unsubscribeobservableservice",{"_index":315,"title":{"injectables/UnsubscribeObservableService.html":{}},"body":{"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"injectables/UnsubscribeObservableService.html":{},"coverage.html":{}}}],["unsubscribeobservableservice:58",{"_index":331,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["unsubscribeobservableservice:7",{"_index":338,"title":{},"body":{"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{}}}],["unsubscribeobservableservice:9",{"_index":411,"title":{},"body":{"components/DashboardCountryDetailComponent.html":{}}}],["useclass",{"_index":154,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":672,"title":{},"body":{"index.html":{}}}],["utility",{"_index":684,"title":{},"body":{"index.html":{}}}],["value",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChartFormatDataService.html":{},"classes/ChartFormatServiceMock.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HttpErrorComponent.html":{},"components/InfoDetailChartComponent.html":{},"injectables/LoaderService.html":{},"injectables/OlympicService.html":{},"injectables/UnsubscribeObservableService.html":{},"miscellaneous/variables.html":{}}}],["value.length",{"_index":529,"title":{},"body":{"injectables/OlympicService.html":{}}}],["var",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/HttpErrorComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{}}}],["variable",{"_index":600,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":720,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":632,"title":{},"body":{"index.html":{},"properties.html":{}}}],["view",{"_index":266,"title":{},"body":{"components/CountriesChartComponent.html":{}}}],["viewchild",{"_index":287,"title":{},"body":{"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{}}}],["viewchild('containerref",{"_index":278,"title":{},"body":{"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{}}}],["visually",{"_index":375,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["void",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/CountriesChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HttpErrorComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"injectables/UnsubscribeObservableService.html":{}}}],["web",{"_index":368,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["width",{"_index":60,"title":{},"body":{"components/AppComponent.html":{}}}],["xaxis",{"_index":298,"title":{},"body":{"components/CountryDetailChartComponent.html":{}}}],["xaxislabel",{"_index":299,"title":{},"body":{"components/CountryDetailChartComponent.html":{}}}],["yaxis",{"_index":300,"title":{},"body":{"components/CountryDetailChartComponent.html":{}}}],["year",{"_index":545,"title":{},"body":{"classes/OlympicsServiceMock.html":{},"interfaces/Participation.html":{},"classes/chartDataServiceMock.html":{},"miscellaneous/variables.html":{}}}],["zone.js",{"_index":623,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(olympicService: OlympicService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        olympicService\n                                                  \n                                                        \n                                                                        OlympicService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'olympic-games-starter'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { take } from 'rxjs';\nimport { OlympicService } from './core/services/olympic/olympic.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  title: string= 'olympic-games-starter'\n\n  constructor(private olympicService: OlympicService) {}\n\n  ngOnInit(): void {\n    this.olympicService.loadInitialData().pipe(take(1)).subscribe();\n  }\n}\n\n    \n\n    \n        \n    \n    \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                .app-main {\n    display: flex;\n    flex-flow: column nowrap;\n    width: 100vw;\n    height: 100vh;\n    min-height: 800px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CountriesChartComponent', 'selector': 'app-countries-chart'},{'name': 'CountryDetailChartComponent', 'selector': 'app-country-detail-chart'},{'name': 'DashboardCountriesComponent', 'selector': 'app-dashboard-countries'},{'name': 'DashboardCountryDetailComponent', 'selector': 'app-dashboard-country-detail'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HttpErrorComponent', 'selector': 'app-http-error'},{'name': 'InfoDetailChartComponent', 'selector': 'app-info-detail-chart'},{'name': 'LoaderComponent', 'selector': 'app-loader'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nDashboardCountriesComponent\n\nDashboardCountriesComponent\n\nAppModule -->\n\nDashboardCountriesComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nHttpErrorComponent\n\nHttpErrorComponent\n\nAppModule -->\n\nHttpErrorComponent->AppModule\n\n\n\n\n\nLoaderComponent\n\nLoaderComponent\n\nAppModule -->\n\nLoaderComponent->AppModule\n\n\n\n\n\nLoaderHttpInterceptorService\n\nLoaderHttpInterceptorService\n\nAppModule -->\n\nLoaderHttpInterceptorService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            LoaderHttpInterceptorService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            DashboardCountriesComponent\n                        \n                        \n                            HeaderComponent\n                        \n                        \n                            HttpErrorComponent\n                        \n                        \n                            LoaderComponent\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http';\nimport {NgModule} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {HeaderComponent} from \"./components/header/header.component\";\nimport {LoaderHttpInterceptorService} from './core/services/loader-http-interceptor/loader-http-interceptor.service';\nimport {DashboardCountriesComponent} from './pages/dashboard-countries/dashboard-countries.component';\nimport {NgxChartsModule} from '@swimlane/ngx-charts';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {LoaderComponent} from './components/loader/loader.component';\nimport {ToastrModule} from 'ngx-toastr';\nimport {HttpErrorComponent} from \"./components/http-error/http-error.component\";\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    HttpErrorComponent,\n    HeaderComponent,\n    DashboardCountriesComponent,\n    NgxChartsModule,\n    BrowserAnimationsModule,\n    LoaderComponent,\n    ToastrModule.forRoot({\n      timeOut: 50000,\n      positionClass: 'toast-top-center',\n      preventDuplicates: true,\n    })\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: LoaderHttpInterceptorService,\n      multi: true,\n    },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {HttpErrorComponent} from './components/http-error/http-error.component';\nimport {DashboardCountryDetailComponent} from './pages/dashboard-country-detail/dashboard-country-detail.component';\nimport {DashboardCountriesComponent} from \"./pages/dashboard-countries/dashboard-countries.component\";\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DashboardCountriesComponent,\n  },\n  {\n    path: 'country-detail-chart/:id',\n    component: DashboardCountryDetailComponent,\n  },\n  {\n    path: '**',\n    component: HttpErrorComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ChartDataService.html":{"url":"injectables/ChartDataService.html","title":"injectable - ChartDataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ChartDataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/chart-data/chart-data.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDataByCountryId\n                            \n                            \n                                getTotalCountry\n                            \n                            \n                                getTotalJos\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(olympicService: OlympicService, toastService: ToastrService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/chart-data/chart-data.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        olympicService\n                                                  \n                                                        \n                                                                        OlympicService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getDataByCountryId\n                        \n                    \n                \n            \n            \n                \ngetDataByCountryId(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/chart-data/chart-data.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTotalCountry\n                        \n                    \n                \n            \n            \n                \ngetTotalCountry()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/chart-data/chart-data.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTotalJos\n                        \n                    \n                \n            \n            \n                \ngetTotalJos()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/chart-data/chart-data.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {map, Observable} from 'rxjs';\nimport {OlympicService} from \"../olympic/olympic.service\";\nimport {Olympic} from \"../../models/interfaces/Olympic\";\nimport {catchError} from \"rxjs/operators\";\nimport {ToastrService} from \"ngx-toastr\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChartDataService {\n\n  constructor(private olympicService: OlympicService, private toastService: ToastrService) {\n  }\n\n  getTotalJos(): Observable {\n    return this.olympicService.getOlympics().pipe(\n      map((olympics: Olympic[] | null) => {\n        if (!olympics) return 0;\n        return olympics[0].participations.length;\n      }),\n      catchError((error: string, caught) => {\n        this.toastService.error(error);\n        return caught;\n      })\n    )\n  }\n\n  getTotalCountry(): Observable {\n    return this.olympicService.getOlympics().pipe(\n      map((olympic: Olympic[] | null) => {\n        if (!olympic) return 0;\n        return new Set(olympic.map((olymp: Olympic) => olymp.country)).size;\n      }),\n      catchError((error: string, caught) => {\n        this.toastService.error(error);\n        return caught;\n      })\n    )\n  }\n\n  getDataByCountryId(id: number): Observable {\n    return this.olympicService.getOlympics().pipe(\n      map((olympics: Olympic[] | null) => {\n        if (!olympics) return undefined\n        return olympics.find(olympic => olympic.id === Number(id));\n      }),\n      catchError((error: string, caught) => {\n        this.toastService.error(error);\n        return caught;\n      })\n    );\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ChartFormatDataService.html":{"url":"injectables/ChartFormatDataService.html","title":"injectable - ChartFormatDataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ChartFormatDataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/chart-format/chart-format-data.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getFormatDataForLineChartByCountry\n                            \n                            \n                                getFormatDataForPieChartForAllCountry\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(olympicService: OlympicService, toastService: ToastrService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/chart-format/chart-format-data.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        olympicService\n                                                  \n                                                        \n                                                                        OlympicService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getFormatDataForLineChartByCountry\n                        \n                    \n                \n            \n            \n                \ngetFormatDataForLineChartByCountry(olympic: Olympic)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/chart-format/chart-format-data.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                olympic\n                                            \n                                                            Olympic\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         CountryDetailChartData[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFormatDataForPieChartForAllCountry\n                        \n                    \n                \n            \n            \n                \ngetFormatDataForPieChartForAllCountry()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/chart-format/chart-format-data.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { catchError, map, Observable } from 'rxjs';\nimport { Olympic } from '../../models/interfaces/Olympic';\nimport { Participation } from '../../models/interfaces/Participation';\nimport { OlympicService } from '../olympic/olympic.service';\nimport {CountryAllChartFormat} from \"../../models/types/CountryAllChartFormat\";\nimport {CountryDetailChartData} from \"../../models/types/CountryDetailChartFormat\";\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChartFormatDataService {\n\n  constructor(private olympicService: OlympicService, private toastService: ToastrService) {\n  }\n\n  getFormatDataForPieChartForAllCountry(): Observable {\n    return this.olympicService.getOlympics().pipe(\n      map((olympics: Olympic[] | null) => {\n        if (!olympics) return [];\n        return olympics.map(olympic => {\n          return {\n            name: olympic.country,\n            value: olympic.participations.reduce((accumulator: number, participation: Participation) =>\n                accumulator + participation.medalsCount\n              , 0),\n            extra: {\n              id: olympic.id,\n            }\n          };\n        })\n      }),\n      catchError((error: string, caught) => {\n        this.toastService.error(error);\n        return caught;\n      })\n    )\n  }\n\n  getFormatDataForLineChartByCountry(olympic: Olympic): CountryDetailChartData[] {\n    return [{\n      name: olympic.country,\n      series:\n        olympic.participations.map((participation: Participation) => {\n          return {\n            name: String(participation.year),\n            value: participation.medalsCount,\n          }\n        })\n    }]\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ChartFormatServiceMock.html":{"url":"classes/ChartFormatServiceMock.html","title":"class - ChartFormatServiceMock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ChartFormatServiceMock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/test/mockData/chartFormatServiceMock.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getFormatDataForLineChartByCountry\n                            \n                            \n                                getFormatDataForPieChartForAllCountry\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getFormatDataForLineChartByCountry\n                        \n                    \n                \n            \n            \n                \ngetFormatDataForLineChartByCountry(olympic: Olympic)\n                \n            \n\n\n                    \n                        \n                            Defined in src/test/mockData/chartFormatServiceMock.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                olympic\n                                            \n                                                            Olympic\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         CountryDetailChartData[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFormatDataForPieChartForAllCountry\n                        \n                    \n                \n            \n            \n                \ngetFormatDataForPieChartForAllCountry()\n                \n            \n\n\n                    \n                        \n                            Defined in src/test/mockData/chartFormatServiceMock.ts:8\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {Observable, of} from \"rxjs\";\nimport {CountryAllChartFormat} from \"../../app/core/models/types/CountryAllChartFormat\";\nimport {CountryDetailChartData} from \"../../app/core/models/types/CountryDetailChartFormat\";\nimport {Olympic} from \"../../app/core/models/interfaces/Olympic\";\n\n\nexport class ChartFormatServiceMock {\n  getFormatDataForPieChartForAllCountry(): Observable {\n    const mockData: CountryAllChartFormat[] = [\n      {\n        name: 'France',\n        value: 200,\n        extra: {id: 1}\n      },\n      {\n        name: 'Germany',\n        value: 150,\n        extra: {id: 2}\n      },\n      {\n        name: 'Spain',\n        value: 120,\n        extra: {id: 3}\n      }\n    ];\n\n    return of(mockData);\n  }\n\n  getFormatDataForLineChartByCountry(olympic: Olympic): CountryDetailChartData[] {\n    return [\n      {\n        name: \"test\",\n        series: [{\n          name: \"test\",\n          value: 1,\n        }]\n      }\n    ]\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CountriesChartComponent.html":{"url":"components/CountriesChartComponent.html","title":"component - CountriesChartComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CountriesChartComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/countries-chart/countries-chart.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-countries-chart\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            NgxChartsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./countries-chart.component.html\n            \n\n\n\n            \n                styleUrl\n                ./countries-chart.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                containerRef\n                            \n                            \n                                gradient\n                            \n                            \n                                isDoughnut\n                            \n                            \n                                showLabels\n                            \n                            \n                                view\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onSelect\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, toastService: ToastrService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/countries-chart/countries-chart.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :         CountryAllChartFormat[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/countries-chart/countries-chart.component.ts:30\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onSelect\n                        \n                    \n                \n            \n            \n                \nonSelect(data: CountryAllChartFormat)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/countries-chart/countries-chart.component.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            CountryAllChartFormat\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        containerRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('containerRef')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/countries-chart/countries-chart.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gradient\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/countries-chart/countries-chart.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDoughnut\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/countries-chart/countries-chart.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showLabels\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/countries-chart/countries-chart.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        view\n                        \n                    \n                \n            \n                \n                    \n                        Type :     [number, number]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/countries-chart/countries-chart.component.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  Input,\n  ViewChild,\n} from '@angular/core';\nimport {NgxChartsModule} from \"@swimlane/ngx-charts\";\nimport {Router} from \"@angular/router\";\nimport {ToastrService} from \"ngx-toastr\";\nimport {CountryAllChartFormat} from 'src/app/core/models/types/CountryAllChartFormat';\n\n\n@Component({\n  selector: 'app-countries-chart',\n  standalone: true,\n  imports: [\n    NgxChartsModule,\n  ],\n  templateUrl: './countries-chart.component.html',\n  styleUrl: './countries-chart.component.scss',\n\n})\nexport class CountriesChartComponent {\n\n  @ViewChild('containerRef')\n  containerRef!: ElementRef;\n\n  @Input()\n  data!: CountryAllChartFormat[];\n  gradient: boolean = true;\n  showLabels: boolean = true;\n  isDoughnut: boolean = false;\n  view!: [number, number];\n\n  constructor(private router: Router, private toastService: ToastrService) {\n  }\n\n  onSelect(data: CountryAllChartFormat): void {\n    const idCountry: number = data.extra.id;\n    this.router.navigateByUrl(`country-detail-chart/${idCountry}`).catch(error =>\n      this.toastService.error(error))\n  }\n\n\n}\n\n    \n\n    \n        \n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CountriesChartComponent', 'selector': 'app-countries-chart'},{'name': 'CountryDetailChartComponent', 'selector': 'app-country-detail-chart'},{'name': 'DashboardCountriesComponent', 'selector': 'app-dashboard-countries'},{'name': 'DashboardCountryDetailComponent', 'selector': 'app-dashboard-country-detail'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HttpErrorComponent', 'selector': 'app-http-error'},{'name': 'InfoDetailChartComponent', 'selector': 'app-info-detail-chart'},{'name': 'LoaderComponent', 'selector': 'app-loader'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CountriesChartComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CountryDetailChartComponent.html":{"url":"components/CountryDetailChartComponent.html","title":"component - CountryDetailChartComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CountryDetailChartComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/country-detail-chart/country-detail-chart.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-country-detail-chart\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            NgxChartsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./country-detail-chart.component.html\n            \n\n\n\n            \n                styleUrl\n                ./country-detail-chart.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                containerRef\n                            \n                            \n                                showXAxisLabel\n                            \n                            \n                                showYAxisLabel\n                            \n                            \n                                timeline\n                            \n                            \n                                xAxis\n                            \n                            \n                                xAxisLabel\n                            \n                            \n                                yAxis\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :         CountryDetailChartFormat | \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/country-detail-chart/country-detail-chart.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        containerRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('containerRef')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/country-detail-chart/country-detail-chart.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showXAxisLabel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/country-detail-chart/country-detail-chart.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showYAxisLabel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/country-detail-chart/country-detail-chart.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timeline\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/country-detail-chart/country-detail-chart.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        xAxis\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/country-detail-chart/country-detail-chart.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        xAxisLabel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Dates'\n                    \n                \n                    \n                        \n                                Defined in src/app/components/country-detail-chart/country-detail-chart.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        yAxis\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/country-detail-chart/country-detail-chart.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, Input, ViewChild} from '@angular/core';\nimport {NgxChartsModule} from \"@swimlane/ngx-charts\";\nimport {CountryDetailChartFormat} from \"../../core/models/types/CountryDetailChartFormat\";\n\n@Component({\n  selector: 'app-country-detail-chart',\n  standalone: true,\n  imports: [NgxChartsModule],\n  templateUrl: './country-detail-chart.component.html',\n  styleUrl: './country-detail-chart.component.scss',\n\n})\nexport class CountryDetailChartComponent  {\n\n  @ViewChild('containerRef')\n  containerRef!: ElementRef;\n\n  @Input()\n  data!: CountryDetailChartFormat|[]\n  xAxis: boolean = true;\n  yAxis: boolean = true;\n  showYAxisLabel: boolean = true;\n  showXAxisLabel: boolean = true;\n  xAxisLabel: string = 'Dates';\n  timeline: boolean = true;\n\n\n}\n\n\n    \n\n    \n        \n  \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CountriesChartComponent', 'selector': 'app-countries-chart'},{'name': 'CountryDetailChartComponent', 'selector': 'app-country-detail-chart'},{'name': 'DashboardCountriesComponent', 'selector': 'app-dashboard-countries'},{'name': 'DashboardCountryDetailComponent', 'selector': 'app-dashboard-country-detail'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HttpErrorComponent', 'selector': 'app-http-error'},{'name': 'InfoDetailChartComponent', 'selector': 'app-info-detail-chart'},{'name': 'LoaderComponent', 'selector': 'app-loader'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CountryDetailChartComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DashboardCountriesComponent.html":{"url":"components/DashboardCountriesComponent.html","title":"component - DashboardCountriesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DashboardCountriesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/dashboard-countries/dashboard-countries.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                    UnsubscribeObservableService\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dashboard-countries\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                InfoDetailChartComponent\n                                CountriesChartComponent\n                                HttpErrorComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./dashboard-countries.component.html\n            \n\n\n\n            \n                styleUrl\n                ./dashboard-countries.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dataForDashboard\n                            \n                            \n                                isDataLoaded\n                            \n                            \n                                title\n                            \n                            \n                                totalHostingCountries\n                            \n                            \n                                totalOlympics\n                            \n                            \n                                    Private\n                                unsubscribe$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getCountriesData\n                            \n                            \n                                    \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(chartData: ChartDataService, chartFormatService: ChartFormatDataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/dashboard-countries/dashboard-countries.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        chartData\n                                                  \n                                                        \n                                                                        ChartDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        chartFormatService\n                                                  \n                                                        \n                                                                        ChartFormatDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getCountriesData\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCountriesData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/dashboard-countries/dashboard-countries.component.ts:40\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Inherited from         UnsubscribeObservableService\n\n                        \n                    \n                    \n                        \n                                Defined in         UnsubscribeObservableService:58\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/dashboard-countries/dashboard-countries.component.ts:35\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        dataForDashboard\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CountryAllChartFormat[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/dashboard-countries/dashboard-countries.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDataLoaded\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/dashboard-countries/dashboard-countries.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/dashboard-countries/dashboard-countries.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalHostingCountries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/dashboard-countries/dashboard-countries.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalOlympics\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/dashboard-countries/dashboard-countries.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        unsubscribe$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                        \n                            \n                                Inherited from         UnsubscribeObservableService\n\n                            \n                        \n                    \n                        \n                                Defined in         UnsubscribeObservableService:7\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {combineLatest} from 'rxjs';\nimport {takeUntil} from \"rxjs\";\nimport {InfoDetailChartComponent} from '../../components/info-detail-chart/info-detail-chart.component';\nimport {UnsubscribeObservableService} from 'src/app/core/services/unsubsribe-observable/unsubscribe-observable.service';\nimport {CountryAllChartFormat} from 'src/app/core/models/types/CountryAllChartFormat';\nimport {ChartFormatDataService} from 'src/app/core/services/chart-format/chart-format-data.service';\nimport {CountriesChartComponent} from '../../components/countries-chart/countries-chart.component';\nimport {ChartDataService} from 'src/app/core/services/chart-data/chart-data.service';\nimport {HttpErrorComponent} from \"../../components/http-error/http-error.component\";\n\n\n@Component({\n  selector: 'app-dashboard-countries',\n  standalone: true,\n  imports: [InfoDetailChartComponent, CountriesChartComponent, HttpErrorComponent],\n  templateUrl: './dashboard-countries.component.html',\n  styleUrl: './dashboard-countries.component.scss'\n})\nexport class DashboardCountriesComponent extends UnsubscribeObservableService implements OnInit {\n\n  totalOlympics!: number;\n  totalHostingCountries!: number;\n  dataForDashboard!: CountryAllChartFormat[];\n  title!: string;\n  isDataLoaded!: boolean;\n\n  constructor(\n    private chartData: ChartDataService,\n    private chartFormatService: ChartFormatDataService\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.title = 'Medals per country';\n    this.getCountriesData();\n  }\n\n  private getCountriesData(): void {\n    combineLatest([\n      this.chartData.getTotalJos(),\n      this.chartData.getTotalCountry(),\n      this.chartFormatService.getFormatDataForPieChartForAllCountry()\n    ]).pipe(takeUntil(this.getUnsubscribe)).subscribe(\n      ([totalOlympics, totalHostingCountries, dashboardData]: [number, number, CountryAllChartFormat[]]) => {\n        this.totalOlympics = totalOlympics;\n        this.totalHostingCountries = totalHostingCountries;\n        this.dataForDashboard = dashboardData;\n\n        this.isDataLoaded = this.dataForDashboard?.length > 0\n          && this.totalOlympics > 0\n          && this.totalHostingCountries > 0;\n      }\n    );\n  }\n\n  override ngOnDestroy(): void {\n    super.ngOnDestroy();\n  }\n\n}\n\n    \n\n    \n        @if(isDataLoaded){\n  \n    \n      \n        \n          Télésport is a web application designed to bring the history of the Olympic Games to life,\n          offering visually engaging and interactive graphical representations of key data such as participant\n          demographics,\n          medal counts, athlete statistics, and more from past editions of the Games.\n        \n      \n      {{ title }}\n      \n        \n        \n      \n      \n        \n      \n    \n  \n} @else {\n  \n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if(isDataLoaded){                              Télésport is a web application designed to bring the history of the Olympic Games to life,          offering visually engaging and interactive graphical representations of key data such as participant          demographics,          medal counts, athlete statistics, and more from past editions of the Games.                    {{ title }}                                                      } @else {  }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CountriesChartComponent', 'selector': 'app-countries-chart'},{'name': 'CountryDetailChartComponent', 'selector': 'app-country-detail-chart'},{'name': 'DashboardCountriesComponent', 'selector': 'app-dashboard-countries'},{'name': 'DashboardCountryDetailComponent', 'selector': 'app-dashboard-country-detail'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HttpErrorComponent', 'selector': 'app-http-error'},{'name': 'InfoDetailChartComponent', 'selector': 'app-info-detail-chart'},{'name': 'LoaderComponent', 'selector': 'app-loader'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DashboardCountriesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DashboardCountryDetailComponent.html":{"url":"components/DashboardCountryDetailComponent.html","title":"component - DashboardCountryDetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DashboardCountryDetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/dashboard-country-detail/dashboard-country-detail.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                    UnsubscribeObservableService\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dashboard-country-detail\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                CountryDetailChartComponent\n                                InfoDetailChartComponent\n                            LineChartModule\n                            NgIf\n                                HttpErrorComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./dashboard-country-detail.component.html\n            \n\n\n\n            \n                styleUrl\n                ./dashboard-country-detail.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                numberOfEntries\n                            \n                            \n                                totalNumberMedals\n                            \n                            \n                                totalNumberOfAthletes\n                            \n                            \n                                    Private\n                                unsubscribe$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCountryData\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                countrySelectedData\n                            \n                            \n                                dataCountryChart\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(chartFormat: ChartFormatDataService, chartData: ChartDataService, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/dashboard-country-detail/dashboard-country-detail.component.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        chartFormat\n                                                  \n                                                        \n                                                                        ChartFormatDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        chartData\n                                                  \n                                                        \n                                                                        ChartDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        countrySelectedData\n                    \n                \n                \n                    \n                        Type :         Olympic | undefined\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/dashboard-country-detail/dashboard-country-detail.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        dataCountryChart\n                    \n                \n                \n                    \n                        Type :         CountryDetailChartFormat | \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/dashboard-country-detail/dashboard-country-detail.component.ts:34\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getCountryData\n                        \n                    \n                \n            \n            \n                \ngetCountryData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/dashboard-country-detail/dashboard-country-detail.component.ts:51\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/dashboard-country-detail/dashboard-country-detail.component.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Inherited from         UnsubscribeObservableService\n\n                        \n                    \n                    \n                        \n                                Defined in         UnsubscribeObservableService:9\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        numberOfEntries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/dashboard-country-detail/dashboard-country-detail.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalNumberMedals\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/dashboard-country-detail/dashboard-country-detail.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalNumberOfAthletes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/dashboard-country-detail/dashboard-country-detail.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        unsubscribe$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                        \n                            \n                                Inherited from         UnsubscribeObservableService\n\n                            \n                        \n                    \n                        \n                                Defined in         UnsubscribeObservableService:7\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { LineChartModule } from \"@swimlane/ngx-charts\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { NgIf } from \"@angular/common\";\nimport { CountryDetailChartComponent } from '../../components/country-detail-chart/country-detail-chart.component';\nimport { InfoDetailChartComponent } from '../../components/info-detail-chart/info-detail-chart.component';\nimport { UnsubscribeObservableService } from 'src/app/core/services/unsubsribe-observable/unsubscribe-observable.service';\nimport { CountryDetailChartFormat } from 'src/app/core/models/types/CountryDetailChartFormat';\nimport { Olympic } from 'src/app/core/models/interfaces/Olympic';\nimport { takeUntil } from 'rxjs';\nimport { Participation } from 'src/app/core/models/interfaces/Participation';\nimport { ChartFormatDataService } from 'src/app/core/services/chart-format/chart-format-data.service';\nimport { ChartDataService } from 'src/app/core/services/chart-data/chart-data.service';\nimport {HttpErrorComponent} from \"../../components/http-error/http-error.component\";\n\n@Component({\n  selector: 'app-dashboard-country-detail',\n  standalone: true,\n  imports: [\n    CountryDetailChartComponent,\n    InfoDetailChartComponent,\n    LineChartModule,\n    NgIf,\n    HttpErrorComponent\n  ],\n  templateUrl: './dashboard-country-detail.component.html',\n  styleUrl: './dashboard-country-detail.component.scss'\n})\nexport class DashboardCountryDetailComponent extends UnsubscribeObservableService implements OnInit {\n\n  @Input()\n  countrySelectedData!: Olympic | undefined;\n  @Input()\n  dataCountryChart!: CountryDetailChartFormat | [];\n\n  numberOfEntries: number = 0;\n  totalNumberMedals: number = 0;\n  totalNumberOfAthletes: number = 0;\n\n  constructor(private chartFormat: ChartFormatDataService,\n    private chartData: ChartDataService,\n    private route: ActivatedRoute\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.getCountryData();\n  }\n\n  getCountryData(): void {\n    const countryId: number = this.route.snapshot.params['id'];\n\n    this.chartData.getDataByCountryId(countryId).pipe(takeUntil(this.getUnsubscribe)).subscribe(\n      (countryData: Olympic | undefined) => {\n        this.countrySelectedData = countryData;\n        if (this.countrySelectedData !== undefined) {\n          this.dataCountryChart = this.chartFormat.getFormatDataForLineChartByCountry(this.countrySelectedData)\n        }\n\n        if (countryData !== undefined) {\n          this.numberOfEntries = countryData.participations.length ?? 0;\n          this.totalNumberMedals = countryData.participations.reduce((acc: number, data: Participation) => acc + data.medalsCount, 0);\n          this.totalNumberOfAthletes = countryData.participations.reduce((acc: number, data: Participation) => acc + data.athleteCount, 0);\n        }\n      }\n    )\n  }\n}\n\n    \n\n    \n        @if (countrySelectedData) {\n  \n    \n      {{ countrySelectedData.country }}\n      \n        \n        \n        \n      \n      \n        \n      \n    \n  \n} @else {\n  \n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (countrySelectedData) {            {{ countrySelectedData.country }}                                                              } @else {  }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CountriesChartComponent', 'selector': 'app-countries-chart'},{'name': 'CountryDetailChartComponent', 'selector': 'app-country-detail-chart'},{'name': 'DashboardCountriesComponent', 'selector': 'app-dashboard-countries'},{'name': 'DashboardCountryDetailComponent', 'selector': 'app-dashboard-country-detail'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HttpErrorComponent', 'selector': 'app-http-error'},{'name': 'InfoDetailChartComponent', 'selector': 'app-info-detail-chart'},{'name': 'LoaderComponent', 'selector': 'app-loader'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DashboardCountryDetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/header/header.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterLink\n                            RouterLinkActive\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n            \n                styleUrl\n                ./header.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterLink, RouterLinkActive } from \"@angular/router\";\n\n\n@Component({\n  selector: 'app-header',\n  standalone: true,\n  imports: [RouterLink, RouterLinkActive],\n  templateUrl: './header.component.html',\n  styleUrl: './header.component.scss'\n})\nexport class HeaderComponent {\n\n}\n\n    \n\n    \n        \n  \n    \n      Olympic games app\n    \n    \n      Dashboard\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Olympic games app              Dashboard      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CountriesChartComponent', 'selector': 'app-countries-chart'},{'name': 'CountryDetailChartComponent', 'selector': 'app-country-detail-chart'},{'name': 'DashboardCountriesComponent', 'selector': 'app-dashboard-countries'},{'name': 'DashboardCountryDetailComponent', 'selector': 'app-dashboard-country-detail'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HttpErrorComponent', 'selector': 'app-http-error'},{'name': 'InfoDetailChartComponent', 'selector': 'app-info-detail-chart'},{'name': 'LoaderComponent', 'selector': 'app-loader'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HttpErrorComponent.html":{"url":"components/HttpErrorComponent.html","title":"component - HttpErrorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HttpErrorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/http-error/http-error.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-http-error\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterLink\n                            NgIf\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./http-error.component.html\n            \n\n\n\n            \n                styleUrl\n                ./http-error.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                showGoBackLink\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                message\n                            \n                            \n                                statusCode\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/http-error/http-error.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        message\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'No corresponding page found'\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/http-error/http-error.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        statusCode\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/http-error/http-error.component.ts:21\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/http-error/http-error.component.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        showGoBackLink\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/http-error/http-error.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\nimport {Router, RouterLink} from \"@angular/router\";\nimport {NgIf} from \"@angular/common\";\n\n@Component({\n  selector: 'app-http-error',\n  standalone: true,\n  templateUrl: './http-error.component.html',\n  styleUrl: './http-error.component.scss',\n  imports: [\n    RouterLink,\n    NgIf\n  ],\n})\nexport class HttpErrorComponent implements OnInit {\n\n  @Input()\n  message: string = 'No corresponding page found';\n\n  @Input()\n  statusCode!: number;\n\n  showGoBackLink!: boolean;\n\n  constructor(private router: Router) {\n  }\n\n  ngOnInit(): void {\n    this.showGoBackLink = this.router.url === \"/\";\n  }\n\n}\n\n    \n\n    \n        \n  {{ message }}\n  {{statusCode}}\n  Go Back\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ message }}  {{statusCode}}  Go Back'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CountriesChartComponent', 'selector': 'app-countries-chart'},{'name': 'CountryDetailChartComponent', 'selector': 'app-country-detail-chart'},{'name': 'DashboardCountriesComponent', 'selector': 'app-dashboard-countries'},{'name': 'DashboardCountryDetailComponent', 'selector': 'app-dashboard-country-detail'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HttpErrorComponent', 'selector': 'app-http-error'},{'name': 'InfoDetailChartComponent', 'selector': 'app-info-detail-chart'},{'name': 'LoaderComponent', 'selector': 'app-loader'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HttpErrorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InfoDetailChartComponent.html":{"url":"components/InfoDetailChartComponent.html","title":"component - InfoDetailChartComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InfoDetailChartComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/info-detail-chart/info-detail-chart.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-info-detail-chart\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./info-detail-chart.component.html\n            \n\n\n\n            \n                styleUrl\n                ./info-detail-chart.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/info-detail-chart/info-detail-chart.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/info-detail-chart/info-detail-chart.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-info-detail-chart',\n  standalone: true,\n  imports: [],\n  templateUrl: './info-detail-chart.component.html',\n  styleUrl: './info-detail-chart.component.scss'\n})\nexport class InfoDetailChartComponent {\n\n  @Input()\n  title!: string;\n\n  @Input()\n  value!: number;\n\n}\n\n    \n\n    \n        \n    {{ title}}\n    {{ value }}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ title}}    {{ value }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CountriesChartComponent', 'selector': 'app-countries-chart'},{'name': 'CountryDetailChartComponent', 'selector': 'app-country-detail-chart'},{'name': 'DashboardCountriesComponent', 'selector': 'app-dashboard-countries'},{'name': 'DashboardCountryDetailComponent', 'selector': 'app-dashboard-country-detail'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HttpErrorComponent', 'selector': 'app-http-error'},{'name': 'InfoDetailChartComponent', 'selector': 'app-info-detail-chart'},{'name': 'LoaderComponent', 'selector': 'app-loader'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InfoDetailChartComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoaderComponent.html":{"url":"components/LoaderComponent.html","title":"component - LoaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/loader/loader.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-loader\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            AsyncPipe\n                            NgIf\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./loader.component.html\n            \n\n\n\n            \n                styleUrl\n                ./loader.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loading$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(loaderService: LoaderService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/loader/loader.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loaderService\n                                                  \n                                                        \n                                                                        LoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/loader/loader.component.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loading$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/loader/loader.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {AsyncPipe, NgIf} from \"@angular/common\";\nimport {LoaderService} from \"../../core/services/loader/loader.service\";\nimport {Observable} from \"rxjs\";\n\n@Component({\n  selector: 'app-loader',\n  standalone: true,\n  imports: [AsyncPipe, NgIf],\n  templateUrl: './loader.component.html',\n  styleUrl: './loader.component.scss'\n})\nexport class LoaderComponent implements OnInit {\n\n  loading$!: Observable;\n\n  constructor(\n    private loaderService: LoaderService\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.loading$ = this.loaderService.loading$;\n  }\n\n}\n\n    \n\n    \n        \n  LOADING PAGE ...\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  LOADING PAGE ...'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CountriesChartComponent', 'selector': 'app-countries-chart'},{'name': 'CountryDetailChartComponent', 'selector': 'app-country-detail-chart'},{'name': 'DashboardCountriesComponent', 'selector': 'app-dashboard-countries'},{'name': 'DashboardCountryDetailComponent', 'selector': 'app-dashboard-country-detail'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HttpErrorComponent', 'selector': 'app-http-error'},{'name': 'InfoDetailChartComponent', 'selector': 'app-info-detail-chart'},{'name': 'LoaderComponent', 'selector': 'app-loader'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/LoaderHttpInterceptorService.html":{"url":"interceptors/LoaderHttpInterceptorService.html","title":"interceptor - LoaderHttpInterceptorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  LoaderHttpInterceptorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/loader-http-interceptor/loader-http-interceptor.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(loaderService: LoaderService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/loader-http-interceptor/loader-http-interceptor.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loaderService\n                                                  \n                                                        \n                                                                        LoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest<>, next: HttpHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/loader-http-interceptor/loader-http-interceptor.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        HttpRequest<>\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        HttpHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from \"@angular/common/http\";\nimport { finalize, Observable } from \"rxjs\";\nimport { LoaderService } from '../loader/loader.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoaderHttpInterceptorService implements HttpInterceptor {\n\n  constructor(private loaderService: LoaderService) {\n  }\n\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    this.loaderService.loadingOn();\n    return next.handle(req).pipe(\n      finalize(() => {\n        this.loaderService.loadingOff();\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoaderService.html":{"url":"injectables/LoaderService.html","title":"injectable - LoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/loader/loader.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                loading$\n                            \n                            \n                                    Private\n                                loadingSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadingOff\n                            \n                            \n                                loadingOn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/loader/loader.service.ts:10\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        loadingOff\n                        \n                    \n                \n            \n            \n                \nloadingOff()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/loader/loader.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadingOn\n                        \n                    \n                \n            \n            \n                \nloadingOn()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/loader/loader.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        loading$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.loadingSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/loader/loader.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loadingSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/loader/loader.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {BehaviorSubject, Observable} from \"rxjs\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoaderService {\n\n  private loadingSubject: BehaviorSubject = new BehaviorSubject(false);\n  public loading$: Observable = this.loadingSubject.asObservable();\n\n  constructor() {\n  }\n\n  loadingOn() {\n    this.loadingSubject.next(true);\n  }\n\n  loadingOff() {\n    this.loadingSubject.next(false);\n    this.loadingSubject.complete();0\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Olympic.html":{"url":"interfaces/Olympic.html","title":"interface - Olympic","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Olympic\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/interfaces/Olympic.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            country\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            participations\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        country\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        country:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        participations\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        participations:         Participation[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Participation[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Participation } from \"./Participation\";\n\nexport interface Olympic {\n    id: number;\n    country: string;\n    participations: Participation[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OlympicService.html":{"url":"injectables/OlympicService.html","title":"injectable - OlympicService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OlympicService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/olympic/olympic.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                olympics$\n                            \n                            \n                                    Private\n                                olympicUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getOlympics\n                            \n                            \n                                loadInitialData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, toastService: ToastrService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/olympic/olympic.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getOlympics\n                        \n                    \n                \n            \n            \n                \ngetOlympics()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/olympic/olympic.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadInitialData\n                        \n                    \n                \n            \n            \n                \nloadInitialData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/olympic/olympic.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        olympics$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/olympic/olympic.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        olympicUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : './assets/mock/olympic.json'\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/olympic/olympic.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {HttpClient} from '@angular/common/http';\nimport {Injectable} from '@angular/core';\nimport {BehaviorSubject, Observable} from 'rxjs';\nimport {catchError, tap} from 'rxjs/operators';\nimport {ToastrService} from \"ngx-toastr\";\nimport {Olympic} from \"../../models/interfaces/Olympic\";\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OlympicService {\n  private olympicUrl:string = './assets/mock/olympic.json';\n  private olympics$: BehaviorSubject = new BehaviorSubject(null);\n\n  constructor(\n    private http: HttpClient,\n    private toastService: ToastrService) {\n  }\n\n  loadInitialData() {\n    return this.http.get(this.olympicUrl).pipe(\n      tap((value: Olympic[] | null) => {\n        if (value !== null && value.length > 0) {\n          this.olympics$.next(value)\n        } else {\n          this.toastService.error('Error, please try later or contact the support team');\n        }\n      }),\n      catchError((error: string, caught: Observable) => {\n        this.toastService.error(error);\n        this.olympics$.next(null);\n        return caught;\n      })\n    );\n  }\n\n  getOlympics() {\n    return this.olympics$.asObservable();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OlympicsServiceMock.html":{"url":"classes/OlympicsServiceMock.html","title":"class - OlympicsServiceMock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OlympicsServiceMock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/test/OlympicsServiceMock.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getOlympics\n                            \n                            \n                                loadInitialData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getOlympics\n                        \n                    \n                \n            \n            \n                \ngetOlympics()\n                \n            \n\n\n                    \n                        \n                            Defined in src/test/OlympicsServiceMock.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadInitialData\n                        \n                    \n                \n            \n            \n                \nloadInitialData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/test/OlympicsServiceMock.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {of} from \"rxjs\";\n\n\nexport class OlympicsServiceMock {\n\n  loadInitialData() {\n    return of([\n      {\n        \"id\": 1,\n        \"country\": \"Italy\",\n        \"participations\": [\n          {\n            \"id\": 1,\n            \"year\": 2012,\n            \"city\": \"Londres\",\n            \"medalsCount\": 28,\n            \"athleteCount\": 372\n          },\n          {\n            \"id\": 2,\n            \"year\": 2016,\n            \"city\": \"Rio de Janeiro\",\n            \"medalsCount\": 28,\n            \"athleteCount\": 375\n          },\n          {\n            \"id\": 3,\n            \"year\": 2020,\n            \"city\": \"Tokyo\",\n            \"medalsCount\": 40,\n            \"athleteCount\": 381\n          }\n        ]\n      }],)\n  }\n\n  getOlympics () {\n    return of([\n      {\n        \"id\": 1,\n        \"country\": \"Italy\",\n        \"participations\": [\n          {\n            \"id\": 1,\n            \"year\": 2012,\n            \"city\": \"Londres\",\n            \"medalsCount\": 28,\n            \"athleteCount\": 372\n          },\n          {\n            \"id\": 2,\n            \"year\": 2016,\n            \"city\": \"Rio de Janeiro\",\n            \"medalsCount\": 28,\n            \"athleteCount\": 375\n          },\n          {\n            \"id\": 3,\n            \"year\": 2020,\n            \"city\": \"Tokyo\",\n            \"medalsCount\": 40,\n            \"athleteCount\": 381\n          }\n        ]\n      }],)\n  }\n\n\n\n\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Participation.html":{"url":"interfaces/Participation.html","title":"interface - Participation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Participation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/interfaces/Participation.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            athleteCount\n                                        \n                                \n                                \n                                        \n                                            city\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            medalsCount\n                                        \n                                \n                                \n                                        \n                                            year\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        athleteCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        athleteCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        medalsCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        medalsCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        year\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        year:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Participation {\n    id: number;\n    year: number;\n    city: string;\n    medalsCount: number;\n    athleteCount: number\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UnsubscribeObservableService.html":{"url":"injectables/UnsubscribeObservableService.html","title":"injectable - UnsubscribeObservableService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UnsubscribeObservableService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/unsubsribe-observable/unsubscribe-observable.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                unsubscribe$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getUnsubscribe\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/unsubsribe-observable/unsubscribe-observable.service.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        unsubscribe$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/unsubsribe-observable/unsubscribe-observable.service.ts:7\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        getUnsubscribe\n                    \n                \n\n                \n                    \n                        getgetUnsubscribe()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/services/unsubsribe-observable/unsubscribe-observable.service.ts:14\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {Injectable, OnDestroy} from \"@angular/core\";\nimport {Subject} from \"rxjs\";\n\n@Injectable()\nexport class UnsubscribeObservableService implements OnDestroy {\n\n  private unsubscribe$: Subject = new Subject();\n\n  ngOnDestroy(): void {\n    this.unsubscribe$.next();\n    this.unsubscribe$.complete();\n  }\n\n  public get getUnsubscribe(): Subject {\n    return this.unsubscribe$;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/chartDataServiceMock.html":{"url":"classes/chartDataServiceMock.html","title":"class - chartDataServiceMock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  chartDataServiceMock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/test/mockData/chartDataServiceMock.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDataByCountryId\n                            \n                            \n                                getTotalCountry\n                            \n                            \n                                getTotalJos\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getDataByCountryId\n                        \n                    \n                \n            \n            \n                \ngetDataByCountryId(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/test/mockData/chartDataServiceMock.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTotalCountry\n                        \n                    \n                \n            \n            \n                \ngetTotalCountry()\n                \n            \n\n\n                    \n                        \n                            Defined in src/test/mockData/chartDataServiceMock.ts:10\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTotalJos\n                        \n                    \n                \n            \n            \n                \ngetTotalJos()\n                \n            \n\n\n                    \n                        \n                            Defined in src/test/mockData/chartDataServiceMock.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {Observable, of} from \"rxjs\";\nimport {Olympic} from \"../../app/core/models/interfaces/Olympic\";\n\nexport class chartDataServiceMock {\n\n  getTotalJos(): Observable {\n    return of(2)\n  }\n\n  getTotalCountry(): Observable {\n    return of(5)\n  }\n\n  getDataByCountryId(id: number): Observable {\n    return of(\n      {\n        id: 1,\n        country: \"France\",\n        participations: [\n          {\n            id: 1,\n            year: 2018,\n            city: \"LA\",\n            medalsCount: 120,\n            athleteCount: 350\n          }\n        ]\n      }\n    )\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/countries-chart/countries-chart.component.ts\n            \n            component\n            CountriesChartComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/components/country-detail-chart/country-detail-chart.component.ts\n            \n            component\n            CountryDetailChartComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/components/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/http-error/http-error.component.ts\n            \n            component\n            HttpErrorComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/info-detail-chart/info-detail-chart.component.ts\n            \n            component\n            InfoDetailChartComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/loader/loader.component.ts\n            \n            component\n            LoaderComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/models/interfaces/Olympic.ts\n            \n            interface\n            Olympic\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/models/interfaces/Participation.ts\n            \n            interface\n            Participation\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                        src/app/core/models/types/CountryAllChartFormat.ts\n            \n            type alias\n            CountryAllChartFormat\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/models/types/CountryDetailChartFormat.ts\n            \n            type alias\n            CountryDetailChartData\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/models/types/CountryDetailChartFormat.ts\n            \n            type alias\n            CountryDetailChartFormat\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/models/types/CountryDetailChartFormat.ts\n            \n            type alias\n            SeriesData\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/chart-data/chart-data.service.ts\n            \n            injectable\n            ChartDataService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/core/services/chart-format/chart-format-data.service.ts\n            \n            injectable\n            ChartFormatDataService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/services/loader-http-interceptor/loader-http-interceptor.service.ts\n            \n            interceptor\n            LoaderHttpInterceptorService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/services/loader/loader.service.ts\n            \n            injectable\n            LoaderService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/services/olympic/olympic.service.ts\n            \n            injectable\n            OlympicService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/services/unsubsribe-observable/unsubscribe-observable.service.ts\n            \n            injectable\n            UnsubscribeObservableService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/pages/dashboard-countries/dashboard-countries.component.ts\n            \n            component\n            DashboardCountriesComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/pages/dashboard-country-detail/dashboard-country-detail.component.ts\n            \n            component\n            DashboardCountryDetailComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                        src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test/OlympicsServiceMock.ts\n            \n            class\n            OlympicsServiceMock\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/test/mockData/chartDataServiceMock.ts\n            \n            class\n            chartDataServiceMock\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/test/mockData/chartFormatServiceMock.ts\n            \n            class\n            ChartFormatServiceMock\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/test/mockData/olympicsDataMock.ts\n            \n            variable\n            olympicsMockData\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/test/mockData/olympics_test.ts\n            \n            variable\n            olympicsTest\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^18.0.3\n        \n            @angular/common : ^18.0.3\n        \n            @angular/compiler : ^18.0.3\n        \n            @angular/core : ^18.0.3\n        \n            @angular/forms : ^18.0.3\n        \n            @angular/platform-browser : ^18.0.3\n        \n            @angular/platform-browser-dynamic : ^18.0.3\n        \n            @angular/router : ^18.0.3\n        \n            @swimlane/ngx-charts : ^21.1.2\n        \n            ngx-toastr : ^19.0.0\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.3\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nOlympicGamesStarter\nThis project was generated with Angular CLI version 18.0.3.\nDon't forget to install your node_modules before starting (npm install).\nDevelopment server\nRun ng serve or npm start for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nProject Structure\ncomponents folder\nThis folder contains all reusable components:\n\nCountriesChart: A circular chart component.\nCountryDetailChart: A line chart component.\nInfoDetailChart: A detail section component.\nHeader: A header and navigation bar component.\nLoader: A basic loader component.\n\npages folder\nThis folder contains components used for routing:\n\nDashboardCountries: The main page component.\nDashboardCountryDetail: The detail page component.\n\ncore folder\nThis folder contains the business logic, including the services, types, and models folders.\nservices\nThis folder contains utility services:\n\nChartData: Handles data processing for charts.\nChartFormat: Formats data for the graphics library.\nLoader: Manages the logic for displaying loaders.\nOlympic: Simulates API calls for Olympic data.\nUnsubscribeObservable: Manages the closure of observables.\n\nmodels\nThis folder contains interfaces and types used across the application.\ninterfaces\n\nOlympic: Defines the structure of HTTP responses.\nOnResize: Used to adjust chart sizes dynamically.\nParticipations: Defines the structure for participation data.\n\ntypes\n\nCountryAllChartFormat: Defines the data format for the CountriesChart component.\nCountryDetailChartFormat: Defines the data format for the CountryDetailChart component.\n\nLibraries\n\nngx-toastr\nngx-charts\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nDashboardCountriesComponent\n\nDashboardCountriesComponent\n\nAppModule -->\n\nDashboardCountriesComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nHttpErrorComponent\n\nHttpErrorComponent\n\nAppModule -->\n\nHttpErrorComponent->AppModule\n\n\n\n\n\nLoaderComponent\n\nLoaderComponent\n\nAppModule -->\n\nLoaderComponent->AppModule\n\n\n\n\n\nLoaderHttpInterceptorService\n\nLoaderHttpInterceptorService\n\nAppModule -->\n\nLoaderHttpInterceptorService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    9 Components\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        3 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CountryAllChartFormat   (src/.../CountryAllChartFormat.ts)\n                        \n                        \n                            CountryDetailChartData   (src/.../CountryDetailChartFormat.ts)\n                        \n                        \n                            CountryDetailChartFormat   (src/.../CountryDetailChartFormat.ts)\n                        \n                        \n                            SeriesData   (src/.../CountryDetailChartFormat.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/models/types/CountryAllChartFormat.ts\n    \n    \n        \n            \n                \n                    \n                    CountryAllChartFormat\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/app/core/models/types/CountryDetailChartFormat.ts\n    \n    \n        \n            \n                \n                    \n                    CountryDetailChartData\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    CountryDetailChartFormat\n                \n            \n            \n                \n                            CountryDetailChartData[]\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    SeriesData\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            olympicsMockData   (src/.../olympicsDataMock.ts)\n                        \n                        \n                            olympicsTest   (src/.../olympics_test.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require.context('./', true, /\\.spec\\.ts$/)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        require\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false\n}\n                    \n                \n\n\n        \n    \n\n    src/test/mockData/olympicsDataMock.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        olympicsMockData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Olympic[]\n\n                    \n                \n                \n                    \n                        Default value : [{\n  id: 1,\n  country: 'Country 1',\n  participations: [{id: 1, year: 2000, city: 'paris', medalsCount: 2, athleteCount: 3}]\n}, {\n  id: 2,\n  country: 'Country 2',\n  participations: [{id: 1, year: 2000, city: 'paris', medalsCount: 2, athleteCount: 3}]\n}\n]\n                    \n                \n\n\n        \n    \n\n    src/test/mockData/olympics_test.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        olympicsTest\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    \"id\": 1,\n    \"country\": \"Italy\",\n    \"participations\": [\n      {\n        \"id\": 1,\n        \"year\": 2012,\n        \"city\": \"Londres\",\n        \"medalsCount\": 28,\n        \"athleteCount\": 372\n      },\n      {\n        \"id\": 2,\n        \"year\": 2016,\n        \"city\": \"Rio de Janeiro\",\n        \"medalsCount\": 28,\n        \"athleteCount\": 375\n      },\n      {\n        \"id\": 3,\n        \"year\": 2020,\n        \"city\": \"Tokyo\",\n        \"medalsCount\": 40,\n        \"athleteCount\": 381\n      }\n    ]\n  },\n  {\n    \"id\": 2,\n    \"country\": \"Spain\",\n    \"participations\": [\n      {\n        \"id\": 1,\n        \"year\": 2012,\n        \"city\": \"Londres\",\n        \"medalsCount\": 20,\n        \"athleteCount\": 315\n      },\n      {\n        \"id\": 2,\n        \"year\": 2016,\n        \"city\": \"Rio de Janeiro\",\n        \"medalsCount\": 17,\n        \"athleteCount\": 312\n      },\n      {\n        \"id\": 3,\n        \"year\": 2020,\n        \"city\": \"Tokyo\",\n        \"medalsCount\": 17,\n        \"athleteCount\": 321\n      }\n    ]\n  },\n  {\n    \"id\": 3,\n    \"country\": \"United States\",\n    \"participations\": [\n      {\n        \"id\": 1,\n        \"year\": 2012,\n        \"city\": \"Londres\",\n        \"medalsCount\": 109,\n        \"athleteCount\": 610\n      },\n      {\n        \"id\": 2,\n        \"year\": 2016,\n        \"city\": \"Rio de Janeiro\",\n        \"medalsCount\": 123,\n        \"athleteCount\": 652\n      },\n      {\n        \"id\": 3,\n        \"year\": 2020,\n        \"city\": \"Tokyo\",\n        \"medalsCount\": 113,\n        \"athleteCount\": 626\n      }\n    ]\n  },\n  {\n    \"id\": 4,\n    \"country\": \"Germany\",\n    \"participations\": [\n      {\n        \"id\": 1,\n        \"year\": 2012,\n        \"city\": \"Londres\",\n        \"medalsCount\": 44,\n        \"athleteCount\": 425\n      },\n      {\n        \"id\": 2,\n        \"year\": 2016,\n        \"city\": \"Rio de Janeiro\",\n        \"medalsCount\": 44,\n        \"athleteCount\": 422\n      },\n      {\n        \"id\": 3,\n        \"year\": 2020,\n        \"city\": \"Tokyo\",\n        \"medalsCount\": 37,\n        \"athleteCount\": 425\n      }\n    ]\n  },\n  {\n    \"id\": 5,\n    \"country\": \"France\",\n    \"participations\": [\n      {\n        \"id\": 1,\n        \"year\": 2012,\n        \"city\": \"Londres\",\n        \"medalsCount\": 35,\n        \"athleteCount\": 423\n      },\n      {\n        \"id\": 2,\n        \"year\": 2016,\n        \"city\": \"Rio de Janeiro\",\n        \"medalsCount\": 45,\n        \"athleteCount\": 412\n      },\n      {\n        \"id\": 3,\n        \"year\": 2020,\n        \"city\": \"Tokyo\",\n        \"medalsCount\": 33,\n        \"athleteCount\": 403\n      }\n    ]\n  }\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}

var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.442,1,0.921]],["body/components/AppComponent.html",[0,0.642,1,1.455,2,1.362,3,0.439,4,0.272,5,1.139,6,2.826,7,1.139,8,1.139,9,0.272,10,2.359,11,1.609,12,2.684,13,1.139,14,2.429,15,2.255,16,2.099,17,3.993,18,4.63,19,1.609,20,3.993,21,0.31,22,1.062,23,2.985,24,0.819,25,2.917,26,0.964,27,2.052,28,2.896,29,0.867,30,3.993,31,0.888,32,0.032,33,1.132,34,0.553,35,0.888,36,2.826,37,0.58,38,1.479,39,1.479,40,1.047,41,0.817,42,1.062,43,2.899,44,3.993,45,0.642,46,0.529,47,2.826,48,0.752,49,2.826,50,0.31,51,0.272,52,1.355,53,2.826,54,2.359,55,2.826,56,3.993,57,2.826,58,2.826,59,2.826,60,2.826,61,2.826,62,3.993,63,2.826,64,2.826,65,2.826,66,0.964,67,1.609,68,1.609,69,1.139,70,2.027,71,1.139,72,1.139,73,0.964,74,1.139,75,1.865,76,0.964,77,0.976,78,1.254,79,0.752,80,1.609,81,1.139,82,0.888,83,1.139,84,0.817,85,1.139,86,0.964,87,0.817,88,1.139,89,0.752,90,1.139,91,1.139,92,1.139,93,0.02,94,0.02]],["title/modules/AppModule.html",[95,2.053,96,2.053]],["body/modules/AppModule.html",[1,1.768,3,0.318,4,0.279,9,0.279,15,1.072,32,0.031,45,0.854,46,0.542,50,0.318,51,0.279,66,0.987,79,1.477,84,1.605,87,1.605,89,1.477,93,0.02,94,0.02,95,1.865,96,4.093,97,1.678,98,1.865,99,3.915,100,3.915,101,3.915,102,2.101,103,2.416,104,2.416,105,2.416,106,2.416,107,2.416,108,3.218,109,3.218,110,3.389,111,2.416,112,2.416,113,2.894,114,1.504,115,4.06,116,4.06,117,2.101,118,3.389,119,4.06,120,3.389,121,2.101,122,2.894,123,2.894,124,1.865,125,1.521,126,1.865,127,2.894,128,2.894,129,2.353,130,2.101,131,2.894,132,2.416,133,1.865,134,2.416,135,2.947,136,1.678,137,1.521,138,4.06,139,2.894,140,2.894,141,2.894,142,1.387,143,1.387,144,2.894,145,2.894,146,2.894,147,2.894,148,2.894,149,2.894,150,2.894,151,2.894,152,1.504,153,2.894,154,2.894,155,2.894]],["title/modules/AppRoutingModule.html",[95,2.053,108,1.846]],["body/modules/AppRoutingModule.html",[0,0.762,3,0.437,4,0.383,9,0.383,32,0.032,45,0.825,46,0.745,50,0.437,51,0.383,77,1.344,78,1.249,79,1.335,82,1.576,89,1.335,93,0.025,94,0.025,97,2.305,102,2.887,108,2.909,114,1.473,118,4.19,124,2.564,125,2.09,126,2.564,132,4.19,133,2.564,134,3.32,156,3.977,157,3.977,158,5.019,159,3.545,160,2.09,161,2.887,162,3.977,163,2.564,164,5.499,165,3.977,166,3.977]],["title/injectables/ChartDataService.html",[167,1,168,1.846]],["body/injectables/ChartDataService.html",[3,0.306,4,0.269,9,0.269,16,1.465,21,0.306,24,0.811,26,0.951,27,2.023,28,2.883,29,0.936,31,1.242,32,0.033,33,0.967,34,0.548,35,1.242,37,0.943,39,1.702,42,1.459,45,0.76,46,0.522,48,0.742,50,0.306,51,0.269,52,1.336,93,0.02,94,0.02,142,1.336,143,1.336,167,1.242,168,2.292,169,1.465,170,3.061,171,3.403,172,2.023,173,3.301,174,4.174,175,4.174,176,2.962,177,3.223,178,2.787,179,3.301,180,1.702,181,2.327,182,1.223,183,2.475,184,2.787,185,2.787,186,2.327,187,2.327,188,2.023,189,2.023,190,2.327,191,1.616,192,1.123,193,2.665,194,3.836,195,3.301,196,3.336,197,2.87,198,2.078,199,2.787,200,3.336,201,3.981,202,2.962,203,2.787,204,1.336,205,2.787,206,2.787,207,2.327,208,2.787,209,2.327,210,2.787]],["title/injectables/ChartFormatDataService.html",[167,1,211,1.846]],["body/injectables/ChartFormatDataService.html",[3,0.31,4,0.272,9,0.272,16,1.482,21,0.31,24,0.818,26,0.962,27,2.047,28,2.894,29,0.866,31,1.252,32,0.033,33,1.296,34,0.553,35,1.252,37,0.818,39,1.045,41,1.153,42,1.465,45,0.801,46,0.528,48,0.75,50,0.31,51,0.272,52,1.352,93,0.02,94,0.02,142,1.352,143,1.352,167,1.252,169,1.482,170,2.914,172,2.047,176,2.981,177,3.24,180,1.045,181,2.354,182,1.237,183,2.029,186,2.354,187,2.354,188,2.047,189,2.047,191,1.635,192,1.136,193,2.483,194,2.354,195,2.354,196,2.047,197,2.047,198,1.482,200,2.047,201,2.894,202,1.818,209,2.354,211,2.311,212,3.24,213,2.914,214,3.328,215,4.196,216,2.82,217,3.328,218,2.981,219,2.82,220,2.409,221,2.82,222,1.352,223,2.82,224,2.82,225,2.82,226,3.987,227,2.82,228,2.82,229,3.987,230,2.354,231,2.354,232,2.82,233,2.82]],["title/classes/ChartFormatServiceMock.html",[51,0.307,234,2.312]],["body/classes/ChartFormatServiceMock.html",[3,0.385,4,0.338,9,0.338,21,0.385,24,0.949,29,0.866,31,1.101,32,0.032,33,1.437,34,0.486,35,1.101,37,0.949,41,1.592,42,1.523,45,0.763,48,0.933,50,0.385,51,0.338,93,0.023,94,0.023,163,2.259,182,2.272,183,2.272,193,2.03,214,3.862,215,4.596,217,3.862,218,3.338,222,2.217,230,4.322,231,2.926,234,3.358,235,2.259,236,2.926,237,3.505,238,3.505,239,3.505,240,3.505,241,2.926,242,3.505,243,2.544,244,3.505,245,2.982,246,2.926,247,3.505,248,2.259,249,2.926,250,2.926,251,2.259,252,3.505,253,4.626]],["title/components/CountriesChartComponent.html",[0,0.442,73,1.086]],["body/components/CountriesChartComponent.html",[0,0.548,1,0.623,2,1.115,3,0.359,4,0.207,5,0.867,7,0.867,8,0.867,9,0.207,11,1.318,13,0.867,14,2.29,15,2.106,19,1.318,21,0.236,22,0.87,24,0.671,26,0.734,29,1.027,31,1.027,32,0.032,33,1.08,34,0.742,35,1.027,37,0.671,38,1.636,40,1.465,41,1.144,45,0.693,46,0.403,50,0.236,51,0.207,52,1.032,66,0.734,67,1.318,68,1.318,69,0.867,70,1.779,71,0.867,72,0.867,73,1.506,74,2.094,75,1.593,76,0.734,77,0.8,78,1.242,79,0.573,80,1.318,81,0.867,82,0.676,83,0.867,84,0.623,85,0.867,86,0.734,87,0.623,88,0.867,89,0.573,90,0.867,91,0.867,92,0.867,93,0.016,94,0.016,114,1.212,135,2.871,136,1.248,137,1.132,142,1.032,143,1.032,152,1.853,160,1.132,163,1.388,176,2.549,177,2.847,180,1.76,192,0.867,202,1.388,222,2.397,254,4.669,255,4.06,256,1.388,257,2.079,258,2.73,259,2.108,260,1.435,261,2.374,262,1.435,263,2.374,264,3.301,265,3.955,266,3.955,267,3.955,268,3.301,269,3.271,270,2.549,271,3.448,272,1.896,273,2.56,274,1.797,275,4.175,276,3.271,277,1.797,278,3.271,279,2.153,280,2.153,281,3.301,282,1.797,283,2.73,284,1.797,285,3.224,286,2.153,287,2.73,288,2.153,289,2.153,290,1.896,291,1.797,292,1.797,293,1.797,294,1.797,295,2.153,296,2.153,297,2.153,298,2.153,299,1.797]],["title/components/CountryDetailChartComponent.html",[0,0.442,76,1.086]],["body/components/CountryDetailChartComponent.html",[0,0.541,1,0.61,2,1.098,3,0.354,4,0.203,5,0.849,7,0.849,8,0.849,9,0.203,11,1.297,13,0.849,14,2.278,15,2.095,19,1.297,21,0.232,22,0.856,24,0.66,29,1.041,32,0.032,33,0.787,34,0.756,37,0.433,38,1.192,39,1.192,40,1.838,41,1.434,45,0.606,46,0.395,50,0.232,51,0.203,66,0.719,67,1.297,68,1.297,69,0.849,70,1.76,71,0.849,72,0.849,73,0.719,74,0.849,75,1.573,76,1.49,77,1.301,78,1.988,79,0.561,80,1.297,81,0.849,82,0.662,83,0.849,84,0.61,85,0.849,86,0.719,87,0.61,88,0.849,89,0.561,90,0.849,91,0.849,92,0.849,93,0.016,94,0.016,114,1.192,135,2.834,136,1.222,137,1.108,152,2.125,180,1.619,256,1.359,257,2.052,258,2.687,259,2.075,260,1.412,261,2.336,262,1.412,263,2.336,264,3.259,268,3.259,270,2.516,271,3.416,272,1.866,273,2.263,277,1.76,281,3.259,282,1.76,283,2.687,284,1.76,285,3.585,290,1.866,291,1.76,293,1.76,294,1.76,299,1.76,300,4.721,301,4.106,302,3.904,303,3.904,304,3.904,305,3.904,306,3.904,307,3.904,308,2.263,309,2.108,310,2.108,311,2.108,312,2.108,313,2.108,314,2.108,315,2.108,316,3.219,317,2.108,318,2.108]],["title/components/DashboardCountriesComponent.html",[0,0.442,79,0.847]],["body/components/DashboardCountriesComponent.html",[0,0.489,1,0.519,2,0.969,3,0.312,4,0.173,5,0.723,7,0.723,8,0.723,9,0.173,11,1.145,12,2.043,13,0.723,14,2.186,15,2.01,19,1.145,21,0.197,22,0.756,23,2.815,24,0.583,25,2.323,26,0.969,29,0.996,31,0.564,32,0.032,33,0.862,34,0.674,35,0.564,37,0.723,38,1.72,39,1.053,40,0.665,41,0.519,42,0.756,43,2.909,45,0.737,46,0.336,48,0.756,50,0.197,51,0.173,66,0.612,67,1.145,68,1.145,69,0.723,70,1.615,71,0.723,72,0.723,73,1.367,74,1.42,75,1.42,76,0.612,77,0.862,78,1.259,79,1.066,80,2.032,81,0.723,82,0.564,83,0.723,84,0.519,85,0.723,86,1.367,87,0.519,88,0.723,89,1.066,90,0.723,91,0.723,92,0.723,93,0.014,94,0.014,114,1.053,124,1.157,125,0.944,126,1.157,133,3.347,152,1.053,168,2.323,170,1.647,171,1.157,180,1.72,192,1.959,198,1.853,204,0.861,211,2.323,212,1.157,213,1.041,222,1.921,255,1.303,260,1.247,262,1.247,273,1.647,285,1.831,292,1.499,319,3.769,320,1.499,321,2.372,322,2.531,323,2.841,324,2.841,325,3.525,326,3.525,327,4.366,328,4.366,329,2.062,330,4.008,331,2.909,332,1.796,333,3.525,334,2.841,335,2.062,336,1.796,337,2.372,338,1.796,339,1.796,340,1.796,341,1.796,342,1.796,343,1.796,344,2.062,345,1.499,346,2.841,347,1.499,348,1.499,349,1.157,350,2.372,351,1.157,352,1.157,353,1.499,354,2.372,355,1.796,356,1.499,357,1.796,358,1.796,359,1.796,360,1.796,361,1.796,362,1.796,363,1.796,364,1.796,365,2.841,366,2.841,367,2.841,368,1.796,369,1.796,370,1.796,371,1.796,372,1.796,373,2.841,374,2.841,375,2.841,376,2.372,377,2.841,378,2.841,379,2.841,380,2.841,381,2.841,382,2.841,383,2.841,384,2.841,385,2.841,386,2.841,387,2.841,388,2.841,389,2.841,390,2.841,391,2.841,392,2.841,393,2.841,394,2.841,395,2.841,396,2.841,397,2.841]],["title/components/DashboardCountryDetailComponent.html",[0,0.442,82,1]],["body/components/DashboardCountryDetailComponent.html",[0,0.462,1,0.477,2,0.906,3,0.292,4,0.159,5,0.665,7,0.665,8,0.665,9,0.159,11,1.07,12,1.933,13,0.665,14,2.134,15,1.963,19,1.07,21,0.181,22,0.707,24,0.545,25,2.215,26,0.563,29,0.971,31,0.519,32,0.033,33,0.815,34,0.652,35,0.519,37,0.684,38,1.552,40,1.416,41,1.105,42,1.017,45,0.771,46,0.309,48,0.439,50,0.181,51,0.159,52,0.791,66,0.563,67,1.07,68,1.07,69,0.665,70,1.539,71,0.665,72,0.665,73,0.563,74,0.665,75,1.343,76,1.303,77,1.484,78,1.537,79,0.439,80,1.971,81,0.665,82,1.2,83,0.665,84,0.477,85,0.665,86,1.303,87,0.477,88,0.665,89,1.017,90,0.665,91,0.665,92,0.665,93,0.013,94,0.013,114,0.984,124,1.064,125,0.868,126,1.064,136,0.957,137,0.868,152,0.984,160,0.868,161,3.666,163,1.064,168,2.215,170,1.54,171,1.064,180,1.871,192,1.539,198,2.655,204,0.791,207,3.496,211,2.215,212,1.064,213,0.957,220,1.598,260,1.166,262,1.166,272,1.54,273,1.54,290,1.933,301,1.199,308,1.933,319,3.666,321,2.218,322,2.428,329,1.929,331,2.42,335,2.42,337,2.218,344,1.929,345,1.378,347,1.378,348,1.378,349,1.064,350,2.218,351,1.064,352,1.064,353,1.378,354,2.218,356,1.378,398,1.378,399,3.334,400,2.42,401,2.657,402,2.657,403,3.334,404,3.334,405,3.334,406,3.821,407,4.188,408,3.334,409,1.651,410,3.334,411,3.821,412,2.657,413,2.218,414,1.651,415,1.651,416,1.651,417,1.651,418,1.651,419,1.651,420,1.651,421,1.064,422,1.651,423,1.651,424,1.651,425,1.651,426,1.651,427,1.651,428,1.651,429,1.651,430,3.334,431,2.657,432,1.651,433,1.651,434,1.651,435,1.651,436,1.651,437,2.657,438,2.657,439,1.651,440,1.651,441,1.651,442,2.657]],["title/components/HeaderComponent.html",[0,0.442,84,0.921]],["body/components/HeaderComponent.html",[0,0.697,1,0.956,2,1.517,3,0.489,4,0.318,5,1.331,7,1.331,8,1.331,9,0.318,13,1.331,14,2.499,15,2.33,19,1.792,32,0.032,33,1.087,42,1.183,43,3.229,45,0.617,46,0.619,50,0.363,51,0.318,66,1.127,67,1.792,68,1.792,69,1.331,70,2.166,71,1.331,72,1.331,73,1.127,74,1.331,75,2.025,76,1.127,77,1.087,78,1.397,79,0.879,80,2.166,81,1.331,82,1.038,83,1.331,84,1.555,85,1.331,86,1.127,87,0.956,88,1.331,89,0.879,90,1.331,91,1.331,92,1.331,93,0.022,94,0.022,114,1.648,152,1.648,160,1.737,260,1.952,262,1.952,443,2.758,444,3.713,445,4.197,446,5.027,447,4.448,448,4.448]],["title/components/InfoDetailChartComponent.html",[0,0.442,86,1.086]],["body/components/InfoDetailChartComponent.html",[0,0.661,1,0.864,2,1.415,3,0.644,4,0.288,5,1.203,7,1.203,8,1.203,9,0.288,13,1.203,14,2.455,15,2.257,19,1.672,21,0.328,23,3.492,29,0.777,32,0.032,33,1.015,34,0.575,39,1.538,41,1.566,45,0.414,46,0.559,50,0.328,51,0.288,66,1.019,67,1.672,68,1.672,69,1.203,70,2.077,71,1.203,72,1.203,73,1.019,74,1.203,75,1.922,76,1.019,77,1.015,78,1.957,79,0.795,80,1.672,81,1.203,82,0.938,83,1.203,84,0.864,85,1.203,86,1.758,87,0.864,88,1.203,89,0.795,90,1.203,91,1.203,92,1.203,93,0.021,94,0.021,114,1.106,152,1.538,180,1.538,256,1.925,259,2.675,260,1.821,261,3.013,262,1.821,263,3.013,272,2.406,290,2.765,349,3.075,449,3.982,450,2.987,451,2.987]],["title/components/LoaderComponent.html",[0,0.442,87,0.921]],["body/components/LoaderComponent.html",[0,0.65,1,0.837,2,1.385,3,0.446,4,0.279,5,1.166,7,1.166,8,1.166,9,0.279,11,1.636,12,2.719,13,1.166,14,2.44,15,2.244,19,1.636,21,0.318,22,1.08,24,0.833,25,2.947,26,1.385,29,0.878,31,0.909,32,0.032,33,1.147,34,0.563,35,0.909,37,0.594,38,1.504,45,0.705,46,0.542,48,0.77,50,0.318,51,0.279,66,0.987,67,1.636,68,1.636,69,1.166,70,2.048,71,1.166,72,1.166,73,0.987,74,1.166,75,1.889,76,0.987,77,0.993,78,1.275,79,0.77,80,1.636,81,1.166,82,0.909,83,1.166,84,0.837,85,1.166,86,0.987,87,1.47,88,1.166,89,0.77,90,1.166,91,1.166,92,1.166,93,0.02,94,0.02,114,1.504,152,1.504,183,2.058,192,1.166,260,1.782,262,1.782,400,3.404,421,1.865,452,2.416,453,3.389,454,4.69,455,4.06,456,4.06,457,4.47,458,2.416,459,3.218,460,4.06,461,2.894,462,2.894,463,2.894,464,2.894,465,2.947]],["title/interceptors/LoaderHttpInterceptorService.html",[109,1.846,466,2.659]],["body/interceptors/LoaderHttpInterceptorService.html",[3,0.384,4,0.337,9,0.337,11,1.408,16,1.837,21,0.384,24,0.947,26,1.192,29,0.864,31,1.45,32,0.032,33,1.129,34,0.64,35,1.45,37,0.717,45,0.762,46,0.654,48,0.93,50,0.384,51,0.337,52,1.675,93,0.023,94,0.023,109,2.676,117,2.537,129,3.405,130,3.753,167,1.45,183,2.269,191,2.026,193,1.534,458,2.918,459,3.405,467,3.495,468,4.316,469,2.918,470,4.617,471,3.495,472,4.617,473,5.5,474,5.171,475,5.5,476,3.495,477,3.495,478,3.495,479,4.617,480,4.617,481,3.495,482,3.495,483,3.495,484,3.495]],["title/injectables/LoaderService.html",[167,1,459,1.846]],["body/injectables/LoaderService.html",[3,0.398,4,0.349,9,0.349,16,1.903,21,0.398,22,1.257,24,0.97,26,1.794,29,1.083,32,0.032,34,0.655,37,0.97,38,1.751,40,1.751,41,1.366,45,0.655,46,0.678,48,0.963,50,0.398,51,0.349,93,0.023,94,0.023,167,1.484,169,1.903,183,2.308,191,2.099,192,2.119,204,2.265,270,3.391,457,4.391,459,2.739,485,3.022,486,5.26,487,5.576,488,5.576,489,4.725,490,3.621,491,3.621,492,4.725,493,4.391,494,4.725,495,3.621,496,3.621,497,3.621,498,3.621]],["title/components/NotFoundComponent.html",[0,0.442,89,0.847]],["body/components/NotFoundComponent.html",[0,0.621,1,0.771,2,1.306,3,0.421,4,0.257,5,1.073,7,1.073,8,1.073,9,0.257,11,1.543,12,2.598,13,1.073,14,2.401,15,2.208,19,1.543,21,0.293,22,1.019,23,3.345,24,0.786,25,2.84,26,0.909,29,0.917,31,0.837,32,0.032,33,1.096,34,0.621,35,0.837,37,0.547,38,1.419,39,1.419,40,0.987,41,0.771,45,0.621,46,0.499,50,0.293,51,0.257,52,1.277,66,0.909,67,1.543,68,1.543,69,1.073,70,1.974,71,1.073,72,1.073,73,0.909,74,1.073,75,1.805,76,0.909,77,0.936,78,1.203,79,0.709,80,1.543,81,1.073,82,0.837,83,1.073,84,0.771,85,1.073,86,0.909,87,0.771,88,1.073,89,1.303,90,2.091,91,1.073,92,1.073,93,0.019,94,0.019,114,1.419,125,2.728,152,1.419,160,1.401,260,1.68,262,1.68,272,2.22,274,2.224,275,4.51,285,2.468,290,2.22,400,3.253,421,1.718,445,3.741,465,2.779,499,4.332,500,2.224,501,3.829,502,3.829,503,4.482,504,3.829,505,3.829,506,2.665,507,2.665,508,2.665,509,2.665,510,3.829,511,3.829]],["title/interfaces/Olympic.html",[42,0.847,512,1.527]],["body/interfaces/Olympic.html",[3,0.469,4,0.412,9,0.412,21,0.469,22,1.396,32,0.032,34,0.787,39,2.104,42,1.396,45,0.592,50,0.469,77,1.448,93,0.026,94,0.026,180,2.104,182,2.599,220,2.914,512,2.048,513,2.476,514,3.566,515,3.434]],["title/injectables/OlympicService.html",[28,1.674,167,1]],["body/injectables/OlympicService.html",[3,0.33,4,0.289,9,0.289,16,1.578,21,0.33,22,1.108,24,0.855,26,1.42,28,2.189,29,1.016,31,0.943,32,0.032,33,0.734,34,0.663,35,0.943,37,0.855,39,1.543,40,1.543,41,1.383,42,1.108,45,0.778,46,0.562,48,0.799,50,0.33,51,0.289,93,0.021,94,0.021,117,2.179,129,2.414,142,1.439,143,1.439,167,1.308,169,1.578,176,3.083,177,3.33,183,1.828,188,2.179,189,2.179,190,2.505,191,1.74,192,2.365,193,2.099,196,3.023,197,3.472,198,1.578,200,2.179,201,3.023,202,1.935,204,1.996,493,3.992,516,2.505,517,4.165,518,4.312,519,4.312,520,3.002,521,5.166,522,4.165,523,3.002,524,3.002,525,4.165,526,4.165,527,3.002,528,3.002,529,3.002,530,3.002,531,3.002,532,3.002,533,3.002,534,3.002,535,3.002,536,3.002,537,3.002,538,3.002,539,3.002,540,2.505,541,3.002,542,3.002,543,3.002]],["title/classes/OlympicsServiceMock.html",[51,0.307,544,2.312]],["body/classes/OlympicsServiceMock.html",[3,0.359,4,0.315,9,0.315,21,0.359,24,0.906,29,0.827,32,0.032,37,0.906,45,0.453,48,0.87,50,0.359,51,0.315,77,1.079,93,0.022,94,0.022,182,2.629,193,1.938,235,2.107,245,3.451,248,2.846,251,2.846,515,2.559,518,4.469,519,4.469,544,3.205,545,2.729,546,3.269,547,3.269,548,3.686,549,3.715,550,3.686,551,3.715,552,3.686,553,3.715,554,4.469,555,3.715,556,3.686,557,3.686,558,3.686,559,3.686,560,3.686,561,3.686,562,3.686,563,3.686,564,3.686,565,3.686]],["title/interfaces/OnResize.html",[257,1.674,512,1.527]],["body/interfaces/OnResize.html",[3,0.511,4,0.448,9,0.448,21,0.511,24,1.133,29,0.87,32,0.03,37,0.954,38,2.046,50,0.511,93,0.027,94,0.027,257,2.903,271,4.424,512,2.228,513,2.695,566,3.881,567,4.649]],["title/interfaces/Participation.html",[220,1.527,512,1.527]],["body/interfaces/Participation.html",[3,0.449,4,0.394,9,0.394,21,0.449,22,1.358,32,0.031,34,0.832,39,2.062,50,0.449,93,0.025,94,0.025,180,2.387,182,2.559,220,2.446,512,1.958,513,2.368,549,3.759,551,3.759,553,3.759,555,3.759,568,3.409]],["title/injectables/UnsubscribeObservableService.html",[167,1,322,1.846]],["body/injectables/UnsubscribeObservableService.html",[3,0.416,4,0.365,9,0.365,11,1.527,21,0.416,22,1.295,24,0.999,29,1.007,32,0.032,34,0.525,37,0.778,38,1.803,40,1.404,41,1.096,45,0.675,46,0.71,48,1.008,50,0.416,51,0.365,93,0.024,94,0.024,167,1.529,169,1.992,192,2.166,193,1.663,204,2.333,270,2.443,322,2.822,329,3.903,331,4.119,344,4.359,351,3.657,352,3.657,569,3.164,570,4.868,571,5.377,572,3.791,573,3.791,574,3.791,575,3.791,576,4.868,577,3.791,578,3.791,579,3.791]],["title/classes/chartDataServiceMock.html",[51,0.307,580,2.312]],["body/classes/chartDataServiceMock.html",[3,0.404,4,0.354,9,0.354,21,0.404,24,0.979,29,0.992,31,1.154,32,0.032,33,0.899,34,0.509,35,1.154,37,1.087,42,0.978,45,0.661,48,0.978,50,0.404,51,0.354,77,0.899,93,0.024,94,0.024,173,3.983,174,4.681,175,4.681,179,3.983,180,1.963,182,2.325,183,2.661,193,2.325,235,2.369,241,3.068,243,2.668,245,3.076,250,3.068,515,2.131,549,2.369,551,2.369,553,2.369,555,2.369,580,3.464,581,3.068,582,3.675,583,3.675,584,3.675,585,3.675,586,3.675,587,3.675,588,3.675,589,3.675]],["title/coverage.html",[590,3.622]],["body/coverage.html",[0,0.799,1,0.752,9,0.251,10,2.172,28,1.368,32,0.032,34,0.713,42,0.692,51,0.426,73,0.887,76,0.887,77,0.92,78,1.522,79,0.692,82,0.817,84,0.752,86,0.887,87,0.752,89,0.692,93,0.019,94,0.019,109,1.508,125,1.368,129,2.182,130,1.889,133,1.677,161,1.889,167,1.615,168,1.508,170,2.182,171,1.677,172,2.732,198,3.397,204,1.247,211,1.508,212,1.677,213,1.508,218,1.677,220,1.247,222,1.247,234,1.889,236,2.172,254,2.172,255,1.889,256,2.85,257,1.368,300,2.172,301,1.889,308,1.508,319,2.732,320,2.172,322,1.508,349,1.677,351,1.677,352,1.677,398,2.172,443,2.172,449,2.172,452,2.172,459,1.508,466,2.172,468,2.172,469,2.172,485,2.172,499,2.172,500,2.172,512,2.119,514,2.172,516,2.172,544,1.889,545,2.172,566,2.172,568,2.172,569,2.172,580,1.889,581,2.172,590,2.172,591,2.602,592,2.602,593,2.602,594,5.141,595,2.602,596,4.422,597,5.93,598,5.141,599,3.764,600,2.602,601,4.422,602,2.172,603,4.846,604,3.691,605,2.172,606,2.172,607,5.359,608,3.142,609,2.172,610,3.142,611,2.172,612,2.172,613,2.172,614,2.172,615,2.172,616,2.172,617,2.602,618,2.602]],["title/dependencies.html",[98,2.468,619,2.224]],["body/dependencies.html",[32,0.032,46,0.803,48,1.14,93,0.026,94,0.026,98,2.763,120,4.39,121,3.817,136,2.485,137,2.253,142,2.055,143,2.055,160,2.253,421,2.763,620,4.287,621,5.289,622,4.287,623,4.287,624,4.287,625,4.287,626,4.287,627,4.287,628,4.287,629,4.287,630,4.287,631,4.287]],["title/index.html",[21,0.293,632,2.665,633,2.665]],["body/index.html",[0,0.825,2,1.623,4,0.286,32,0.02,42,1.266,54,2.481,78,1.299,93,0.02,94,0.02,129,1.723,137,2.174,142,1.983,143,1.425,213,2.398,220,1.425,222,1.425,257,1.562,259,3.067,273,3.245,308,1.723,335,2.157,376,3.453,413,2.481,444,3.453,453,3.971,465,3.003,513,2.398,515,1.723,621,2.481,634,2.972,635,4.758,636,2.972,637,2.972,638,2.972,639,2.481,640,2.972,641,2.972,642,4.136,643,2.972,644,2.972,645,2.972,646,4.136,647,2.972,648,4.136,649,4.136,650,4.136,651,2.972,652,2.972,653,2.972,654,2.972,655,2.972,656,2.972,657,2.972,658,2.972,659,2.972,660,5.144,661,2.972,662,2.972,663,2.972,664,2.972,665,4.758,666,5.857,667,5.407,668,2.972,669,4.136,670,2.972,671,4.136,672,2.972,673,2.972,674,2.972,675,2.972,676,2.972,677,2.972,678,2.972,679,4.758,680,2.972,681,2.972,682,2.972,683,2.972,684,2.972,685,4.136,686,2.972,687,4.758,688,4.758,689,4.136,690,2.972,691,2.972,692,2.972,693,2.972,694,2.972,695,2.972,696,2.972,697,4.136,698,2.972,699,2.972,700,2.972,701,2.972,702,2.972,703,2.972,704,2.972,705,2.972,706,5.144,707,2.972,708,2.972,709,2.972,710,2.972,711,2.972]],["title/modules.html",[97,2.515]],["body/modules.html",[32,0.028,93,0.028,94,0.028,96,3.154,97,2.836,108,2.836,121,3.552,540,4.084,712,4.893,713,5.691,714,4.893,715,4.893]],["title/overview.html",[716,3.622]],["body/overview.html",[1,1.77,2,1.305,32,0.031,66,1.305,79,1.437,84,1.562,87,1.562,89,1.437,93,0.024,94,0.024,95,2.466,96,4.192,97,2.218,98,2.466,99,3.194,100,3.194,101,3.194,102,2.778,103,3.194,104,3.194,105,3.194,106,3.194,107,3.194,108,3.131,109,3.131,110,4.088,111,3.194,112,3.194,159,2.466,169,2.011,235,2.466,248,2.466,251,3.481,513,2.218,716,3.194,717,3.826,718,3.194]],["title/properties.html",[22,1.019,619,2.224]],["body/properties.html",[22,1.334,32,0.03,93,0.029,94,0.029,639,4.186,719,5.014]],["title/routes.html",[159,2.797]],["body/routes.html",[32,0.029,93,0.029,94,0.029,159,3.273]],["title/miscellaneous/typealiases.html",[720,1.717,721,3.829]],["body/miscellaneous/typealiases.html",[21,0.507,32,0.027,34,0.843,93,0.027,94,0.027,218,3.785,222,2.635,308,3.187,602,3.851,604,3.851,605,4.589,720,2.974,722,4.613,723,4.613,724,5.872,725,4.902]],["title/miscellaneous/variables.html",[720,1.717,726,3.196]],["body/miscellaneous/variables.html",[21,0.229,32,0.033,34,0.685,40,1.735,41,1.354,42,0.555,77,1.329,93,0.016,94,0.016,152,1.183,182,2.727,243,1.515,245,3.576,246,1.742,248,3.576,249,1.742,251,3.418,287,1.742,515,2.98,548,1.742,549,3.869,550,3.91,551,3.869,552,3.91,553,3.869,554,2.665,555,3.869,556,1.742,557,3.91,558,3.91,559,3.91,560,3.91,561,1.742,562,3.91,563,3.91,564,1.742,565,1.742,606,1.742,608,3.628,609,1.742,610,1.742,611,2.665,612,2.665,613,1.742,614,2.665,615,1.742,616,2.665,718,1.742,720,1.345,725,1.742,726,1.742,727,3.193,728,2.086,729,2.086,730,2.086,731,2.086,732,2.086,733,2.086,734,3.193,735,3.193,736,3.193,737,3.193,738,2.086,739,2.086,740,3.193,741,2.086,742,2.086,743,2.086,744,2.086,745,2.086,746,2.086,747,2.086,748,2.086,749,2.086,750,2.086,751,2.086,752,3.193,753,3.193,754,2.086,755,2.086,756,2.086,757,2.086,758,2.086,759,2.086,760,2.086,761,2.086]]],"invertedIndex":[["",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{},"classes/ChartFormatServiceMock.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoaderHttpInterceptorService.html":{},"injectables/LoaderService.html":{},"components/NotFoundComponent.html":{},"interfaces/Olympic.html":{},"injectables/OlympicService.html":{},"classes/OlympicsServiceMock.html":{},"interfaces/OnResize.html":{},"interfaces/Participation.html":{},"injectables/UnsubscribeObservableService.html":{},"classes/chartDataServiceMock.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":198,"title":{},"body":{"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"injectables/OlympicService.html":{},"coverage.html":{}}}],["0.0.0",{"_index":719,"title":{},"body":{"properties.html":{}}}],["0.14.3",{"_index":631,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":597,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":595,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":596,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":600,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":598,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":594,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":599,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":601,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":245,"title":{},"body":{"classes/ChartFormatServiceMock.html":{},"classes/OlympicsServiceMock.html":{},"classes/chartDataServiceMock.html":{},"miscellaneous/variables.html":{}}}],["100vh",{"_index":63,"title":{},"body":{"components/AppComponent.html":{}}}],["100vw",{"_index":61,"title":{},"body":{"components/AppComponent.html":{}}}],["109",{"_index":745,"title":{},"body":{"miscellaneous/variables.html":{}}}],["113",{"_index":749,"title":{},"body":{"miscellaneous/variables.html":{}}}],["120",{"_index":250,"title":{},"body":{"classes/ChartFormatServiceMock.html":{},"classes/chartDataServiceMock.html":{}}}],["123",{"_index":747,"title":{},"body":{"miscellaneous/variables.html":{}}}],["150",{"_index":247,"title":{},"body":{"classes/ChartFormatServiceMock.html":{}}}],["17",{"_index":740,"title":{},"body":{"miscellaneous/variables.html":{}}}],["18.0.3",{"_index":621,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["19.0.0",{"_index":626,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":248,"title":{},"body":{"classes/ChartFormatServiceMock.html":{},"classes/OlympicsServiceMock.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["2.3.0",{"_index":629,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":738,"title":{},"body":{"miscellaneous/variables.html":{}}}],["200",{"_index":244,"title":{},"body":{"classes/ChartFormatServiceMock.html":{}}}],["2000",{"_index":736,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2012",{"_index":550,"title":{},"body":{"classes/OlympicsServiceMock.html":{},"miscellaneous/variables.html":{}}}],["2016",{"_index":557,"title":{},"body":{"classes/OlympicsServiceMock.html":{},"miscellaneous/variables.html":{}}}],["2018",{"_index":587,"title":{},"body":{"classes/chartDataServiceMock.html":{}}}],["2020",{"_index":562,"title":{},"body":{"classes/OlympicsServiceMock.html":{},"miscellaneous/variables.html":{}}}],["21.1.2",{"_index":625,"title":{},"body":{"dependencies.html":{}}}],["28",{"_index":554,"title":{},"body":{"classes/OlympicsServiceMock.html":{},"miscellaneous/variables.html":{}}}],["3",{"_index":251,"title":{},"body":{"classes/ChartFormatServiceMock.html":{},"classes/OlympicsServiceMock.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["312",{"_index":741,"title":{},"body":{"miscellaneous/variables.html":{}}}],["315",{"_index":739,"title":{},"body":{"miscellaneous/variables.html":{}}}],["321",{"_index":742,"title":{},"body":{"miscellaneous/variables.html":{}}}],["33",{"_index":760,"title":{},"body":{"miscellaneous/variables.html":{}}}],["35",{"_index":756,"title":{},"body":{"miscellaneous/variables.html":{}}}],["350",{"_index":589,"title":{},"body":{"classes/chartDataServiceMock.html":{}}}],["37",{"_index":755,"title":{},"body":{"miscellaneous/variables.html":{}}}],["372",{"_index":556,"title":{},"body":{"classes/OlympicsServiceMock.html":{},"miscellaneous/variables.html":{}}}],["375",{"_index":561,"title":{},"body":{"classes/OlympicsServiceMock.html":{},"miscellaneous/variables.html":{}}}],["381",{"_index":565,"title":{},"body":{"classes/OlympicsServiceMock.html":{},"miscellaneous/variables.html":{}}}],["4",{"_index":751,"title":{},"body":{"miscellaneous/variables.html":{}}}],["40",{"_index":564,"title":{},"body":{"classes/OlympicsServiceMock.html":{},"miscellaneous/variables.html":{}}}],["403",{"_index":761,"title":{},"body":{"miscellaneous/variables.html":{}}}],["412",{"_index":759,"title":{},"body":{"miscellaneous/variables.html":{}}}],["422",{"_index":754,"title":{},"body":{"miscellaneous/variables.html":{}}}],["423",{"_index":757,"title":{},"body":{"miscellaneous/variables.html":{}}}],["425",{"_index":753,"title":{},"body":{"miscellaneous/variables.html":{}}}],["44",{"_index":752,"title":{},"body":{"miscellaneous/variables.html":{}}}],["45",{"_index":758,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5",{"_index":718,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["50000",{"_index":146,"title":{},"body":{"modules/AppModule.html":{}}}],["610",{"_index":746,"title":{},"body":{"miscellaneous/variables.html":{}}}],["626",{"_index":750,"title":{},"body":{"miscellaneous/variables.html":{}}}],["652",{"_index":748,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.8.0",{"_index":627,"title":{},"body":{"dependencies.html":{}}}],["800px",{"_index":65,"title":{},"body":{"components/AppComponent.html":{}}}],["9",{"_index":717,"title":{},"body":{"overview.html":{}}}],["acc",{"_index":438,"title":{},"body":{"components/DashboardCountryDetailComponent.html":{}}}],["accessors",{"_index":570,"title":{},"body":{"injectables/UnsubscribeObservableService.html":{}}}],["accumulator",{"_index":228,"title":{},"body":{"injectables/ChartFormatDataService.html":{}}}],["activatedroute",{"_index":411,"title":{},"body":{"components/DashboardCountryDetailComponent.html":{}}}],["actual_component",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{},"components/NotFoundComponent.html":{}}}],["adjust",{"_index":708,"title":{},"body":{"index.html":{}}}],["alias",{"_index":603,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":722,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["angular",{"_index":637,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":620,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":421,"title":{},"body":{"components/DashboardCountryDetailComponent.html":{},"components/LoaderComponent.html":{},"components/NotFoundComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"interceptors/LoaderHttpInterceptorService.html":{},"injectables/OlympicService.html":{}}}],["angular/compiler",{"_index":622,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoaderHttpInterceptorService.html":{},"injectables/LoaderService.html":{},"components/NotFoundComponent.html":{},"injectables/OlympicService.html":{},"injectables/UnsubscribeObservableService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":623,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":160,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/CountriesChartComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/NotFoundComponent.html":{},"dependencies.html":{}}}],["api",{"_index":701,"title":{},"body":{"index.html":{}}}],["app",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{},"components/NotFoundComponent.html":{}}}],["app.component",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":20,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["app/core/models/interfaces/olympic",{"_index":241,"title":{},"body":{"classes/ChartFormatServiceMock.html":{},"classes/chartDataServiceMock.html":{}}}],["app/core/models/types/countryallchartformat",{"_index":239,"title":{},"body":{"classes/ChartFormatServiceMock.html":{}}}],["app/core/models/types/countrydetailchartformat",{"_index":240,"title":{},"body":{"classes/ChartFormatServiceMock.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{},"components/NotFoundComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":376,"title":{},"body":{"components/DashboardCountriesComponent.html":{},"index.html":{}}}],["appmodule",{"_index":96,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":108,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["artifacts",{"_index":661,"title":{},"body":{"index.html":{}}}],["assets/mock/olympic.json",{"_index":526,"title":{},"body":{"injectables/OlympicService.html":{}}}],["asyncpipe",{"_index":454,"title":{},"body":{"components/LoaderComponent.html":{}}}],["athlete",{"_index":393,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["athletecount",{"_index":555,"title":{},"body":{"classes/OlympicsServiceMock.html":{},"interfaces/Participation.html":{},"classes/chartDataServiceMock.html":{},"miscellaneous/variables.html":{}}}],["automatically",{"_index":656,"title":{},"body":{"index.html":{}}}],["available",{"_index":715,"title":{},"body":{"modules.html":{}}}],["back",{"_index":511,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["bar",{"_index":676,"title":{},"body":{"index.html":{}}}],["basic",{"_index":677,"title":{},"body":{"index.html":{}}}],["before",{"_index":644,"title":{},"body":{"index.html":{}}}],["behaviorsubject",{"_index":493,"title":{},"body":{"injectables/LoaderService.html":{},"injectables/OlympicService.html":{}}}],["behaviorsubject(false",{"_index":494,"title":{},"body":{"injectables/LoaderService.html":{}}}],["behaviorsubject(null",{"_index":525,"title":{},"body":{"injectables/OlympicService.html":{}}}],["boolean",{"_index":285,"title":{},"body":{"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/NotFoundComponent.html":{}}}],["bootstrap",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["bring",{"_index":378,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["browse",{"_index":713,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":139,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":138,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":660,"title":{},"body":{"index.html":{}}}],["business",{"_index":684,"title":{},"body":{"index.html":{}}}],["calls",{"_index":702,"title":{},"body":{"index.html":{}}}],["catcherror",{"_index":189,"title":{},"body":{"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{},"injectables/OlympicService.html":{}}}],["catcherror((error",{"_index":200,"title":{},"body":{"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{},"injectables/OlympicService.html":{}}}],["caught",{"_index":201,"title":{},"body":{"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{},"injectables/OlympicService.html":{}}}],["center",{"_index":150,"title":{},"body":{"modules/AppModule.html":{}}}],["change",{"_index":658,"title":{},"body":{"index.html":{}}}],["chart",{"_index":259,"title":{},"body":{"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/InfoDetailChartComponent.html":{},"index.html":{}}}],["chart'},{'name",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{},"components/NotFoundComponent.html":{}}}],["chart.component",{"_index":350,"title":{},"body":{"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{}}}],["chart.component.html",{"_index":261,"title":{},"body":{"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/InfoDetailChartComponent.html":{}}}],["chart.component.scss",{"_index":263,"title":{},"body":{"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/InfoDetailChartComponent.html":{}}}],["chart.component.ts",{"_index":256,"title":{},"body":{"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/InfoDetailChartComponent.html":{},"coverage.html":{}}}],["chart.component.ts:13",{"_index":450,"title":{},"body":{"components/InfoDetailChartComponent.html":{}}}],["chart.component.ts:16",{"_index":451,"title":{},"body":{"components/InfoDetailChartComponent.html":{}}}],["chart.component.ts:19",{"_index":310,"title":{},"body":{"components/CountryDetailChartComponent.html":{}}}],["chart.component.ts:22",{"_index":309,"title":{},"body":{"components/CountryDetailChartComponent.html":{}}}],["chart.component.ts:23",{"_index":314,"title":{},"body":{"components/CountryDetailChartComponent.html":{}}}],["chart.component.ts:24",{"_index":315,"title":{},"body":{"components/CountryDetailChartComponent.html":{}}}],["chart.component.ts:25",{"_index":317,"title":{},"body":{"components/CountryDetailChartComponent.html":{}}}],["chart.component.ts:26",{"_index":312,"title":{},"body":{"components/CountryDetailChartComponent.html":{}}}],["chart.component.ts:27",{"_index":311,"title":{},"body":{"components/CountryDetailChartComponent.html":{}}}],["chart.component.ts:28",{"_index":284,"title":{},"body":{"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{}}}],["chart.component.ts:29",{"_index":313,"title":{},"body":{"components/CountryDetailChartComponent.html":{}}}],["chart.component.ts:31",{"_index":277,"title":{},"body":{"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{}}}],["chart.component.ts:32",{"_index":286,"title":{},"body":{"components/CountriesChartComponent.html":{}}}],["chart.component.ts:33",{"_index":289,"title":{},"body":{"components/CountriesChartComponent.html":{}}}],["chart.component.ts:34",{"_index":288,"title":{},"body":{"components/CountriesChartComponent.html":{}}}],["chart.component.ts:35",{"_index":276,"title":{},"body":{"components/CountriesChartComponent.html":{}}}],["chart.component.ts:40",{"_index":279,"title":{},"body":{"components/CountriesChartComponent.html":{}}}],["chart.component.ts:46",{"_index":280,"title":{},"body":{"components/CountriesChartComponent.html":{}}}],["chart/${idcountry}`).catch(error",{"_index":298,"title":{},"body":{"components/CountriesChartComponent.html":{}}}],["chart/:id",{"_index":165,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["chart/countries",{"_index":255,"title":{},"body":{"components/CountriesChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"coverage.html":{}}}],["chart/country",{"_index":301,"title":{},"body":{"components/CountryDetailChartComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"coverage.html":{}}}],["chart/info",{"_index":349,"title":{},"body":{"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/InfoDetailChartComponent.html":{},"coverage.html":{}}}],["chartdata",{"_index":335,"title":{},"body":{"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"index.html":{}}}],["chartdataservice",{"_index":168,"title":{"injectables/ChartDataService.html":{}},"body":{"injectables/ChartDataService.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"coverage.html":{}}}],["chartdataservicemock",{"_index":580,"title":{"classes/chartDataServiceMock.html":{}},"body":{"classes/chartDataServiceMock.html":{},"coverage.html":{}}}],["chartformat",{"_index":413,"title":{},"body":{"components/DashboardCountryDetailComponent.html":{},"index.html":{}}}],["chartformatdataservice",{"_index":211,"title":{"injectables/ChartFormatDataService.html":{}},"body":{"injectables/ChartFormatDataService.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"coverage.html":{}}}],["chartformatservice",{"_index":333,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["chartformatservicemock",{"_index":234,"title":{"classes/ChartFormatServiceMock.html":{}},"body":{"classes/ChartFormatServiceMock.html":{},"coverage.html":{}}}],["charts",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"dependencies.html":{},"index.html":{}}}],["circular",{"_index":670,"title":{},"body":{"index.html":{}}}],["city",{"_index":551,"title":{},"body":{"classes/OlympicsServiceMock.html":{},"interfaces/Participation.html":{},"classes/chartDataServiceMock.html":{},"miscellaneous/variables.html":{}}}],["class",{"_index":51,"title":{"classes/ChartFormatServiceMock.html":{},"classes/OlympicsServiceMock.html":{},"classes/chartDataServiceMock.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{},"classes/ChartFormatServiceMock.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoaderHttpInterceptorService.html":{},"injectables/LoaderService.html":{},"components/NotFoundComponent.html":{},"injectables/OlympicService.html":{},"classes/OlympicsServiceMock.html":{},"injectables/UnsubscribeObservableService.html":{},"classes/chartDataServiceMock.html":{},"coverage.html":{}}}],["classes",{"_index":235,"title":{},"body":{"classes/ChartFormatServiceMock.html":{},"classes/OlympicsServiceMock.html":{},"classes/chartDataServiceMock.html":{},"overview.html":{}}}],["cli",{"_index":638,"title":{},"body":{"index.html":{}}}],["closure",{"_index":704,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["column",{"_index":58,"title":{},"body":{"components/AppComponent.html":{}}}],["combinelatest",{"_index":346,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{},"components/NotFoundComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{},"components/NotFoundComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{},"components/NotFoundComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{},"components/NotFoundComponent.html":{},"index.html":{},"overview.html":{}}}],["components/countries",{"_index":355,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["components/country",{"_index":422,"title":{},"body":{"components/DashboardCountryDetailComponent.html":{}}}],["components/header/header.component",{"_index":127,"title":{},"body":{"modules/AppModule.html":{}}}],["components/info",{"_index":348,"title":{},"body":{"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{}}}],["components/loader/loader.component",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["components/not",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{}}}],["const",{"_index":163,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/ChartFormatServiceMock.html":{},"components/CountriesChartComponent.html":{},"components/DashboardCountryDetailComponent.html":{}}}],["constructor",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{},"components/CountriesChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoaderHttpInterceptorService.html":{},"injectables/LoaderService.html":{},"components/NotFoundComponent.html":{},"injectables/OlympicService.html":{}}}],["constructor(chartdata",{"_index":332,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["constructor(chartformat",{"_index":409,"title":{},"body":{"components/DashboardCountryDetailComponent.html":{}}}],["constructor(http",{"_index":520,"title":{},"body":{"injectables/OlympicService.html":{}}}],["constructor(loaderservice",{"_index":458,"title":{},"body":{"components/LoaderComponent.html":{},"interceptors/LoaderHttpInterceptorService.html":{}}}],["constructor(olympicservice",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{}}}],["constructor(private",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{},"components/CountriesChartComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"interceptors/LoaderHttpInterceptorService.html":{},"components/NotFoundComponent.html":{}}}],["constructor(router",{"_index":274,"title":{},"body":{"components/CountriesChartComponent.html":{},"components/NotFoundComponent.html":{}}}],["contact",{"_index":539,"title":{},"body":{"injectables/OlympicService.html":{}}}],["containerref",{"_index":264,"title":{},"body":{"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{}}}],["contains",{"_index":667,"title":{},"body":{"index.html":{}}}],["context",{"_index":611,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["core",{"_index":683,"title":{},"body":{"index.html":{}}}],["core/models/interfaces/onresize",{"_index":293,"title":{},"body":{"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{}}}],["core/models/types/countrydetailchartformat",{"_index":318,"title":{},"body":{"components/CountryDetailChartComponent.html":{}}}],["core/services/loader",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["core/services/loader/loader.service",{"_index":462,"title":{},"body":{"components/LoaderComponent.html":{}}}],["core/services/olympic/olympic.service",{"_index":49,"title":{},"body":{"components/AppComponent.html":{}}}],["corresponding",{"_index":505,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["countries",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{},"components/NotFoundComponent.html":{}}}],["countries'},{'name",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{},"components/NotFoundComponent.html":{}}}],["countries.component",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["countries.component.html",{"_index":323,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["countries.component.scss",{"_index":324,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["countries.component.ts",{"_index":320,"title":{},"body":{"components/DashboardCountriesComponent.html":{},"coverage.html":{}}}],["countries.component.ts:21",{"_index":343,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["countries.component.ts:22",{"_index":342,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["countries.component.ts:23",{"_index":340,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["countries.component.ts:24",{"_index":341,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["countries.component.ts:25",{"_index":334,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["countries.component.ts:34",{"_index":339,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["countries.component.ts:39",{"_index":336,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["countries/dashboard",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DashboardCountriesComponent.html":{},"coverage.html":{}}}],["countrieschart",{"_index":669,"title":{},"body":{"index.html":{}}}],["countrieschartcomponent",{"_index":73,"title":{"components/CountriesChartComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{},"components/NotFoundComponent.html":{},"coverage.html":{}}}],["country",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{},"components/NotFoundComponent.html":{},"interfaces/Olympic.html":{},"classes/OlympicsServiceMock.html":{},"classes/chartDataServiceMock.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["countryallchartformat",{"_index":222,"title":{},"body":{"injectables/ChartFormatDataService.html":{},"classes/ChartFormatServiceMock.html":{},"components/CountriesChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["countrydata",{"_index":430,"title":{},"body":{"components/DashboardCountryDetailComponent.html":{}}}],["countrydata.participations.length",{"_index":435,"title":{},"body":{"components/DashboardCountryDetailComponent.html":{}}}],["countrydata.participations.reduce((acc",{"_index":437,"title":{},"body":{"components/DashboardCountryDetailComponent.html":{}}}],["countrydetailchart",{"_index":671,"title":{},"body":{"index.html":{}}}],["countrydetailchartcomponent",{"_index":76,"title":{"components/CountryDetailChartComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{},"components/NotFoundComponent.html":{},"coverage.html":{}}}],["countrydetailchartdata",{"_index":218,"title":{},"body":{"injectables/ChartFormatDataService.html":{},"classes/ChartFormatServiceMock.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["countrydetailchartformat",{"_index":308,"title":{},"body":{"components/CountryDetailChartComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["countryid",{"_index":427,"title":{},"body":{"components/DashboardCountryDetailComponent.html":{}}}],["countryselecteddata",{"_index":407,"title":{},"body":{"components/DashboardCountryDetailComponent.html":{}}}],["countryselecteddata.country",{"_index":442,"title":{},"body":{"components/DashboardCountryDetailComponent.html":{}}}],["counts",{"_index":392,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["coverage",{"_index":590,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["dashboard",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{},"components/NotFoundComponent.html":{}}}],["dashboardcountries",{"_index":681,"title":{},"body":{"index.html":{}}}],["dashboardcountriescomponent",{"_index":79,"title":{"components/DashboardCountriesComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{},"components/NotFoundComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dashboardcountrydetail",{"_index":682,"title":{},"body":{"index.html":{}}}],["dashboardcountrydetailcomponent",{"_index":82,"title":{"components/DashboardCountryDetailComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{},"components/NotFoundComponent.html":{},"coverage.html":{}}}],["dashboarddata",{"_index":365,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["data",{"_index":273,"title":{},"body":{"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"index.html":{}}}],["data.athletecount",{"_index":441,"title":{},"body":{"components/DashboardCountryDetailComponent.html":{}}}],["data.extra.id",{"_index":296,"title":{},"body":{"components/CountriesChartComponent.html":{}}}],["data.medalscount",{"_index":439,"title":{},"body":{"components/DashboardCountryDetailComponent.html":{}}}],["data.service",{"_index":354,"title":{},"body":{"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{}}}],["data.service.ts",{"_index":172,"title":{},"body":{"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{},"coverage.html":{}}}],["data.service.ts:11",{"_index":178,"title":{},"body":{"injectables/ChartDataService.html":{}}}],["data.service.ts:14",{"_index":216,"title":{},"body":{"injectables/ChartFormatDataService.html":{}}}],["data.service.ts:16",{"_index":185,"title":{},"body":{"injectables/ChartDataService.html":{}}}],["data.service.ts:19",{"_index":219,"title":{},"body":{"injectables/ChartFormatDataService.html":{}}}],["data.service.ts:29",{"_index":184,"title":{},"body":{"injectables/ChartDataService.html":{}}}],["data.service.ts:42",{"_index":181,"title":{},"body":{"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{}}}],["data/chart",{"_index":171,"title":{},"body":{"injectables/ChartDataService.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"coverage.html":{}}}],["datacountrychart",{"_index":408,"title":{},"body":{"components/DashboardCountryDetailComponent.html":{}}}],["datafordashboard",{"_index":325,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["dates",{"_index":316,"title":{},"body":{"components/CountryDetailChartComponent.html":{}}}],["de",{"_index":559,"title":{},"body":{"classes/OlympicsServiceMock.html":{},"miscellaneous/variables.html":{}}}],["declarations",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decorators",{"_index":282,"title":{},"body":{"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{}}}],["default",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"injectables/LoaderService.html":{},"components/NotFoundComponent.html":{},"injectables/OlympicService.html":{},"injectables/UnsubscribeObservableService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{},"classes/ChartFormatServiceMock.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoaderHttpInterceptorService.html":{},"injectables/LoaderService.html":{},"components/NotFoundComponent.html":{},"injectables/OlympicService.html":{},"classes/OlympicsServiceMock.html":{},"interfaces/OnResize.html":{},"injectables/UnsubscribeObservableService.html":{},"classes/chartDataServiceMock.html":{}}}],["defines",{"_index":706,"title":{},"body":{"index.html":{}}}],["demographics",{"_index":390,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["dependencies",{"_index":98,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["designed",{"_index":377,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["detail",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{},"components/NotFoundComponent.html":{},"coverage.html":{},"index.html":{}}}],["detail'},{'name",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{},"components/NotFoundComponent.html":{}}}],["detail.component",{"_index":162,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["detail.component.html",{"_index":401,"title":{},"body":{"components/DashboardCountryDetailComponent.html":{}}}],["detail.component.scss",{"_index":402,"title":{},"body":{"components/DashboardCountryDetailComponent.html":{}}}],["detail.component.ts",{"_index":398,"title":{},"body":{"components/DashboardCountryDetailComponent.html":{},"coverage.html":{}}}],["detail.component.ts:32",{"_index":414,"title":{},"body":{"components/DashboardCountryDetailComponent.html":{}}}],["detail.component.ts:34",{"_index":415,"title":{},"body":{"components/DashboardCountryDetailComponent.html":{}}}],["detail.component.ts:36",{"_index":419,"title":{},"body":{"components/DashboardCountryDetailComponent.html":{}}}],["detail.component.ts:37",{"_index":420,"title":{},"body":{"components/DashboardCountryDetailComponent.html":{}}}],["detail.component.ts:38",{"_index":412,"title":{},"body":{"components/DashboardCountryDetailComponent.html":{}}}],["detail.component.ts:47",{"_index":417,"title":{},"body":{"components/DashboardCountryDetailComponent.html":{}}}],["detail.component.ts:51",{"_index":416,"title":{},"body":{"components/DashboardCountryDetailComponent.html":{}}}],["detail/dashboard",{"_index":161,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/DashboardCountryDetailComponent.html":{},"coverage.html":{}}}],["dev",{"_index":653,"title":{},"body":{"index.html":{}}}],["development",{"_index":647,"title":{},"body":{"index.html":{}}}],["directive",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{},"components/NotFoundComponent.html":{}}}],["directives",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{},"components/NotFoundComponent.html":{}}}],["directory",{"_index":664,"title":{},"body":{"index.html":{}}}],["display",{"_index":55,"title":{},"body":{"components/AppComponent.html":{}}}],["displaying",{"_index":698,"title":{},"body":{"index.html":{}}}],["dist",{"_index":663,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":591,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{},"components/NotFoundComponent.html":{}}}],["don't",{"_index":640,"title":{},"body":{"index.html":{}}}],["dynamic",{"_index":624,"title":{},"body":{"dependencies.html":{}}}],["dynamically",{"_index":710,"title":{},"body":{"index.html":{}}}],["editions",{"_index":397,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["element",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{},"components/NotFoundComponent.html":{}}}],["elementref",{"_index":281,"title":{},"body":{"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{}}}],["engaging",{"_index":383,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["environment",{"_index":608,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["export",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{},"classes/ChartFormatServiceMock.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoaderHttpInterceptorService.html":{},"injectables/LoaderService.html":{},"components/NotFoundComponent.html":{},"interfaces/Olympic.html":{},"injectables/OlympicService.html":{},"classes/OlympicsServiceMock.html":{},"interfaces/OnResize.html":{},"interfaces/Participation.html":{},"injectables/UnsubscribeObservableService.html":{},"classes/chartDataServiceMock.html":{}}}],["exports",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["extends",{"_index":321,"title":{},"body":{"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{}}}],["extra",{"_index":230,"title":{},"body":{"injectables/ChartFormatDataService.html":{},"classes/ChartFormatServiceMock.html":{}}}],["false",{"_index":287,"title":{},"body":{"components/CountriesChartComponent.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{},"classes/ChartFormatServiceMock.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoaderHttpInterceptorService.html":{},"injectables/LoaderService.html":{},"components/NotFoundComponent.html":{},"interfaces/Olympic.html":{},"injectables/OlympicService.html":{},"classes/OlympicsServiceMock.html":{},"interfaces/OnResize.html":{},"interfaces/Participation.html":{},"injectables/UnsubscribeObservableService.html":{},"classes/chartDataServiceMock.html":{},"coverage.html":{}}}],["files",{"_index":659,"title":{},"body":{"index.html":{}}}],["finalize",{"_index":480,"title":{},"body":{"interceptors/LoaderHttpInterceptorService.html":{}}}],["flex",{"_index":56,"title":{},"body":{"components/AppComponent.html":{}}}],["flow",{"_index":57,"title":{},"body":{"components/AppComponent.html":{}}}],["folder",{"_index":666,"title":{},"body":{"index.html":{}}}],["folders",{"_index":690,"title":{},"body":{"index.html":{}}}],["forget",{"_index":641,"title":{},"body":{"index.html":{}}}],["format",{"_index":213,"title":{},"body":{"injectables/ChartFormatDataService.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"coverage.html":{},"index.html":{}}}],["format/chart",{"_index":212,"title":{},"body":{"injectables/ChartFormatDataService.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"coverage.html":{}}}],["formats",{"_index":694,"title":{},"body":{"index.html":{}}}],["found",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{},"components/NotFoundComponent.html":{}}}],["found.component",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{}}}],["found.component.html",{"_index":501,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.scss",{"_index":502,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.ts",{"_index":500,"title":{},"body":{"components/NotFoundComponent.html":{},"coverage.html":{}}}],["found.component.ts:18",{"_index":506,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.ts:19",{"_index":504,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.ts:24",{"_index":507,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found/not",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/NotFoundComponent.html":{},"coverage.html":{}}}],["france",{"_index":243,"title":{},"body":{"classes/ChartFormatServiceMock.html":{},"classes/chartDataServiceMock.html":{},"miscellaneous/variables.html":{}}}],["games",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/HeaderComponent.html":{}}}],["generated",{"_index":636,"title":{},"body":{"index.html":{}}}],["germany",{"_index":246,"title":{},"body":{"classes/ChartFormatServiceMock.html":{},"miscellaneous/variables.html":{}}}],["getcountriesdata",{"_index":330,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["getcountrydata",{"_index":406,"title":{},"body":{"components/DashboardCountryDetailComponent.html":{}}}],["getdatabycountryid",{"_index":173,"title":{},"body":{"injectables/ChartDataService.html":{},"classes/chartDataServiceMock.html":{}}}],["getdatabycountryid(id",{"_index":179,"title":{},"body":{"injectables/ChartDataService.html":{},"classes/chartDataServiceMock.html":{}}}],["getformatdataforlinechartbycountry",{"_index":214,"title":{},"body":{"injectables/ChartFormatDataService.html":{},"classes/ChartFormatServiceMock.html":{}}}],["getformatdataforlinechartbycountry(olympic",{"_index":217,"title":{},"body":{"injectables/ChartFormatDataService.html":{},"classes/ChartFormatServiceMock.html":{}}}],["getformatdataforpiechartforallcountry",{"_index":215,"title":{},"body":{"injectables/ChartFormatDataService.html":{},"classes/ChartFormatServiceMock.html":{}}}],["getgetunsubscribe",{"_index":574,"title":{},"body":{"injectables/UnsubscribeObservableService.html":{}}}],["getolympics",{"_index":518,"title":{},"body":{"injectables/OlympicService.html":{},"classes/OlympicsServiceMock.html":{}}}],["getting",{"_index":632,"title":{"index.html":{}},"body":{}}],["gettotalcountry",{"_index":174,"title":{},"body":{"injectables/ChartDataService.html":{},"classes/chartDataServiceMock.html":{}}}],["gettotaljos",{"_index":175,"title":{},"body":{"injectables/ChartDataService.html":{},"classes/chartDataServiceMock.html":{}}}],["getunsubscribe",{"_index":571,"title":{},"body":{"injectables/UnsubscribeObservableService.html":{}}}],["go",{"_index":510,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["gradient",{"_index":265,"title":{},"body":{"components/CountriesChartComponent.html":{}}}],["graph",{"_index":714,"title":{},"body":{"modules.html":{}}}],["graphical",{"_index":385,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["graphics",{"_index":695,"title":{},"body":{"index.html":{}}}],["handles",{"_index":692,"title":{},"body":{"index.html":{}}}],["header",{"_index":444,"title":{},"body":{"components/HeaderComponent.html":{},"index.html":{}}}],["header'},{'name",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{},"components/NotFoundComponent.html":{}}}],["header.component.html",{"_index":447,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.scss",{"_index":448,"title":{},"body":{"components/HeaderComponent.html":{}}}],["headercomponent",{"_index":84,"title":{"components/HeaderComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{},"components/NotFoundComponent.html":{},"coverage.html":{},"overview.html":{}}}],["height",{"_index":62,"title":{},"body":{"components/AppComponent.html":{}}}],["history",{"_index":379,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["host",{"_index":258,"title":{},"body":{"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{}}}],["html",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{},"components/NotFoundComponent.html":{}}}],["http",{"_index":129,"title":{},"body":{"modules/AppModule.html":{},"interceptors/LoaderHttpInterceptorService.html":{},"injectables/OlympicService.html":{},"coverage.html":{},"index.html":{}}}],["http://localhost:4200",{"_index":655,"title":{},"body":{"index.html":{}}}],["http_interceptors",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":521,"title":{},"body":{"injectables/OlympicService.html":{}}}],["httpclientmodule",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["httpevent",{"_index":478,"title":{},"body":{"interceptors/LoaderHttpInterceptorService.html":{}}}],["httphandler",{"_index":475,"title":{},"body":{"interceptors/LoaderHttpInterceptorService.html":{}}}],["httpinterceptor",{"_index":479,"title":{},"body":{"interceptors/LoaderHttpInterceptorService.html":{}}}],["httprequest",{"_index":473,"title":{},"body":{"interceptors/LoaderHttpInterceptorService.html":{}}}],["id",{"_index":182,"title":{},"body":{"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{},"classes/ChartFormatServiceMock.html":{},"interfaces/Olympic.html":{},"classes/OlympicsServiceMock.html":{},"interfaces/Participation.html":{},"classes/chartDataServiceMock.html":{},"miscellaneous/variables.html":{}}}],["idcountry",{"_index":295,"title":{},"body":{"components/CountriesChartComponent.html":{}}}],["identifier",{"_index":592,"title":{},"body":{"coverage.html":{}}}],["if(isdataloaded",{"_index":373,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["implements",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoaderHttpInterceptorService.html":{},"components/NotFoundComponent.html":{},"injectables/UnsubscribeObservableService.html":{}}}],["import",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{},"classes/ChartFormatServiceMock.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoaderHttpInterceptorService.html":{},"injectables/LoaderService.html":{},"components/NotFoundComponent.html":{},"interfaces/Olympic.html":{},"injectables/OlympicService.html":{},"classes/OlympicsServiceMock.html":{},"injectables/UnsubscribeObservableService.html":{},"classes/chartDataServiceMock.html":{}}}],["imports",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{},"components/NotFoundComponent.html":{}}}],["including",{"_index":686,"title":{},"body":{"index.html":{}}}],["index",{"_index":21,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{},"classes/ChartFormatServiceMock.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoaderHttpInterceptorService.html":{},"injectables/LoaderService.html":{},"components/NotFoundComponent.html":{},"interfaces/Olympic.html":{},"injectables/OlympicService.html":{},"classes/OlympicsServiceMock.html":{},"interfaces/OnResize.html":{},"interfaces/Participation.html":{},"injectables/UnsubscribeObservableService.html":{},"classes/chartDataServiceMock.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{},"classes/ChartFormatServiceMock.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoaderHttpInterceptorService.html":{},"injectables/LoaderService.html":{},"components/NotFoundComponent.html":{},"interfaces/Olympic.html":{},"injectables/OlympicService.html":{},"classes/OlympicsServiceMock.html":{},"interfaces/OnResize.html":{},"interfaces/Participation.html":{},"injectables/UnsubscribeObservableService.html":{},"classes/chartDataServiceMock.html":{}}}],["infodetailchart",{"_index":673,"title":{},"body":{"index.html":{}}}],["infodetailchartcomponent",{"_index":86,"title":{"components/InfoDetailChartComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{},"components/NotFoundComponent.html":{},"coverage.html":{}}}],["inherited",{"_index":337,"title":{},"body":{"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{}}}],["injectable",{"_index":167,"title":{"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{},"injectables/LoaderService.html":{},"injectables/OlympicService.html":{},"injectables/UnsubscribeObservableService.html":{}},"body":{"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{},"interceptors/LoaderHttpInterceptorService.html":{},"injectables/LoaderService.html":{},"injectables/OlympicService.html":{},"injectables/UnsubscribeObservableService.html":{},"coverage.html":{}}}],["injectables",{"_index":169,"title":{},"body":{"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{},"injectables/LoaderService.html":{},"injectables/OlympicService.html":{},"injectables/UnsubscribeObservableService.html":{},"overview.html":{}}}],["input",{"_index":290,"title":{},"body":{"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/NotFoundComponent.html":{}}}],["inputs",{"_index":272,"title":{},"body":{"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/NotFoundComponent.html":{}}}],["install",{"_index":642,"title":{},"body":{"index.html":{}}}],["interactive",{"_index":384,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["intercept",{"_index":470,"title":{},"body":{"interceptors/LoaderHttpInterceptorService.html":{}}}],["intercept(req",{"_index":472,"title":{},"body":{"interceptors/LoaderHttpInterceptorService.html":{}}}],["interceptor",{"_index":466,"title":{"interceptors/LoaderHttpInterceptorService.html":{}},"body":{"coverage.html":{}}}],["interceptor.service",{"_index":131,"title":{},"body":{"modules/AppModule.html":{}}}],["interceptor.service.ts",{"_index":469,"title":{},"body":{"interceptors/LoaderHttpInterceptorService.html":{},"coverage.html":{}}}],["interceptor.service.ts:14",{"_index":476,"title":{},"body":{"interceptors/LoaderHttpInterceptorService.html":{}}}],["interceptor.service.ts:9",{"_index":471,"title":{},"body":{"interceptors/LoaderHttpInterceptorService.html":{}}}],["interceptor/loader",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"interceptors/LoaderHttpInterceptorService.html":{},"coverage.html":{}}}],["interceptors",{"_index":467,"title":{},"body":{"interceptors/LoaderHttpInterceptorService.html":{}}}],["interface",{"_index":512,"title":{"interfaces/Olympic.html":{},"interfaces/OnResize.html":{},"interfaces/Participation.html":{}},"body":{"interfaces/Olympic.html":{},"interfaces/OnResize.html":{},"interfaces/Participation.html":{},"coverage.html":{}}}],["interfaces",{"_index":513,"title":{},"body":{"interfaces/Olympic.html":{},"interfaces/OnResize.html":{},"interfaces/Participation.html":{},"index.html":{},"overview.html":{}}}],["isdataloaded",{"_index":326,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["isdoughnut",{"_index":266,"title":{},"body":{"components/CountriesChartComponent.html":{}}}],["italy",{"_index":548,"title":{},"body":{"classes/OlympicsServiceMock.html":{},"miscellaneous/variables.html":{}}}],["janeiro",{"_index":560,"title":{},"body":{"classes/OlympicsServiceMock.html":{},"miscellaneous/variables.html":{}}}],["key",{"_index":387,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["la",{"_index":588,"title":{},"body":{"classes/chartDataServiceMock.html":{}}}],["later",{"_index":538,"title":{},"body":{"injectables/OlympicService.html":{}}}],["legend",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{},"components/NotFoundComponent.html":{},"overview.html":{}}}],["libraries",{"_index":711,"title":{},"body":{"index.html":{}}}],["library",{"_index":696,"title":{},"body":{"index.html":{}}}],["life",{"_index":380,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["line",{"_index":672,"title":{},"body":{"index.html":{}}}],["linechartmodule",{"_index":399,"title":{},"body":{"components/DashboardCountryDetailComponent.html":{}}}],["literal",{"_index":725,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["loaded",{"_index":535,"title":{},"body":{"injectables/OlympicService.html":{}}}],["loader",{"_index":453,"title":{},"body":{"components/LoaderComponent.html":{},"index.html":{}}}],["loader'},{'name",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{},"components/NotFoundComponent.html":{}}}],["loader.component.html",{"_index":455,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loader.component.scss",{"_index":456,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loader/loader.service",{"_index":481,"title":{},"body":{"interceptors/LoaderHttpInterceptorService.html":{}}}],["loadercomponent",{"_index":87,"title":{"components/LoaderComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{},"components/NotFoundComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loaderhttpinterceptorservice",{"_index":109,"title":{"interceptors/LoaderHttpInterceptorService.html":{}},"body":{"modules/AppModule.html":{},"interceptors/LoaderHttpInterceptorService.html":{},"coverage.html":{},"overview.html":{}}}],["loaders",{"_index":699,"title":{},"body":{"index.html":{}}}],["loaderservice",{"_index":459,"title":{"injectables/LoaderService.html":{}},"body":{"components/LoaderComponent.html":{},"interceptors/LoaderHttpInterceptorService.html":{},"injectables/LoaderService.html":{},"coverage.html":{}}}],["loading",{"_index":457,"title":{},"body":{"components/LoaderComponent.html":{},"injectables/LoaderService.html":{}}}],["loadingoff",{"_index":487,"title":{},"body":{"injectables/LoaderService.html":{}}}],["loadingon",{"_index":488,"title":{},"body":{"injectables/LoaderService.html":{}}}],["loadingsubject",{"_index":486,"title":{},"body":{"injectables/LoaderService.html":{}}}],["loadinitialdata",{"_index":519,"title":{},"body":{"injectables/OlympicService.html":{},"classes/OlympicsServiceMock.html":{}}}],["logic",{"_index":685,"title":{},"body":{"index.html":{}}}],["londres",{"_index":552,"title":{},"body":{"classes/OlympicsServiceMock.html":{},"miscellaneous/variables.html":{}}}],["main",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["manages",{"_index":697,"title":{},"body":{"index.html":{}}}],["map",{"_index":186,"title":{},"body":{"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{}}}],["map((olympic",{"_index":203,"title":{},"body":{"injectables/ChartDataService.html":{}}}],["map((olympics",{"_index":195,"title":{},"body":{"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{}}}],["matching",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{},"classes/ChartFormatServiceMock.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoaderHttpInterceptorService.html":{},"injectables/LoaderService.html":{},"components/NotFoundComponent.html":{},"interfaces/Olympic.html":{},"injectables/OlympicService.html":{},"classes/OlympicsServiceMock.html":{},"interfaces/OnResize.html":{},"interfaces/Participation.html":{},"injectables/UnsubscribeObservableService.html":{},"classes/chartDataServiceMock.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["medal",{"_index":391,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["medals",{"_index":358,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["medalscount",{"_index":553,"title":{},"body":{"classes/OlympicsServiceMock.html":{},"interfaces/Participation.html":{},"classes/chartDataServiceMock.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{},"components/NotFoundComponent.html":{}}}],["methods",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{},"classes/ChartFormatServiceMock.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoaderHttpInterceptorService.html":{},"injectables/LoaderService.html":{},"components/NotFoundComponent.html":{},"injectables/OlympicService.html":{},"classes/OlympicsServiceMock.html":{},"interfaces/OnResize.html":{},"injectables/UnsubscribeObservableService.html":{},"classes/chartDataServiceMock.html":{}}}],["min",{"_index":64,"title":{},"body":{"components/AppComponent.html":{}}}],["miscellaneous",{"_index":720,"title":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mockdata",{"_index":242,"title":{},"body":{"classes/ChartFormatServiceMock.html":{}}}],["models",{"_index":689,"title":{},"body":{"index.html":{}}}],["models/interfaces/olympic",{"_index":188,"title":{},"body":{"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{},"injectables/OlympicService.html":{}}}],["models/interfaces/participation",{"_index":221,"title":{},"body":{"injectables/ChartFormatDataService.html":{}}}],["models/types/countryallchartformat",{"_index":223,"title":{},"body":{"injectables/ChartFormatDataService.html":{}}}],["models/types/countrydetailchartformat",{"_index":224,"title":{},"body":{"injectables/ChartFormatDataService.html":{}}}],["module",{"_index":95,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":97,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":395,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["multi",{"_index":155,"title":{},"body":{"modules/AppModule.html":{}}}],["name",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{},"classes/ChartFormatServiceMock.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoaderHttpInterceptorService.html":{},"components/NotFoundComponent.html":{},"injectables/OlympicService.html":{},"classes/chartDataServiceMock.html":{}}}],["navigate",{"_index":654,"title":{},"body":{"index.html":{}}}],["navigation",{"_index":675,"title":{},"body":{"index.html":{}}}],["new",{"_index":204,"title":{},"body":{"injectables/ChartDataService.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"injectables/LoaderService.html":{},"injectables/OlympicService.html":{},"injectables/UnsubscribeObservableService.html":{},"coverage.html":{}}}],["next",{"_index":474,"title":{},"body":{"interceptors/LoaderHttpInterceptorService.html":{}}}],["next.handle(req).pipe",{"_index":483,"title":{},"body":{"interceptors/LoaderHttpInterceptorService.html":{}}}],["ng",{"_index":650,"title":{},"body":{"index.html":{}}}],["ngif",{"_index":400,"title":{},"body":{"components/DashboardCountryDetailComponent.html":{},"components/LoaderComponent.html":{},"components/NotFoundComponent.html":{}}}],["ngmodule",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngondestroy",{"_index":331,"title":{},"body":{"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"injectables/UnsubscribeObservableService.html":{}}}],["ngoninit",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/LoaderComponent.html":{},"components/NotFoundComponent.html":{}}}],["ngx",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{},"components/CountriesChartComponent.html":{},"injectables/OlympicService.html":{},"dependencies.html":{},"index.html":{}}}],["ngxchartsmodule",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{}}}],["node_modules",{"_index":643,"title":{},"body":{"index.html":{}}}],["notfoundcomponent",{"_index":89,"title":{"components/NotFoundComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{},"components/NotFoundComponent.html":{},"coverage.html":{},"overview.html":{}}}],["nowrap",{"_index":59,"title":{},"body":{"components/AppComponent.html":{}}}],["npm",{"_index":646,"title":{},"body":{"index.html":{}}}],["null",{"_index":196,"title":{},"body":{"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{},"injectables/OlympicService.html":{}}}],["number",{"_index":180,"title":{},"body":{"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/InfoDetailChartComponent.html":{},"interfaces/Olympic.html":{},"interfaces/Participation.html":{},"classes/chartDataServiceMock.html":{}}}],["number(id",{"_index":210,"title":{},"body":{"injectables/ChartDataService.html":{}}}],["numberofentries",{"_index":403,"title":{},"body":{"components/DashboardCountryDetailComponent.html":{}}}],["object",{"_index":734,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observable",{"_index":183,"title":{},"body":{"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{},"classes/ChartFormatServiceMock.html":{},"components/LoaderComponent.html":{},"interceptors/LoaderHttpInterceptorService.html":{},"injectables/LoaderService.html":{},"injectables/OlympicService.html":{},"classes/chartDataServiceMock.html":{}}}],["observable.service",{"_index":353,"title":{},"body":{"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{}}}],["observable.service.ts",{"_index":569,"title":{},"body":{"injectables/UnsubscribeObservableService.html":{},"coverage.html":{}}}],["observable.service.ts:14",{"_index":575,"title":{},"body":{"injectables/UnsubscribeObservableService.html":{}}}],["observable.service.ts:7",{"_index":573,"title":{},"body":{"injectables/UnsubscribeObservableService.html":{}}}],["observable.service.ts:9",{"_index":572,"title":{},"body":{"injectables/UnsubscribeObservableService.html":{}}}],["observable/unsubscribe",{"_index":352,"title":{},"body":{"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"injectables/UnsubscribeObservableService.html":{},"coverage.html":{}}}],["observables",{"_index":705,"title":{},"body":{"index.html":{}}}],["of(2",{"_index":585,"title":{},"body":{"classes/chartDataServiceMock.html":{}}}],["of(5",{"_index":586,"title":{},"body":{"classes/chartDataServiceMock.html":{}}}],["of(mockdata",{"_index":252,"title":{},"body":{"classes/ChartFormatServiceMock.html":{}}}],["offering",{"_index":381,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["olymp.country)).size",{"_index":206,"title":{},"body":{"injectables/ChartDataService.html":{}}}],["olympic",{"_index":42,"title":{"interfaces/Olympic.html":{}},"body":{"components/AppComponent.html":{},"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{},"classes/ChartFormatServiceMock.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"interfaces/Olympic.html":{},"injectables/OlympicService.html":{},"classes/chartDataServiceMock.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["olympic.country",{"_index":226,"title":{},"body":{"injectables/ChartFormatDataService.html":{}}}],["olympic.id",{"_index":209,"title":{},"body":{"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{}}}],["olympic.participations.map((participation",{"_index":232,"title":{},"body":{"injectables/ChartFormatDataService.html":{}}}],["olympic.participations.reduce((accumulator",{"_index":227,"title":{},"body":{"injectables/ChartFormatDataService.html":{}}}],["olympic/olympic.service",{"_index":187,"title":{},"body":{"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{}}}],["olympicgamesstarter",{"_index":634,"title":{},"body":{"index.html":{}}}],["olympics",{"_index":197,"title":{},"body":{"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{},"injectables/OlympicService.html":{}}}],["olympics.find(olympic",{"_index":208,"title":{},"body":{"injectables/ChartDataService.html":{}}}],["olympics.map(olympic",{"_index":225,"title":{},"body":{"injectables/ChartFormatDataService.html":{}}}],["olympics[0].participations.length",{"_index":199,"title":{},"body":{"injectables/ChartDataService.html":{}}}],["olympicservice",{"_index":28,"title":{"injectables/OlympicService.html":{}},"body":{"components/AppComponent.html":{},"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{},"injectables/OlympicService.html":{},"coverage.html":{}}}],["olympicsmockdata",{"_index":614,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["olympicsservicemock",{"_index":544,"title":{"classes/OlympicsServiceMock.html":{}},"body":{"classes/OlympicsServiceMock.html":{},"coverage.html":{}}}],["olympicstest",{"_index":616,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["olympicurl",{"_index":517,"title":{},"body":{"injectables/OlympicService.html":{}}}],["olympicurl:string",{"_index":529,"title":{},"body":{"injectables/OlympicService.html":{}}}],["ondestroy",{"_index":576,"title":{},"body":{"injectables/UnsubscribeObservableService.html":{}}}],["oninit",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/LoaderComponent.html":{},"components/NotFoundComponent.html":{}}}],["onresize",{"_index":257,"title":{"interfaces/OnResize.html":{}},"body":{"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"interfaces/OnResize.html":{},"coverage.html":{},"index.html":{}}}],["onselect",{"_index":269,"title":{},"body":{"components/CountriesChartComponent.html":{}}}],["onselect(data",{"_index":278,"title":{},"body":{"components/CountriesChartComponent.html":{}}}],["optional",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{},"classes/ChartFormatServiceMock.html":{},"components/CountriesChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoaderHttpInterceptorService.html":{},"components/NotFoundComponent.html":{},"injectables/OlympicService.html":{},"classes/chartDataServiceMock.html":{}}}],["out",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["override",{"_index":371,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["overview",{"_index":716,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":619,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":465,"title":{},"body":{"components/LoaderComponent.html":{},"components/NotFoundComponent.html":{},"index.html":{}}}],["pages",{"_index":678,"title":{},"body":{"index.html":{}}}],["pages/dashboard",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["parameters",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{},"classes/ChartFormatServiceMock.html":{},"components/CountriesChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoaderHttpInterceptorService.html":{},"components/NotFoundComponent.html":{},"injectables/OlympicService.html":{},"classes/chartDataServiceMock.html":{}}}],["paris",{"_index":737,"title":{},"body":{"miscellaneous/variables.html":{}}}],["participant",{"_index":389,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["participation",{"_index":220,"title":{"interfaces/Participation.html":{}},"body":{"injectables/ChartFormatDataService.html":{},"components/DashboardCountryDetailComponent.html":{},"interfaces/Olympic.html":{},"interfaces/Participation.html":{},"coverage.html":{},"index.html":{}}}],["participation.medalscount",{"_index":229,"title":{},"body":{"injectables/ChartFormatDataService.html":{}}}],["participations",{"_index":515,"title":{},"body":{"interfaces/Olympic.html":{},"classes/OlympicsServiceMock.html":{},"classes/chartDataServiceMock.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["past",{"_index":396,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["path",{"_index":164,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["per",{"_index":359,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["pipe(takeuntil(this.getunsubscribe)).subscribe",{"_index":364,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["please",{"_index":536,"title":{},"body":{"injectables/OlympicService.html":{}}}],["positionclass",{"_index":147,"title":{},"body":{"modules/AppModule.html":{}}}],["preventduplicates",{"_index":151,"title":{},"body":{"modules/AppModule.html":{}}}],["private",{"_index":192,"title":{},"body":{"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{},"components/CountriesChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"injectables/OlympicService.html":{},"injectables/UnsubscribeObservableService.html":{}}}],["processing",{"_index":693,"title":{},"body":{"index.html":{}}}],["production",{"_index":735,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":635,"title":{},"body":{"index.html":{}}}],["properties",{"_index":22,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/NotFoundComponent.html":{},"interfaces/Olympic.html":{},"injectables/OlympicService.html":{},"interfaces/Participation.html":{},"injectables/UnsubscribeObservableService.html":{},"properties.html":{}}}],["provide",{"_index":153,"title":{},"body":{"modules/AppModule.html":{}}}],["providedin",{"_index":191,"title":{},"body":{"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{},"interceptors/LoaderHttpInterceptorService.html":{},"injectables/LoaderService.html":{},"injectables/OlympicService.html":{}}}],["providers",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["public",{"_index":270,"title":{},"body":{"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"injectables/LoaderService.html":{},"injectables/UnsubscribeObservableService.html":{}}}],["reload",{"_index":657,"title":{},"body":{"index.html":{}}}],["representations",{"_index":386,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["req",{"_index":477,"title":{},"body":{"interceptors/LoaderHttpInterceptorService.html":{}}}],["require",{"_index":612,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":732,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resizechart",{"_index":271,"title":{},"body":{"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"interfaces/OnResize.html":{}}}],["responses",{"_index":707,"title":{},"body":{"index.html":{}}}],["results",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{},"classes/ChartFormatServiceMock.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoaderHttpInterceptorService.html":{},"injectables/LoaderService.html":{},"components/NotFoundComponent.html":{},"interfaces/Olympic.html":{},"injectables/OlympicService.html":{},"classes/OlympicsServiceMock.html":{},"interfaces/OnResize.html":{},"interfaces/Participation.html":{},"injectables/UnsubscribeObservableService.html":{},"classes/chartDataServiceMock.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":193,"title":{},"body":{"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{},"classes/ChartFormatServiceMock.html":{},"interceptors/LoaderHttpInterceptorService.html":{},"injectables/OlympicService.html":{},"classes/OlympicsServiceMock.html":{},"injectables/UnsubscribeObservableService.html":{},"classes/chartDataServiceMock.html":{}}}],["returns",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{},"classes/ChartFormatServiceMock.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoaderHttpInterceptorService.html":{},"injectables/LoaderService.html":{},"components/NotFoundComponent.html":{},"injectables/OlympicService.html":{},"classes/OlympicsServiceMock.html":{},"interfaces/OnResize.html":{},"injectables/UnsubscribeObservableService.html":{},"classes/chartDataServiceMock.html":{}}}],["reusable",{"_index":668,"title":{},"body":{"index.html":{}}}],["rio",{"_index":558,"title":{},"body":{"classes/OlympicsServiceMock.html":{},"miscellaneous/variables.html":{}}}],["root",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{},"interceptors/LoaderHttpInterceptorService.html":{},"injectables/LoaderService.html":{},"injectables/OlympicService.html":{}}}],["root'},{'name",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{},"components/NotFoundComponent.html":{}}}],["route",{"_index":410,"title":{},"body":{"components/DashboardCountryDetailComponent.html":{}}}],["router",{"_index":275,"title":{},"body":{"components/CountriesChartComponent.html":{},"components/NotFoundComponent.html":{}}}],["routerlink",{"_index":445,"title":{},"body":{"components/HeaderComponent.html":{},"components/NotFoundComponent.html":{}}}],["routerlinkactive",{"_index":446,"title":{},"body":{"components/HeaderComponent.html":{}}}],["routermodule",{"_index":158,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":166,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":159,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing",{"_index":680,"title":{},"body":{"index.html":{}}}],["routing.module",{"_index":122,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":157,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":649,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{},"classes/ChartFormatServiceMock.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoaderHttpInterceptorService.html":{},"injectables/LoaderService.html":{},"injectables/OlympicService.html":{},"classes/OlympicsServiceMock.html":{},"injectables/UnsubscribeObservableService.html":{},"classes/chartDataServiceMock.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":190,"title":{},"body":{"injectables/ChartDataService.html":{},"injectables/OlympicService.html":{}}}],["section",{"_index":674,"title":{},"body":{"index.html":{}}}],["selector",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{},"components/NotFoundComponent.html":{}}}],["series",{"_index":231,"title":{},"body":{"injectables/ChartFormatDataService.html":{},"classes/ChartFormatServiceMock.html":{}}}],["seriesdata",{"_index":605,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["serve",{"_index":651,"title":{},"body":{"index.html":{}}}],["server",{"_index":648,"title":{},"body":{"index.html":{}}}],["services",{"_index":687,"title":{},"body":{"index.html":{}}}],["set(olympic.map((olymp",{"_index":205,"title":{},"body":{"injectables/ChartDataService.html":{}}}],["showgobacklink",{"_index":503,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["showlabels",{"_index":267,"title":{},"body":{"components/CountriesChartComponent.html":{}}}],["showxaxislabel",{"_index":302,"title":{},"body":{"components/CountryDetailChartComponent.html":{}}}],["showyaxislabel",{"_index":303,"title":{},"body":{"components/CountryDetailChartComponent.html":{}}}],["simulates",{"_index":700,"title":{},"body":{"index.html":{}}}],["sizes",{"_index":709,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{},"classes/ChartFormatServiceMock.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoaderHttpInterceptorService.html":{},"injectables/LoaderService.html":{},"components/NotFoundComponent.html":{},"interfaces/Olympic.html":{},"injectables/OlympicService.html":{},"classes/OlympicsServiceMock.html":{},"interfaces/OnResize.html":{},"interfaces/Participation.html":{},"injectables/UnsubscribeObservableService.html":{},"classes/chartDataServiceMock.html":{},"index.html":{}}}],["spain",{"_index":249,"title":{},"body":{"classes/ChartFormatServiceMock.html":{},"miscellaneous/variables.html":{}}}],["spec\\.ts",{"_index":733,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../countryallchartformat.ts",{"_index":723,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../countrydetailchartformat.ts",{"_index":724,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../environment.prod.ts",{"_index":728,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":729,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../olympics_test.ts",{"_index":731,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../olympicsdatamock.ts",{"_index":730,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":727,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":156,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:11",{"_index":30,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:15",{"_index":36,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/components/countries",{"_index":254,"title":{},"body":{"components/CountriesChartComponent.html":{},"coverage.html":{}}}],["src/app/components/country",{"_index":300,"title":{},"body":{"components/CountryDetailChartComponent.html":{},"coverage.html":{}}}],["src/app/components/header/header.component.ts",{"_index":443,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/components/info",{"_index":449,"title":{},"body":{"components/InfoDetailChartComponent.html":{},"coverage.html":{}}}],["src/app/components/loader/loader.component.ts",{"_index":452,"title":{},"body":{"components/LoaderComponent.html":{},"coverage.html":{}}}],["src/app/components/loader/loader.component.ts:15",{"_index":460,"title":{},"body":{"components/LoaderComponent.html":{}}}],["src/app/components/loader/loader.component.ts:22",{"_index":461,"title":{},"body":{"components/LoaderComponent.html":{}}}],["src/app/components/not",{"_index":499,"title":{},"body":{"components/NotFoundComponent.html":{},"coverage.html":{}}}],["src/app/core/models/interfaces/olympic",{"_index":424,"title":{},"body":{"components/DashboardCountryDetailComponent.html":{}}}],["src/app/core/models/interfaces/olympic.ts",{"_index":514,"title":{},"body":{"interfaces/Olympic.html":{},"coverage.html":{}}}],["src/app/core/models/interfaces/onresize.ts",{"_index":566,"title":{},"body":{"interfaces/OnResize.html":{},"coverage.html":{}}}],["src/app/core/models/interfaces/onresize.ts:3",{"_index":567,"title":{},"body":{"interfaces/OnResize.html":{}}}],["src/app/core/models/interfaces/participation",{"_index":425,"title":{},"body":{"components/DashboardCountryDetailComponent.html":{}}}],["src/app/core/models/interfaces/participation.ts",{"_index":568,"title":{},"body":{"interfaces/Participation.html":{},"coverage.html":{}}}],["src/app/core/models/types/countryallchartformat",{"_index":292,"title":{},"body":{"components/CountriesChartComponent.html":{},"components/DashboardCountriesComponent.html":{}}}],["src/app/core/models/types/countryallchartformat.ts",{"_index":602,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/core/models/types/countrydetailchartformat",{"_index":423,"title":{},"body":{"components/DashboardCountryDetailComponent.html":{}}}],["src/app/core/models/types/countrydetailchartformat.ts",{"_index":604,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/core/services/chart",{"_index":170,"title":{},"body":{"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"coverage.html":{}}}],["src/app/core/services/loader",{"_index":468,"title":{},"body":{"interceptors/LoaderHttpInterceptorService.html":{},"coverage.html":{}}}],["src/app/core/services/loader/loader.service.ts",{"_index":485,"title":{},"body":{"injectables/LoaderService.html":{},"coverage.html":{}}}],["src/app/core/services/loader/loader.service.ts:10",{"_index":489,"title":{},"body":{"injectables/LoaderService.html":{}}}],["src/app/core/services/loader/loader.service.ts:15",{"_index":491,"title":{},"body":{"injectables/LoaderService.html":{}}}],["src/app/core/services/loader/loader.service.ts:19",{"_index":490,"title":{},"body":{"injectables/LoaderService.html":{}}}],["src/app/core/services/loader/loader.service.ts:9",{"_index":495,"title":{},"body":{"injectables/LoaderService.html":{}}}],["src/app/core/services/olympic/olympic.service.ts",{"_index":516,"title":{},"body":{"injectables/OlympicService.html":{},"coverage.html":{}}}],["src/app/core/services/olympic/olympic.service.ts:12",{"_index":527,"title":{},"body":{"injectables/OlympicService.html":{}}}],["src/app/core/services/olympic/olympic.service.ts:13",{"_index":522,"title":{},"body":{"injectables/OlympicService.html":{}}}],["src/app/core/services/olympic/olympic.service.ts:20",{"_index":524,"title":{},"body":{"injectables/OlympicService.html":{}}}],["src/app/core/services/olympic/olympic.service.ts:37",{"_index":523,"title":{},"body":{"injectables/OlympicService.html":{}}}],["src/app/core/services/unsubsribe",{"_index":351,"title":{},"body":{"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"injectables/UnsubscribeObservableService.html":{},"coverage.html":{}}}],["src/app/pages/dashboard",{"_index":319,"title":{},"body":{"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"coverage.html":{}}}],["src/environments/environment.prod.ts",{"_index":606,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":609,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":610,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test/mockdata/chartdataservicemock.ts",{"_index":581,"title":{},"body":{"classes/chartDataServiceMock.html":{},"coverage.html":{}}}],["src/test/mockdata/chartdataservicemock.ts:10",{"_index":583,"title":{},"body":{"classes/chartDataServiceMock.html":{}}}],["src/test/mockdata/chartdataservicemock.ts:14",{"_index":582,"title":{},"body":{"classes/chartDataServiceMock.html":{}}}],["src/test/mockdata/chartdataservicemock.ts:6",{"_index":584,"title":{},"body":{"classes/chartDataServiceMock.html":{}}}],["src/test/mockdata/chartformatservicemock.ts",{"_index":236,"title":{},"body":{"classes/ChartFormatServiceMock.html":{},"coverage.html":{}}}],["src/test/mockdata/chartformatservicemock.ts:30",{"_index":237,"title":{},"body":{"classes/ChartFormatServiceMock.html":{}}}],["src/test/mockdata/chartformatservicemock.ts:8",{"_index":238,"title":{},"body":{"classes/ChartFormatServiceMock.html":{}}}],["src/test/mockdata/olympics_test.ts",{"_index":615,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test/mockdata/olympicsdatamock.ts",{"_index":613,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test/olympicsservicemock.ts",{"_index":545,"title":{},"body":{"classes/OlympicsServiceMock.html":{},"coverage.html":{}}}],["src/test/olympicsservicemock.ts:37",{"_index":546,"title":{},"body":{"classes/OlympicsServiceMock.html":{}}}],["src/test/olympicsservicemock.ts:6",{"_index":547,"title":{},"body":{"classes/OlympicsServiceMock.html":{}}}],["standalone",{"_index":260,"title":{},"body":{"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{},"components/NotFoundComponent.html":{}}}],["start",{"_index":652,"title":{},"body":{"index.html":{}}}],["started",{"_index":633,"title":{"index.html":{}},"body":{}}],["starter",{"_index":44,"title":{},"body":{"components/AppComponent.html":{}}}],["starting",{"_index":645,"title":{},"body":{"index.html":{}}}],["statements",{"_index":593,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":744,"title":{},"body":{"miscellaneous/variables.html":{}}}],["statistics",{"_index":394,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["stored",{"_index":662,"title":{},"body":{"index.html":{}}}],["string",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/NotFoundComponent.html":{},"interfaces/Olympic.html":{},"injectables/OlympicService.html":{},"interfaces/Participation.html":{}}}],["string(participation.year",{"_index":233,"title":{},"body":{"injectables/ChartFormatDataService.html":{}}}],["structure",{"_index":665,"title":{},"body":{"index.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{}}}],["styleurl",{"_index":262,"title":{},"body":{"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{},"components/NotFoundComponent.html":{}}}],["styleurls",{"_index":17,"title":{},"body":{"components/AppComponent.html":{}}}],["subject",{"_index":344,"title":{},"body":{"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"injectables/UnsubscribeObservableService.html":{}}}],["such",{"_index":388,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["super",{"_index":356,"title":{},"body":{"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{}}}],["super.ngondestroy",{"_index":372,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["support",{"_index":540,"title":{},"body":{"injectables/OlympicService.html":{},"modules.html":{}}}],["svg",{"_index":712,"title":{},"body":{"modules.html":{}}}],["swimlane/ngx",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"dependencies.html":{}}}],["table",{"_index":618,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":617,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":47,"title":{},"body":{"components/AppComponent.html":{}}}],["takeuntil",{"_index":347,"title":{},"body":{"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{}}}],["tap",{"_index":528,"title":{},"body":{"injectables/OlympicService.html":{}}}],["tap((value",{"_index":531,"title":{},"body":{"injectables/OlympicService.html":{}}}],["team",{"_index":541,"title":{},"body":{"injectables/OlympicService.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{},"components/NotFoundComponent.html":{}}}],["templateurl",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{},"components/NotFoundComponent.html":{}}}],["test",{"_index":253,"title":{},"body":{"classes/ChartFormatServiceMock.html":{}}}],["this.chartdata.getdatabycountryid(countryid).pipe(takeuntil(this.getunsubscribe)).subscribe",{"_index":429,"title":{},"body":{"components/DashboardCountryDetailComponent.html":{}}}],["this.chartdata.gettotalcountry",{"_index":362,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["this.chartdata.gettotaljos",{"_index":361,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["this.chartformat.getformatdataforlinechartbycountry(this.countryselecteddata",{"_index":433,"title":{},"body":{"components/DashboardCountryDetailComponent.html":{}}}],["this.chartformatservice.getformatdataforpiechartforallcountry",{"_index":363,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["this.containerref.nativeelement.offsetwidth",{"_index":299,"title":{},"body":{"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{}}}],["this.countryselecteddata",{"_index":431,"title":{},"body":{"components/DashboardCountryDetailComponent.html":{}}}],["this.datacountrychart",{"_index":432,"title":{},"body":{"components/DashboardCountryDetailComponent.html":{}}}],["this.datafordashboard",{"_index":368,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["this.datafordashboard?.length",{"_index":370,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["this.getcountriesdata",{"_index":360,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["this.getcountrydata",{"_index":426,"title":{},"body":{"components/DashboardCountryDetailComponent.html":{}}}],["this.http.get(this.olympicurl).pipe",{"_index":530,"title":{},"body":{"injectables/OlympicService.html":{}}}],["this.isdataloaded",{"_index":369,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["this.loaderservice.loading",{"_index":464,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.loaderservice.loadingoff",{"_index":484,"title":{},"body":{"interceptors/LoaderHttpInterceptorService.html":{}}}],["this.loaderservice.loadingon",{"_index":482,"title":{},"body":{"interceptors/LoaderHttpInterceptorService.html":{}}}],["this.loading",{"_index":463,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.loadingsubject.asobservable",{"_index":492,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this.loadingsubject.complete();0",{"_index":498,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this.loadingsubject.next(false",{"_index":497,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this.loadingsubject.next(true",{"_index":496,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this.numberofentries",{"_index":434,"title":{},"body":{"components/DashboardCountryDetailComponent.html":{}}}],["this.olympics$.asobservable",{"_index":543,"title":{},"body":{"injectables/OlympicService.html":{}}}],["this.olympics$.next(null",{"_index":542,"title":{},"body":{"injectables/OlympicService.html":{}}}],["this.olympics$.next(value",{"_index":533,"title":{},"body":{"injectables/OlympicService.html":{}}}],["this.olympicservice.getolympics().pipe",{"_index":194,"title":{},"body":{"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{}}}],["this.olympicservice.loadinitialdata().pipe(take(1)).subscribe",{"_index":53,"title":{},"body":{"components/AppComponent.html":{}}}],["this.route.snapshot.params['id",{"_index":428,"title":{},"body":{"components/DashboardCountryDetailComponent.html":{}}}],["this.router.navigatebyurl(`country",{"_index":297,"title":{},"body":{"components/CountriesChartComponent.html":{}}}],["this.router.url",{"_index":509,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["this.showgobacklink",{"_index":508,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["this.title",{"_index":357,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["this.toastservice.error('data",{"_index":534,"title":{},"body":{"injectables/OlympicService.html":{}}}],["this.toastservice.error(error",{"_index":202,"title":{},"body":{"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{},"components/CountriesChartComponent.html":{},"injectables/OlympicService.html":{}}}],["this.totalhostingcountries",{"_index":367,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["this.totalnumbermedals",{"_index":436,"title":{},"body":{"components/DashboardCountryDetailComponent.html":{}}}],["this.totalnumberofathletes",{"_index":440,"title":{},"body":{"components/DashboardCountryDetailComponent.html":{}}}],["this.totalolympics",{"_index":366,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["this.unsubscribe",{"_index":579,"title":{},"body":{"injectables/UnsubscribeObservableService.html":{}}}],["this.unsubscribe$.complete",{"_index":578,"title":{},"body":{"injectables/UnsubscribeObservableService.html":{}}}],["this.unsubscribe$.next",{"_index":577,"title":{},"body":{"injectables/UnsubscribeObservableService.html":{}}}],["timeline",{"_index":304,"title":{},"body":{"components/CountryDetailChartComponent.html":{}}}],["timeout",{"_index":145,"title":{},"body":{"modules/AppModule.html":{}}}],["title",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/NotFoundComponent.html":{}}}],["toast",{"_index":148,"title":{},"body":{"modules/AppModule.html":{}}}],["toastr",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{},"components/CountriesChartComponent.html":{},"injectables/OlympicService.html":{},"dependencies.html":{},"index.html":{}}}],["toastrmodule",{"_index":141,"title":{},"body":{"modules/AppModule.html":{}}}],["toastrmodule.forroot",{"_index":144,"title":{},"body":{"modules/AppModule.html":{}}}],["toastrservice",{"_index":177,"title":{},"body":{"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{},"components/CountriesChartComponent.html":{},"injectables/OlympicService.html":{}}}],["toastservice",{"_index":176,"title":{},"body":{"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{},"components/CountriesChartComponent.html":{},"injectables/OlympicService.html":{}}}],["tokyo",{"_index":563,"title":{},"body":{"classes/OlympicsServiceMock.html":{},"miscellaneous/variables.html":{}}}],["top",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["totalhostingcountries",{"_index":327,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["totalnumbermedals",{"_index":404,"title":{},"body":{"components/DashboardCountryDetailComponent.html":{}}}],["totalnumberofathletes",{"_index":405,"title":{},"body":{"components/DashboardCountryDetailComponent.html":{}}}],["totalolympics",{"_index":328,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{},"components/NotFoundComponent.html":{}}}],["true",{"_index":152,"title":{},"body":{"modules/AppModule.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{},"components/NotFoundComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":537,"title":{},"body":{"injectables/OlympicService.html":{}}}],["tslib",{"_index":628,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChartDataService.html":{},"injectables/ChartFormatDataService.html":{},"classes/ChartFormatServiceMock.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{},"interceptors/LoaderHttpInterceptorService.html":{},"injectables/LoaderService.html":{},"components/NotFoundComponent.html":{},"interfaces/Olympic.html":{},"injectables/OlympicService.html":{},"interfaces/Participation.html":{},"injectables/UnsubscribeObservableService.html":{},"classes/chartDataServiceMock.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":721,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":688,"title":{},"body":{"index.html":{}}}],["télésport",{"_index":374,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["undefined",{"_index":207,"title":{},"body":{"injectables/ChartDataService.html":{},"components/DashboardCountryDetailComponent.html":{}}}],["united",{"_index":743,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unsubscribe",{"_index":329,"title":{},"body":{"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"injectables/UnsubscribeObservableService.html":{}}}],["unsubscribeobservable",{"_index":703,"title":{},"body":{"index.html":{}}}],["unsubscribeobservableservice",{"_index":322,"title":{"injectables/UnsubscribeObservableService.html":{}},"body":{"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"injectables/UnsubscribeObservableService.html":{},"coverage.html":{}}}],["unsubscribeobservableservice:57",{"_index":338,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["unsubscribeobservableservice:7",{"_index":345,"title":{},"body":{"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{}}}],["unsubscribeobservableservice:9",{"_index":418,"title":{},"body":{"components/DashboardCountryDetailComponent.html":{}}}],["useclass",{"_index":154,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":679,"title":{},"body":{"index.html":{}}}],["utility",{"_index":691,"title":{},"body":{"index.html":{}}}],["value",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChartFormatDataService.html":{},"classes/ChartFormatServiceMock.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/InfoDetailChartComponent.html":{},"injectables/LoaderService.html":{},"components/NotFoundComponent.html":{},"injectables/OlympicService.html":{},"injectables/UnsubscribeObservableService.html":{},"miscellaneous/variables.html":{}}}],["value.length",{"_index":532,"title":{},"body":{"injectables/OlympicService.html":{}}}],["var",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/HeaderComponent.html":{},"components/InfoDetailChartComponent.html":{},"components/LoaderComponent.html":{},"components/NotFoundComponent.html":{}}}],["variable",{"_index":607,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":726,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":639,"title":{},"body":{"index.html":{},"properties.html":{}}}],["view",{"_index":268,"title":{},"body":{"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{}}}],["viewchild",{"_index":291,"title":{},"body":{"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{}}}],["viewchild('containerref",{"_index":283,"title":{},"body":{"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{}}}],["visually",{"_index":382,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["void",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{},"components/DashboardCountriesComponent.html":{},"components/DashboardCountryDetailComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/NotFoundComponent.html":{},"interfaces/OnResize.html":{},"injectables/UnsubscribeObservableService.html":{}}}],["web",{"_index":375,"title":{},"body":{"components/DashboardCountriesComponent.html":{}}}],["width",{"_index":60,"title":{},"body":{"components/AppComponent.html":{}}}],["window:resize",{"_index":294,"title":{},"body":{"components/CountriesChartComponent.html":{},"components/CountryDetailChartComponent.html":{}}}],["xaxis",{"_index":305,"title":{},"body":{"components/CountryDetailChartComponent.html":{}}}],["xaxislabel",{"_index":306,"title":{},"body":{"components/CountryDetailChartComponent.html":{}}}],["yaxis",{"_index":307,"title":{},"body":{"components/CountryDetailChartComponent.html":{}}}],["year",{"_index":549,"title":{},"body":{"classes/OlympicsServiceMock.html":{},"interfaces/Participation.html":{},"classes/chartDataServiceMock.html":{},"miscellaneous/variables.html":{}}}],["zone.js",{"_index":630,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(olympicService: OlympicService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        olympicService\n                                                  \n                                                        \n                                                                        OlympicService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'olympic-games-starter'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { take } from 'rxjs';\nimport { OlympicService } from './core/services/olympic/olympic.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  title: string= 'olympic-games-starter'\n\n  constructor(private olympicService: OlympicService) {}\n\n  ngOnInit(): void {\n    this.olympicService.loadInitialData().pipe(take(1)).subscribe();\n  }\n}\n\n    \n\n    \n        \n    \n    \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                .app-main {\n    display: flex;\n    flex-flow: column nowrap;\n    width: 100vw;\n    height: 100vh;\n    min-height: 800px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CountriesChartComponent', 'selector': 'app-countries-chart'},{'name': 'CountryDetailChartComponent', 'selector': 'app-country-detail-chart'},{'name': 'DashboardCountriesComponent', 'selector': 'app-dashboard-countries'},{'name': 'DashboardCountryDetailComponent', 'selector': 'app-dashboard-country-detail'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'InfoDetailChartComponent', 'selector': 'app-info-detail-chart'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nDashboardCountriesComponent\n\nDashboardCountriesComponent\n\nAppModule -->\n\nDashboardCountriesComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nLoaderComponent\n\nLoaderComponent\n\nAppModule -->\n\nLoaderComponent->AppModule\n\n\n\n\n\nNotFoundComponent\n\nNotFoundComponent\n\nAppModule -->\n\nNotFoundComponent->AppModule\n\n\n\n\n\nLoaderHttpInterceptorService\n\nLoaderHttpInterceptorService\n\nAppModule -->\n\nLoaderHttpInterceptorService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            LoaderHttpInterceptorService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            DashboardCountriesComponent\n                        \n                        \n                            HeaderComponent\n                        \n                        \n                            LoaderComponent\n                        \n                        \n                            NotFoundComponent\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http';\nimport {NgModule} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {NotFoundComponent} from './components/not-found/not-found.component';\nimport {HeaderComponent} from \"./components/header/header.component\";\nimport {LoaderHttpInterceptorService} from './core/services/loader-http-interceptor/loader-http-interceptor.service';\nimport {DashboardCountriesComponent} from './pages/dashboard-countries/dashboard-countries.component';\nimport {NgxChartsModule} from '@swimlane/ngx-charts';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {LoaderComponent} from './components/loader/loader.component';\nimport {ToastrModule} from 'ngx-toastr';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    NotFoundComponent,\n    HeaderComponent,\n    DashboardCountriesComponent,\n    NgxChartsModule,\n    BrowserAnimationsModule,\n    LoaderComponent,\n    ToastrModule.forRoot({\n      timeOut: 50000,\n      positionClass: 'toast-top-center',\n      preventDuplicates: true,\n    })\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: LoaderHttpInterceptorService,\n      multi: true,\n    },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {NotFoundComponent} from './components/not-found/not-found.component';\nimport {DashboardCountryDetailComponent} from './pages/dashboard-country-detail/dashboard-country-detail.component';\nimport {DashboardCountriesComponent} from \"./pages/dashboard-countries/dashboard-countries.component\";\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DashboardCountriesComponent,\n  },\n  {\n    path: 'country-detail-chart/:id',\n    component: DashboardCountryDetailComponent,\n  },\n  {\n    path: '**',\n    component: NotFoundComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ChartDataService.html":{"url":"injectables/ChartDataService.html","title":"injectable - ChartDataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ChartDataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/chart-data/chart-data.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDataByCountryId\n                            \n                            \n                                getTotalCountry\n                            \n                            \n                                getTotalJos\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(olympicService: OlympicService, toastService: ToastrService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/chart-data/chart-data.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        olympicService\n                                                  \n                                                        \n                                                                        OlympicService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getDataByCountryId\n                        \n                    \n                \n            \n            \n                \ngetDataByCountryId(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/chart-data/chart-data.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTotalCountry\n                        \n                    \n                \n            \n            \n                \ngetTotalCountry()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/chart-data/chart-data.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTotalJos\n                        \n                    \n                \n            \n            \n                \ngetTotalJos()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/chart-data/chart-data.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {map, Observable} from 'rxjs';\nimport {OlympicService} from \"../olympic/olympic.service\";\nimport {Olympic} from \"../../models/interfaces/Olympic\";\nimport {catchError} from \"rxjs/operators\";\nimport {ToastrService} from \"ngx-toastr\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChartDataService {\n\n  constructor(private olympicService: OlympicService, private toastService: ToastrService) {\n  }\n\n  getTotalJos(): Observable {\n    return this.olympicService.getOlympics().pipe(\n      map((olympics: Olympic[] | null) => {\n        if (!olympics) return 0;\n        return olympics[0].participations.length;\n      }),\n      catchError((error: string, caught) => {\n        this.toastService.error(error);\n        return caught;\n      })\n    )\n  }\n\n  getTotalCountry(): Observable {\n    return this.olympicService.getOlympics().pipe(\n      map((olympic: Olympic[] | null) => {\n        if (!olympic) return 0;\n        return new Set(olympic.map((olymp: Olympic) => olymp.country)).size;\n      }),\n      catchError((error: string, caught) => {\n        this.toastService.error(error);\n        return caught;\n      })\n    )\n  }\n\n  getDataByCountryId(id: number): Observable {\n    return this.olympicService.getOlympics().pipe(\n      map((olympics: Olympic[] | null) => {\n        if (!olympics) return undefined\n        return olympics.find(olympic => olympic.id === Number(id));\n      }),\n      catchError((error: string, caught) => {\n        this.toastService.error(error);\n        return caught;\n      })\n    );\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ChartFormatDataService.html":{"url":"injectables/ChartFormatDataService.html","title":"injectable - ChartFormatDataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ChartFormatDataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/chart-format/chart-format-data.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getFormatDataForLineChartByCountry\n                            \n                            \n                                getFormatDataForPieChartForAllCountry\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(olympicService: OlympicService, toastService: ToastrService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/chart-format/chart-format-data.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        olympicService\n                                                  \n                                                        \n                                                                        OlympicService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getFormatDataForLineChartByCountry\n                        \n                    \n                \n            \n            \n                \ngetFormatDataForLineChartByCountry(olympic: Olympic)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/chart-format/chart-format-data.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                olympic\n                                            \n                                                            Olympic\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         CountryDetailChartData[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFormatDataForPieChartForAllCountry\n                        \n                    \n                \n            \n            \n                \ngetFormatDataForPieChartForAllCountry()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/chart-format/chart-format-data.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { catchError, map, Observable } from 'rxjs';\nimport { Olympic } from '../../models/interfaces/Olympic';\nimport { Participation } from '../../models/interfaces/Participation';\nimport { OlympicService } from '../olympic/olympic.service';\nimport {CountryAllChartFormat} from \"../../models/types/CountryAllChartFormat\";\nimport {CountryDetailChartData} from \"../../models/types/CountryDetailChartFormat\";\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChartFormatDataService {\n\n  constructor(private olympicService: OlympicService, private toastService: ToastrService) {\n  }\n\n  getFormatDataForPieChartForAllCountry(): Observable {\n    return this.olympicService.getOlympics().pipe(\n      map((olympics: Olympic[] | null) => {\n        if (!olympics) return [];\n        return olympics.map(olympic => {\n          return {\n            name: olympic.country,\n            value: olympic.participations.reduce((accumulator: number, participation: Participation) =>\n                accumulator + participation.medalsCount\n              , 0),\n            extra: {\n              id: olympic.id,\n            }\n          };\n        })\n      }),\n      catchError((error: string, caught) => {\n        this.toastService.error(error);\n        return caught;\n      })\n    )\n  }\n\n  getFormatDataForLineChartByCountry(olympic: Olympic): CountryDetailChartData[] {\n    return [{\n      name: olympic.country,\n      series:\n        olympic.participations.map((participation: Participation) => {\n          return {\n            name: String(participation.year),\n            value: participation.medalsCount,\n          }\n        })\n    }]\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ChartFormatServiceMock.html":{"url":"classes/ChartFormatServiceMock.html","title":"class - ChartFormatServiceMock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ChartFormatServiceMock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/test/mockData/chartFormatServiceMock.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getFormatDataForLineChartByCountry\n                            \n                            \n                                getFormatDataForPieChartForAllCountry\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getFormatDataForLineChartByCountry\n                        \n                    \n                \n            \n            \n                \ngetFormatDataForLineChartByCountry(olympic: Olympic)\n                \n            \n\n\n                    \n                        \n                            Defined in src/test/mockData/chartFormatServiceMock.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                olympic\n                                            \n                                                            Olympic\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         CountryDetailChartData[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFormatDataForPieChartForAllCountry\n                        \n                    \n                \n            \n            \n                \ngetFormatDataForPieChartForAllCountry()\n                \n            \n\n\n                    \n                        \n                            Defined in src/test/mockData/chartFormatServiceMock.ts:8\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {Observable, of} from \"rxjs\";\nimport {CountryAllChartFormat} from \"../../app/core/models/types/CountryAllChartFormat\";\nimport {CountryDetailChartData} from \"../../app/core/models/types/CountryDetailChartFormat\";\nimport {Olympic} from \"../../app/core/models/interfaces/Olympic\";\n\n\nexport class ChartFormatServiceMock {\n  getFormatDataForPieChartForAllCountry(): Observable {\n    const mockData: CountryAllChartFormat[] = [\n      {\n        name: 'France',\n        value: 200,\n        extra: {id: 1}\n      },\n      {\n        name: 'Germany',\n        value: 150,\n        extra: {id: 2}\n      },\n      {\n        name: 'Spain',\n        value: 120,\n        extra: {id: 3}\n      }\n    ];\n\n    return of(mockData);\n  }\n\n  getFormatDataForLineChartByCountry(olympic: Olympic): CountryDetailChartData[] {\n    return [\n      {\n        name: \"test\",\n        series: [{\n          name: \"test\",\n          value: 1,\n        }]\n      }\n    ]\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CountriesChartComponent.html":{"url":"components/CountriesChartComponent.html","title":"component - CountriesChartComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CountriesChartComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/countries-chart/countries-chart.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnResize\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                app-countries-chart\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            NgxChartsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./countries-chart.component.html\n            \n\n\n\n            \n                styleUrl\n                ./countries-chart.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                containerRef\n                            \n                            \n                                gradient\n                            \n                            \n                                isDoughnut\n                            \n                            \n                                showLabels\n                            \n                            \n                                view\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onSelect\n                            \n                            \n                                    Public\n                                resizeChart\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, toastService: ToastrService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/countries-chart/countries-chart.component.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :         CountryAllChartFormat[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/countries-chart/countries-chart.component.ts:31\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onSelect\n                        \n                    \n                \n            \n            \n                \nonSelect(data: CountryAllChartFormat)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/countries-chart/countries-chart.component.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            CountryAllChartFormat\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        resizeChart\n                        \n                    \n                \n            \n            \n                \n                        \n                    resizeChart()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/countries-chart/countries-chart.component.ts:46\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        containerRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('containerRef')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/countries-chart/countries-chart.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gradient\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/countries-chart/countries-chart.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDoughnut\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/countries-chart/countries-chart.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showLabels\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/countries-chart/countries-chart.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        view\n                        \n                    \n                \n            \n                \n                    \n                        Type :     [number, number]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/countries-chart/countries-chart.component.ts:35\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  ElementRef,\n  Input,\n  ViewChild,\n} from '@angular/core';\nimport {NgxChartsModule} from \"@swimlane/ngx-charts\";\nimport {Router} from \"@angular/router\";\nimport {ToastrService} from \"ngx-toastr\";\nimport {CountryAllChartFormat} from 'src/app/core/models/types/CountryAllChartFormat';\nimport {OnResize} from \"../../core/models/interfaces/OnResize\";\n\n@Component({\n  selector: 'app-countries-chart',\n  standalone: true,\n  imports: [\n    NgxChartsModule,\n  ],\n  templateUrl: './countries-chart.component.html',\n  styleUrl: './countries-chart.component.scss',\n  host: {\n    '(window:resize)': 'resizeChart()'\n  }\n})\nexport class CountriesChartComponent implements OnResize{\n\n  @ViewChild('containerRef')\n  containerRef!: ElementRef;\n\n  @Input()\n  data!: CountryAllChartFormat[];\n  gradient: boolean = true;\n  showLabels: boolean = true;\n  isDoughnut: boolean = false;\n  view!: [number, number];\n\n  constructor(private router: Router, private toastService: ToastrService) {\n  }\n\n  onSelect(data: CountryAllChartFormat): void {\n    const idCountry: number = data.extra.id;\n    this.router.navigateByUrl(`country-detail-chart/${idCountry}`).catch(error =>\n      this.toastService.error(error))\n  }\n\n  public resizeChart(): void {\n    if (this.containerRef.nativeElement.offsetWidth \n    \n\n    \n        \n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CountriesChartComponent', 'selector': 'app-countries-chart'},{'name': 'CountryDetailChartComponent', 'selector': 'app-country-detail-chart'},{'name': 'DashboardCountriesComponent', 'selector': 'app-dashboard-countries'},{'name': 'DashboardCountryDetailComponent', 'selector': 'app-dashboard-country-detail'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'InfoDetailChartComponent', 'selector': 'app-info-detail-chart'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CountriesChartComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CountryDetailChartComponent.html":{"url":"components/CountryDetailChartComponent.html","title":"component - CountryDetailChartComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CountryDetailChartComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/country-detail-chart/country-detail-chart.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnResize\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                app-country-detail-chart\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            NgxChartsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./country-detail-chart.component.html\n            \n\n\n\n            \n                styleUrl\n                ./country-detail-chart.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                containerRef\n                            \n                            \n                                showXAxisLabel\n                            \n                            \n                                showYAxisLabel\n                            \n                            \n                                timeline\n                            \n                            \n                                view\n                            \n                            \n                                xAxis\n                            \n                            \n                                xAxisLabel\n                            \n                            \n                                yAxis\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                resizeChart\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :         CountryDetailChartFormat | \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/country-detail-chart/country-detail-chart.component.ts:22\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        resizeChart\n                        \n                    \n                \n            \n            \n                \n                        \n                    resizeChart()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/country-detail-chart/country-detail-chart.component.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        containerRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('containerRef')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/country-detail-chart/country-detail-chart.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showXAxisLabel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/country-detail-chart/country-detail-chart.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showYAxisLabel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/country-detail-chart/country-detail-chart.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timeline\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/country-detail-chart/country-detail-chart.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        view\n                        \n                    \n                \n            \n                \n                    \n                        Type :     [number, number]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/country-detail-chart/country-detail-chart.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        xAxis\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/country-detail-chart/country-detail-chart.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        xAxisLabel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Dates'\n                    \n                \n                    \n                        \n                                Defined in src/app/components/country-detail-chart/country-detail-chart.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        yAxis\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/country-detail-chart/country-detail-chart.component.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, ElementRef, Input, ViewChild} from '@angular/core';\nimport {NgxChartsModule} from \"@swimlane/ngx-charts\";\nimport {CountryDetailChartFormat} from \"../../core/models/types/CountryDetailChartFormat\";\nimport {OnResize} from \"../../core/models/interfaces/OnResize\";\n\n@Component({\n  selector: 'app-country-detail-chart',\n  standalone: true,\n  imports: [NgxChartsModule],\n  templateUrl: './country-detail-chart.component.html',\n  styleUrl: './country-detail-chart.component.scss',\n  host: {\n    '(window:resize)': 'resizeChart()'\n  }\n})\nexport class CountryDetailChartComponent implements OnResize {\n\n  @ViewChild('containerRef')\n  containerRef!: ElementRef;\n\n  @Input()\n  data!: CountryDetailChartFormat|[]\n  view!: [number, number];\n  xAxis: boolean = true;\n  yAxis: boolean = true;\n  showYAxisLabel: boolean = true;\n  showXAxisLabel: boolean = true;\n  xAxisLabel: string = 'Dates';\n  timeline: boolean = true;\n\n  public resizeChart(): void {\n    if (this.containerRef.nativeElement.offsetWidth \n    \n\n    \n        \n  \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CountriesChartComponent', 'selector': 'app-countries-chart'},{'name': 'CountryDetailChartComponent', 'selector': 'app-country-detail-chart'},{'name': 'DashboardCountriesComponent', 'selector': 'app-dashboard-countries'},{'name': 'DashboardCountryDetailComponent', 'selector': 'app-dashboard-country-detail'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'InfoDetailChartComponent', 'selector': 'app-info-detail-chart'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CountryDetailChartComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DashboardCountriesComponent.html":{"url":"components/DashboardCountriesComponent.html","title":"component - DashboardCountriesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DashboardCountriesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/dashboard-countries/dashboard-countries.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                    UnsubscribeObservableService\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dashboard-countries\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                InfoDetailChartComponent\n                                CountriesChartComponent\n                                NotFoundComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./dashboard-countries.component.html\n            \n\n\n\n            \n                styleUrl\n                ./dashboard-countries.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dataForDashboard\n                            \n                            \n                                isDataLoaded\n                            \n                            \n                                title\n                            \n                            \n                                totalHostingCountries\n                            \n                            \n                                totalOlympics\n                            \n                            \n                                    Private\n                                unsubscribe$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getCountriesData\n                            \n                            \n                                    \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(chartData: ChartDataService, chartFormatService: ChartFormatDataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/dashboard-countries/dashboard-countries.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        chartData\n                                                  \n                                                        \n                                                                        ChartDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        chartFormatService\n                                                  \n                                                        \n                                                                        ChartFormatDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getCountriesData\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCountriesData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/dashboard-countries/dashboard-countries.component.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Inherited from         UnsubscribeObservableService\n\n                        \n                    \n                    \n                        \n                                Defined in         UnsubscribeObservableService:57\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/dashboard-countries/dashboard-countries.component.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        dataForDashboard\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CountryAllChartFormat[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/dashboard-countries/dashboard-countries.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDataLoaded\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/dashboard-countries/dashboard-countries.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/dashboard-countries/dashboard-countries.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalHostingCountries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/dashboard-countries/dashboard-countries.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalOlympics\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/dashboard-countries/dashboard-countries.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        unsubscribe$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                        \n                            \n                                Inherited from         UnsubscribeObservableService\n\n                            \n                        \n                    \n                        \n                                Defined in         UnsubscribeObservableService:7\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {combineLatest} from 'rxjs';\nimport {takeUntil} from \"rxjs\";\nimport {InfoDetailChartComponent} from '../../components/info-detail-chart/info-detail-chart.component';\nimport {UnsubscribeObservableService} from 'src/app/core/services/unsubsribe-observable/unsubscribe-observable.service';\nimport {CountryAllChartFormat} from 'src/app/core/models/types/CountryAllChartFormat';\nimport {ChartFormatDataService} from 'src/app/core/services/chart-format/chart-format-data.service';\nimport {CountriesChartComponent} from '../../components/countries-chart/countries-chart.component';\nimport {ChartDataService} from 'src/app/core/services/chart-data/chart-data.service';\nimport {NotFoundComponent} from \"../../components/not-found/not-found.component\";\n\n@Component({\n  selector: 'app-dashboard-countries',\n  standalone: true,\n  imports: [InfoDetailChartComponent, CountriesChartComponent, NotFoundComponent],\n  templateUrl: './dashboard-countries.component.html',\n  styleUrl: './dashboard-countries.component.scss'\n})\nexport class DashboardCountriesComponent extends UnsubscribeObservableService implements OnInit {\n\n  totalOlympics!: number;\n  totalHostingCountries!: number;\n  dataForDashboard!: CountryAllChartFormat[];\n  title!: string;\n  isDataLoaded!: boolean;\n\n  constructor(\n    private chartData: ChartDataService,\n    private chartFormatService: ChartFormatDataService\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.title = 'Medals per country';\n    this.getCountriesData();\n  }\n\n  private getCountriesData(): void {\n    combineLatest([\n      this.chartData.getTotalJos(),\n      this.chartData.getTotalCountry(),\n      this.chartFormatService.getFormatDataForPieChartForAllCountry()\n    ]).pipe(takeUntil(this.getUnsubscribe)).subscribe(\n      ([totalOlympics, totalHostingCountries, dashboardData]: [number, number, CountryAllChartFormat[]]) => {\n        this.totalOlympics = totalOlympics;\n        this.totalHostingCountries = totalHostingCountries;\n        this.dataForDashboard = dashboardData;\n\n        this.isDataLoaded = this.dataForDashboard?.length > 0\n          && this.totalOlympics > 0\n          && this.totalHostingCountries > 0;\n      }\n    );\n  }\n\n  override ngOnDestroy(): void {\n    super.ngOnDestroy();\n  }\n\n}\n\n    \n\n    \n        @if(isDataLoaded){\n  \n    \n      \n        \n          Télésport is a web application designed to bring the history of the Olympic Games to life,\n          offering visually engaging and interactive graphical representations of key data such as participant\n          demographics,\n          medal counts, athlete statistics, and more from past editions of the Games.\n        \n      \n      {{ title }}\n      \n        \n        \n      \n      \n        \n      \n    \n  \n} @else {\n  \n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if(isDataLoaded){                              Télésport is a web application designed to bring the history of the Olympic Games to life,          offering visually engaging and interactive graphical representations of key data such as participant          demographics,          medal counts, athlete statistics, and more from past editions of the Games.                    {{ title }}                                                      } @else {  }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CountriesChartComponent', 'selector': 'app-countries-chart'},{'name': 'CountryDetailChartComponent', 'selector': 'app-country-detail-chart'},{'name': 'DashboardCountriesComponent', 'selector': 'app-dashboard-countries'},{'name': 'DashboardCountryDetailComponent', 'selector': 'app-dashboard-country-detail'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'InfoDetailChartComponent', 'selector': 'app-info-detail-chart'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DashboardCountriesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DashboardCountryDetailComponent.html":{"url":"components/DashboardCountryDetailComponent.html","title":"component - DashboardCountryDetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DashboardCountryDetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/dashboard-country-detail/dashboard-country-detail.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n                    UnsubscribeObservableService\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dashboard-country-detail\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                CountryDetailChartComponent\n                                InfoDetailChartComponent\n                            LineChartModule\n                            NgIf\n                                NotFoundComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./dashboard-country-detail.component.html\n            \n\n\n\n            \n                styleUrl\n                ./dashboard-country-detail.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                numberOfEntries\n                            \n                            \n                                totalNumberMedals\n                            \n                            \n                                totalNumberOfAthletes\n                            \n                            \n                                    Private\n                                unsubscribe$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCountryData\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                countrySelectedData\n                            \n                            \n                                dataCountryChart\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(chartFormat: ChartFormatDataService, chartData: ChartDataService, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/dashboard-country-detail/dashboard-country-detail.component.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        chartFormat\n                                                  \n                                                        \n                                                                        ChartFormatDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        chartData\n                                                  \n                                                        \n                                                                        ChartDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        countrySelectedData\n                    \n                \n                \n                    \n                        Type :         Olympic | undefined\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/dashboard-country-detail/dashboard-country-detail.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        dataCountryChart\n                    \n                \n                \n                    \n                        Type :         CountryDetailChartFormat | \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/dashboard-country-detail/dashboard-country-detail.component.ts:34\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getCountryData\n                        \n                    \n                \n            \n            \n                \ngetCountryData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/dashboard-country-detail/dashboard-country-detail.component.ts:51\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/dashboard-country-detail/dashboard-country-detail.component.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Inherited from         UnsubscribeObservableService\n\n                        \n                    \n                    \n                        \n                                Defined in         UnsubscribeObservableService:9\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        numberOfEntries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/dashboard-country-detail/dashboard-country-detail.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalNumberMedals\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/dashboard-country-detail/dashboard-country-detail.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalNumberOfAthletes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/dashboard-country-detail/dashboard-country-detail.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        unsubscribe$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                        \n                            \n                                Inherited from         UnsubscribeObservableService\n\n                            \n                        \n                    \n                        \n                                Defined in         UnsubscribeObservableService:7\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { LineChartModule } from \"@swimlane/ngx-charts\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { NgIf } from \"@angular/common\";\nimport { CountryDetailChartComponent } from '../../components/country-detail-chart/country-detail-chart.component';\nimport { InfoDetailChartComponent } from '../../components/info-detail-chart/info-detail-chart.component';\nimport { UnsubscribeObservableService } from 'src/app/core/services/unsubsribe-observable/unsubscribe-observable.service';\nimport { CountryDetailChartFormat } from 'src/app/core/models/types/CountryDetailChartFormat';\nimport { Olympic } from 'src/app/core/models/interfaces/Olympic';\nimport { takeUntil } from 'rxjs';\nimport { Participation } from 'src/app/core/models/interfaces/Participation';\nimport { ChartFormatDataService } from 'src/app/core/services/chart-format/chart-format-data.service';\nimport { ChartDataService } from 'src/app/core/services/chart-data/chart-data.service';\nimport {NotFoundComponent} from \"../../components/not-found/not-found.component\";\n\n@Component({\n  selector: 'app-dashboard-country-detail',\n  standalone: true,\n  imports: [\n    CountryDetailChartComponent,\n    InfoDetailChartComponent,\n    LineChartModule,\n    NgIf,\n    NotFoundComponent\n  ],\n  templateUrl: './dashboard-country-detail.component.html',\n  styleUrl: './dashboard-country-detail.component.scss'\n})\nexport class DashboardCountryDetailComponent extends UnsubscribeObservableService implements OnInit {\n\n  @Input()\n  countrySelectedData!: Olympic | undefined;\n  @Input()\n  dataCountryChart!: CountryDetailChartFormat | [];\n\n  numberOfEntries: number = 0;\n  totalNumberMedals: number = 0;\n  totalNumberOfAthletes: number = 0;\n\n  constructor(private chartFormat: ChartFormatDataService,\n    private chartData: ChartDataService,\n    private route: ActivatedRoute\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.getCountryData();\n  }\n\n  getCountryData(): void {\n    const countryId: number = this.route.snapshot.params['id'];\n\n    this.chartData.getDataByCountryId(countryId).pipe(takeUntil(this.getUnsubscribe)).subscribe(\n      (countryData: Olympic | undefined) => {\n        this.countrySelectedData = countryData;\n        if (this.countrySelectedData !== undefined) {\n          this.dataCountryChart = this.chartFormat.getFormatDataForLineChartByCountry(this.countrySelectedData)\n        }\n\n        if (countryData !== undefined) {\n          this.numberOfEntries = countryData.participations.length ?? 0;\n          this.totalNumberMedals = countryData.participations.reduce((acc: number, data: Participation) => acc + data.medalsCount, 0);\n          this.totalNumberOfAthletes = countryData.participations.reduce((acc: number, data: Participation) => acc + data.athleteCount, 0);\n        }\n      }\n    )\n  }\n}\n\n    \n\n    \n        @if (countrySelectedData) {\n  \n    \n      {{ countrySelectedData.country }}\n      \n        \n        \n        \n      \n      \n        \n      \n    \n  \n} @else {\n  \n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (countrySelectedData) {            {{ countrySelectedData.country }}                                                              } @else {  }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CountriesChartComponent', 'selector': 'app-countries-chart'},{'name': 'CountryDetailChartComponent', 'selector': 'app-country-detail-chart'},{'name': 'DashboardCountriesComponent', 'selector': 'app-dashboard-countries'},{'name': 'DashboardCountryDetailComponent', 'selector': 'app-dashboard-country-detail'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'InfoDetailChartComponent', 'selector': 'app-info-detail-chart'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DashboardCountryDetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/header/header.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterLink\n                            RouterLinkActive\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n            \n                styleUrl\n                ./header.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterLink, RouterLinkActive } from \"@angular/router\";\n\n\n@Component({\n  selector: 'app-header',\n  standalone: true,\n  imports: [RouterLink, RouterLinkActive],\n  templateUrl: './header.component.html',\n  styleUrl: './header.component.scss'\n})\nexport class HeaderComponent {\n\n}\n\n    \n\n    \n        \n  \n    \n      Olympic games app\n    \n    \n      Dashboard\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Olympic games app              Dashboard      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CountriesChartComponent', 'selector': 'app-countries-chart'},{'name': 'CountryDetailChartComponent', 'selector': 'app-country-detail-chart'},{'name': 'DashboardCountriesComponent', 'selector': 'app-dashboard-countries'},{'name': 'DashboardCountryDetailComponent', 'selector': 'app-dashboard-country-detail'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'InfoDetailChartComponent', 'selector': 'app-info-detail-chart'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InfoDetailChartComponent.html":{"url":"components/InfoDetailChartComponent.html","title":"component - InfoDetailChartComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InfoDetailChartComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/info-detail-chart/info-detail-chart.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-info-detail-chart\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./info-detail-chart.component.html\n            \n\n\n\n            \n                styleUrl\n                ./info-detail-chart.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/info-detail-chart/info-detail-chart.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/info-detail-chart/info-detail-chart.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-info-detail-chart',\n  standalone: true,\n  imports: [],\n  templateUrl: './info-detail-chart.component.html',\n  styleUrl: './info-detail-chart.component.scss'\n})\nexport class InfoDetailChartComponent {\n\n  @Input()\n  title!: string;\n\n  @Input()\n  value!: number;\n\n}\n\n    \n\n    \n        \n    {{ title}}\n    {{ value }}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ title}}    {{ value }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CountriesChartComponent', 'selector': 'app-countries-chart'},{'name': 'CountryDetailChartComponent', 'selector': 'app-country-detail-chart'},{'name': 'DashboardCountriesComponent', 'selector': 'app-dashboard-countries'},{'name': 'DashboardCountryDetailComponent', 'selector': 'app-dashboard-country-detail'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'InfoDetailChartComponent', 'selector': 'app-info-detail-chart'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InfoDetailChartComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoaderComponent.html":{"url":"components/LoaderComponent.html","title":"component - LoaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/loader/loader.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-loader\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            AsyncPipe\n                            NgIf\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./loader.component.html\n            \n\n\n\n            \n                styleUrl\n                ./loader.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loading$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(loaderService: LoaderService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/loader/loader.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loaderService\n                                                  \n                                                        \n                                                                        LoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/loader/loader.component.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loading$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/loader/loader.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {AsyncPipe, NgIf} from \"@angular/common\";\nimport {LoaderService} from \"../../core/services/loader/loader.service\";\nimport {Observable} from \"rxjs\";\n\n@Component({\n  selector: 'app-loader',\n  standalone: true,\n  imports: [AsyncPipe, NgIf],\n  templateUrl: './loader.component.html',\n  styleUrl: './loader.component.scss'\n})\nexport class LoaderComponent implements OnInit {\n\n  loading$!: Observable;\n\n  constructor(\n    private loaderService: LoaderService\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.loading$ = this.loaderService.loading$;\n  }\n\n}\n\n    \n\n    \n        \n  LOADING PAGE ...\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  LOADING PAGE ...'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CountriesChartComponent', 'selector': 'app-countries-chart'},{'name': 'CountryDetailChartComponent', 'selector': 'app-country-detail-chart'},{'name': 'DashboardCountriesComponent', 'selector': 'app-dashboard-countries'},{'name': 'DashboardCountryDetailComponent', 'selector': 'app-dashboard-country-detail'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'InfoDetailChartComponent', 'selector': 'app-info-detail-chart'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/LoaderHttpInterceptorService.html":{"url":"interceptors/LoaderHttpInterceptorService.html","title":"interceptor - LoaderHttpInterceptorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  LoaderHttpInterceptorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/loader-http-interceptor/loader-http-interceptor.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(loaderService: LoaderService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/loader-http-interceptor/loader-http-interceptor.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loaderService\n                                                  \n                                                        \n                                                                        LoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest<>, next: HttpHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/loader-http-interceptor/loader-http-interceptor.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        HttpRequest<>\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        HttpHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from \"@angular/common/http\";\nimport { finalize, Observable } from \"rxjs\";\nimport { LoaderService } from '../loader/loader.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoaderHttpInterceptorService implements HttpInterceptor {\n\n  constructor(private loaderService: LoaderService) {\n  }\n\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    this.loaderService.loadingOn();\n    return next.handle(req).pipe(\n      finalize(() => {\n        this.loaderService.loadingOff();\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoaderService.html":{"url":"injectables/LoaderService.html","title":"injectable - LoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/loader/loader.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                loading$\n                            \n                            \n                                    Private\n                                loadingSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadingOff\n                            \n                            \n                                loadingOn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/loader/loader.service.ts:10\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        loadingOff\n                        \n                    \n                \n            \n            \n                \nloadingOff()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/loader/loader.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadingOn\n                        \n                    \n                \n            \n            \n                \nloadingOn()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/loader/loader.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        loading$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.loadingSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/loader/loader.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loadingSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/loader/loader.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {BehaviorSubject, Observable} from \"rxjs\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoaderService {\n\n  private loadingSubject: BehaviorSubject = new BehaviorSubject(false);\n  public loading$: Observable = this.loadingSubject.asObservable();\n\n  constructor() {\n  }\n\n  loadingOn() {\n    this.loadingSubject.next(true);\n  }\n\n  loadingOff() {\n    this.loadingSubject.next(false);\n    this.loadingSubject.complete();0\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotFoundComponent.html":{"url":"components/NotFoundComponent.html","title":"component - NotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/not-found/not-found.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-not-found\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterLink\n                            NgIf\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./not-found.component.html\n            \n\n\n\n            \n                styleUrl\n                ./not-found.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                showGoBackLink\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/not-found/not-found.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'No corresponding page found'\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/not-found/not-found.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/not-found/not-found.component.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        showGoBackLink\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/not-found/not-found.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\nimport {Router, RouterLink} from \"@angular/router\";\nimport {NgIf} from \"@angular/common\";\n\n@Component({\n  selector: 'app-not-found',\n  standalone: true,\n  templateUrl: './not-found.component.html',\n  styleUrl: './not-found.component.scss',\n  imports: [\n    RouterLink,\n    NgIf\n  ],\n})\nexport class NotFoundComponent implements OnInit {\n\n  @Input()\n  title: string = 'No corresponding page found';\n  showGoBackLink!: boolean;\n\n  constructor(private router: Router) {\n  }\n\n  ngOnInit(): void {\n    this.showGoBackLink = this.router.url === \"/\";\n  }\n\n}\n\n    \n\n    \n        \n  {{ title }}\n  Go Back\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ title }}  Go Back'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CountriesChartComponent', 'selector': 'app-countries-chart'},{'name': 'CountryDetailChartComponent', 'selector': 'app-country-detail-chart'},{'name': 'DashboardCountriesComponent', 'selector': 'app-dashboard-countries'},{'name': 'DashboardCountryDetailComponent', 'selector': 'app-dashboard-country-detail'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'InfoDetailChartComponent', 'selector': 'app-info-detail-chart'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Olympic.html":{"url":"interfaces/Olympic.html","title":"interface - Olympic","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Olympic\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/interfaces/Olympic.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            country\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            participations\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        country\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        country:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        participations\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        participations:         Participation[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Participation[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Participation } from \"./Participation\";\n\nexport interface Olympic {\n    id: number;\n    country: string;\n    participations: Participation[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OlympicService.html":{"url":"injectables/OlympicService.html","title":"injectable - OlympicService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OlympicService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/olympic/olympic.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                olympics$\n                            \n                            \n                                    Private\n                                olympicUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getOlympics\n                            \n                            \n                                loadInitialData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, toastService: ToastrService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/olympic/olympic.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getOlympics\n                        \n                    \n                \n            \n            \n                \ngetOlympics()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/olympic/olympic.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadInitialData\n                        \n                    \n                \n            \n            \n                \nloadInitialData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/olympic/olympic.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        olympics$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/olympic/olympic.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        olympicUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : './assets/mock/olympic.json'\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/olympic/olympic.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {HttpClient} from '@angular/common/http';\nimport {Injectable} from '@angular/core';\nimport {BehaviorSubject, Observable} from 'rxjs';\nimport {catchError, tap} from 'rxjs/operators';\nimport {ToastrService} from \"ngx-toastr\";\nimport {Olympic} from \"../../models/interfaces/Olympic\";\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OlympicService {\n  private olympicUrl:string = './assets/mock/olympic.json';\n  private olympics$: BehaviorSubject = new BehaviorSubject(null);\n\n  constructor(\n    private http: HttpClient,\n    private toastService: ToastrService) {\n  }\n\n  loadInitialData() {\n    return this.http.get(this.olympicUrl).pipe(\n      tap((value: Olympic[] | null) => {\n        if (value !== null && value.length > 0) {\n          this.olympics$.next(value)\n        } else {\n          this.toastService.error('Data could not be loaded, please try later or contact the support team');\n        }\n      }),\n      catchError((error: string, caught: Observable) => {\n        this.toastService.error(error);\n        this.olympics$.next(null);\n        return caught;\n      })\n    );\n  }\n\n  getOlympics() {\n    return this.olympics$.asObservable();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OlympicsServiceMock.html":{"url":"classes/OlympicsServiceMock.html","title":"class - OlympicsServiceMock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OlympicsServiceMock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/test/OlympicsServiceMock.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getOlympics\n                            \n                            \n                                loadInitialData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getOlympics\n                        \n                    \n                \n            \n            \n                \ngetOlympics()\n                \n            \n\n\n                    \n                        \n                            Defined in src/test/OlympicsServiceMock.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadInitialData\n                        \n                    \n                \n            \n            \n                \nloadInitialData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/test/OlympicsServiceMock.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {of} from \"rxjs\";\n\n\nexport class OlympicsServiceMock {\n\n  loadInitialData() {\n    return of([\n      {\n        \"id\": 1,\n        \"country\": \"Italy\",\n        \"participations\": [\n          {\n            \"id\": 1,\n            \"year\": 2012,\n            \"city\": \"Londres\",\n            \"medalsCount\": 28,\n            \"athleteCount\": 372\n          },\n          {\n            \"id\": 2,\n            \"year\": 2016,\n            \"city\": \"Rio de Janeiro\",\n            \"medalsCount\": 28,\n            \"athleteCount\": 375\n          },\n          {\n            \"id\": 3,\n            \"year\": 2020,\n            \"city\": \"Tokyo\",\n            \"medalsCount\": 40,\n            \"athleteCount\": 381\n          }\n        ]\n      }],)\n  }\n\n  getOlympics () {\n    return of([\n      {\n        \"id\": 1,\n        \"country\": \"Italy\",\n        \"participations\": [\n          {\n            \"id\": 1,\n            \"year\": 2012,\n            \"city\": \"Londres\",\n            \"medalsCount\": 28,\n            \"athleteCount\": 372\n          },\n          {\n            \"id\": 2,\n            \"year\": 2016,\n            \"city\": \"Rio de Janeiro\",\n            \"medalsCount\": 28,\n            \"athleteCount\": 375\n          },\n          {\n            \"id\": 3,\n            \"year\": 2020,\n            \"city\": \"Tokyo\",\n            \"medalsCount\": 40,\n            \"athleteCount\": 381\n          }\n        ]\n      }],)\n  }\n\n\n\n\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OnResize.html":{"url":"interfaces/OnResize.html","title":"interface - OnResize","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OnResize\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/interfaces/OnResize.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        resizeChart\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        resizeChart\n                        \n                    \n                \n            \n            \n                \nresizeChart()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/models/interfaces/OnResize.ts:3\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface OnResize{\n  resizeChart(): void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Participation.html":{"url":"interfaces/Participation.html","title":"interface - Participation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Participation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/interfaces/Participation.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            athleteCount\n                                        \n                                \n                                \n                                        \n                                            city\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            medalsCount\n                                        \n                                \n                                \n                                        \n                                            year\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        athleteCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        athleteCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        medalsCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        medalsCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        year\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        year:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Participation {\n    id: number;\n    year: number;\n    city: string;\n    medalsCount: number;\n    athleteCount: number\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UnsubscribeObservableService.html":{"url":"injectables/UnsubscribeObservableService.html","title":"injectable - UnsubscribeObservableService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UnsubscribeObservableService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/unsubsribe-observable/unsubscribe-observable.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                unsubscribe$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getUnsubscribe\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/unsubsribe-observable/unsubscribe-observable.service.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        unsubscribe$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/unsubsribe-observable/unsubscribe-observable.service.ts:7\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        getUnsubscribe\n                    \n                \n\n                \n                    \n                        getgetUnsubscribe()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/services/unsubsribe-observable/unsubscribe-observable.service.ts:14\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {Injectable, OnDestroy} from \"@angular/core\";\nimport {Subject} from \"rxjs\";\n\n@Injectable()\nexport class UnsubscribeObservableService implements OnDestroy {\n\n  private unsubscribe$: Subject = new Subject();\n\n  ngOnDestroy(): void {\n    this.unsubscribe$.next();\n    this.unsubscribe$.complete();\n  }\n\n  public get getUnsubscribe(): Subject {\n    return this.unsubscribe$;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/chartDataServiceMock.html":{"url":"classes/chartDataServiceMock.html","title":"class - chartDataServiceMock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  chartDataServiceMock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/test/mockData/chartDataServiceMock.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDataByCountryId\n                            \n                            \n                                getTotalCountry\n                            \n                            \n                                getTotalJos\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getDataByCountryId\n                        \n                    \n                \n            \n            \n                \ngetDataByCountryId(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/test/mockData/chartDataServiceMock.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTotalCountry\n                        \n                    \n                \n            \n            \n                \ngetTotalCountry()\n                \n            \n\n\n                    \n                        \n                            Defined in src/test/mockData/chartDataServiceMock.ts:10\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTotalJos\n                        \n                    \n                \n            \n            \n                \ngetTotalJos()\n                \n            \n\n\n                    \n                        \n                            Defined in src/test/mockData/chartDataServiceMock.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {Observable, of} from \"rxjs\";\nimport {Olympic} from \"../../app/core/models/interfaces/Olympic\";\n\nexport class chartDataServiceMock {\n\n  getTotalJos(): Observable {\n    return of(2)\n  }\n\n  getTotalCountry(): Observable {\n    return of(5)\n  }\n\n  getDataByCountryId(id: number): Observable {\n    return of(\n      {\n        id: 1,\n        country: \"France\",\n        participations: [\n          {\n            id: 1,\n            year: 2018,\n            city: \"LA\",\n            medalsCount: 120,\n            athleteCount: 350\n          }\n        ]\n      }\n    )\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/countries-chart/countries-chart.component.ts\n            \n            component\n            CountriesChartComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/components/country-detail-chart/country-detail-chart.component.ts\n            \n            component\n            CountryDetailChartComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/components/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/info-detail-chart/info-detail-chart.component.ts\n            \n            component\n            InfoDetailChartComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/loader/loader.component.ts\n            \n            component\n            LoaderComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/not-found/not-found.component.ts\n            \n            component\n            NotFoundComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/core/models/interfaces/Olympic.ts\n            \n            interface\n            Olympic\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/models/interfaces/OnResize.ts\n            \n            interface\n            OnResize\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/models/interfaces/Participation.ts\n            \n            interface\n            Participation\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                        src/app/core/models/types/CountryAllChartFormat.ts\n            \n            type alias\n            CountryAllChartFormat\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/models/types/CountryDetailChartFormat.ts\n            \n            type alias\n            CountryDetailChartData\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/models/types/CountryDetailChartFormat.ts\n            \n            type alias\n            CountryDetailChartFormat\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/models/types/CountryDetailChartFormat.ts\n            \n            type alias\n            SeriesData\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/chart-data/chart-data.service.ts\n            \n            injectable\n            ChartDataService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/core/services/chart-format/chart-format-data.service.ts\n            \n            injectable\n            ChartFormatDataService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/services/loader-http-interceptor/loader-http-interceptor.service.ts\n            \n            interceptor\n            LoaderHttpInterceptorService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/services/loader/loader.service.ts\n            \n            injectable\n            LoaderService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/services/olympic/olympic.service.ts\n            \n            injectable\n            OlympicService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/services/unsubsribe-observable/unsubscribe-observable.service.ts\n            \n            injectable\n            UnsubscribeObservableService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/pages/dashboard-countries/dashboard-countries.component.ts\n            \n            component\n            DashboardCountriesComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/pages/dashboard-country-detail/dashboard-country-detail.component.ts\n            \n            component\n            DashboardCountryDetailComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                        src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test/OlympicsServiceMock.ts\n            \n            class\n            OlympicsServiceMock\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/test/mockData/chartDataServiceMock.ts\n            \n            class\n            chartDataServiceMock\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/test/mockData/chartFormatServiceMock.ts\n            \n            class\n            ChartFormatServiceMock\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/test/mockData/olympicsDataMock.ts\n            \n            variable\n            olympicsMockData\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/test/mockData/olympics_test.ts\n            \n            variable\n            olympicsTest\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^18.0.3\n        \n            @angular/common : ^18.0.3\n        \n            @angular/compiler : ^18.0.3\n        \n            @angular/core : ^18.0.3\n        \n            @angular/forms : ^18.0.3\n        \n            @angular/platform-browser : ^18.0.3\n        \n            @angular/platform-browser-dynamic : ^18.0.3\n        \n            @angular/router : ^18.0.3\n        \n            @swimlane/ngx-charts : ^21.1.2\n        \n            ngx-toastr : ^19.0.0\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.3\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nOlympicGamesStarter\nThis project was generated with Angular CLI version 18.0.3.\nDon't forget to install your node_modules before starting (npm install).\nDevelopment server\nRun ng serve or npm start for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nProject Structure\ncomponents folder\nThis folder contains all reusable components:\n\nCountriesChart: A circular chart component.\nCountryDetailChart: A line chart component.\nInfoDetailChart: A detail section component.\nHeader: A header and navigation bar component.\nLoader: A basic loader component.\n\npages folder\nThis folder contains components used for routing:\n\nDashboardCountries: The main page component.\nDashboardCountryDetail: The detail page component.\n\ncore folder\nThis folder contains the business logic, including the services, types, and models folders.\nservices\nThis folder contains utility services:\n\nChartData: Handles data processing for charts.\nChartFormat: Formats data for the graphics library.\nLoader: Manages the logic for displaying loaders.\nOlympic: Simulates API calls for Olympic data.\nUnsubscribeObservable: Manages the closure of observables.\n\nmodels\nThis folder contains interfaces and types used across the application.\ninterfaces\n\nOlympic: Defines the structure of HTTP responses.\nOnResize: Used to adjust chart sizes dynamically.\nParticipations: Defines the structure for participation data.\n\ntypes\n\nCountryAllChartFormat: Defines the data format for the CountriesChart component.\nCountryDetailChartFormat: Defines the data format for the CountryDetailChart component.\n\nLibraries\n\nngx-toastr\nngx-charts\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nDashboardCountriesComponent\n\nDashboardCountriesComponent\n\nAppModule -->\n\nDashboardCountriesComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nLoaderComponent\n\nLoaderComponent\n\nAppModule -->\n\nLoaderComponent->AppModule\n\n\n\n\n\nNotFoundComponent\n\nNotFoundComponent\n\nAppModule -->\n\nNotFoundComponent->AppModule\n\n\n\n\n\nLoaderHttpInterceptorService\n\nLoaderHttpInterceptorService\n\nAppModule -->\n\nLoaderHttpInterceptorService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    9 Components\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        3 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CountryAllChartFormat   (src/.../CountryAllChartFormat.ts)\n                        \n                        \n                            CountryDetailChartData   (src/.../CountryDetailChartFormat.ts)\n                        \n                        \n                            CountryDetailChartFormat   (src/.../CountryDetailChartFormat.ts)\n                        \n                        \n                            SeriesData   (src/.../CountryDetailChartFormat.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/models/types/CountryAllChartFormat.ts\n    \n    \n        \n            \n                \n                    \n                    CountryAllChartFormat\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/app/core/models/types/CountryDetailChartFormat.ts\n    \n    \n        \n            \n                \n                    \n                    CountryDetailChartData\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    CountryDetailChartFormat\n                \n            \n            \n                \n                            CountryDetailChartData[]\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    SeriesData\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            olympicsMockData   (src/.../olympicsDataMock.ts)\n                        \n                        \n                            olympicsTest   (src/.../olympics_test.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require.context('./', true, /\\.spec\\.ts$/)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        require\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false\n}\n                    \n                \n\n\n        \n    \n\n    src/test/mockData/olympicsDataMock.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        olympicsMockData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Olympic[]\n\n                    \n                \n                \n                    \n                        Default value : [{\n  id: 1,\n  country: 'Country 1',\n  participations: [{id: 1, year: 2000, city: 'paris', medalsCount: 2, athleteCount: 3}]\n}, {\n  id: 2,\n  country: 'Country 2',\n  participations: [{id: 1, year: 2000, city: 'paris', medalsCount: 2, athleteCount: 3}]\n}\n]\n                    \n                \n\n\n        \n    \n\n    src/test/mockData/olympics_test.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        olympicsTest\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    \"id\": 1,\n    \"country\": \"Italy\",\n    \"participations\": [\n      {\n        \"id\": 1,\n        \"year\": 2012,\n        \"city\": \"Londres\",\n        \"medalsCount\": 28,\n        \"athleteCount\": 372\n      },\n      {\n        \"id\": 2,\n        \"year\": 2016,\n        \"city\": \"Rio de Janeiro\",\n        \"medalsCount\": 28,\n        \"athleteCount\": 375\n      },\n      {\n        \"id\": 3,\n        \"year\": 2020,\n        \"city\": \"Tokyo\",\n        \"medalsCount\": 40,\n        \"athleteCount\": 381\n      }\n    ]\n  },\n  {\n    \"id\": 2,\n    \"country\": \"Spain\",\n    \"participations\": [\n      {\n        \"id\": 1,\n        \"year\": 2012,\n        \"city\": \"Londres\",\n        \"medalsCount\": 20,\n        \"athleteCount\": 315\n      },\n      {\n        \"id\": 2,\n        \"year\": 2016,\n        \"city\": \"Rio de Janeiro\",\n        \"medalsCount\": 17,\n        \"athleteCount\": 312\n      },\n      {\n        \"id\": 3,\n        \"year\": 2020,\n        \"city\": \"Tokyo\",\n        \"medalsCount\": 17,\n        \"athleteCount\": 321\n      }\n    ]\n  },\n  {\n    \"id\": 3,\n    \"country\": \"United States\",\n    \"participations\": [\n      {\n        \"id\": 1,\n        \"year\": 2012,\n        \"city\": \"Londres\",\n        \"medalsCount\": 109,\n        \"athleteCount\": 610\n      },\n      {\n        \"id\": 2,\n        \"year\": 2016,\n        \"city\": \"Rio de Janeiro\",\n        \"medalsCount\": 123,\n        \"athleteCount\": 652\n      },\n      {\n        \"id\": 3,\n        \"year\": 2020,\n        \"city\": \"Tokyo\",\n        \"medalsCount\": 113,\n        \"athleteCount\": 626\n      }\n    ]\n  },\n  {\n    \"id\": 4,\n    \"country\": \"Germany\",\n    \"participations\": [\n      {\n        \"id\": 1,\n        \"year\": 2012,\n        \"city\": \"Londres\",\n        \"medalsCount\": 44,\n        \"athleteCount\": 425\n      },\n      {\n        \"id\": 2,\n        \"year\": 2016,\n        \"city\": \"Rio de Janeiro\",\n        \"medalsCount\": 44,\n        \"athleteCount\": 422\n      },\n      {\n        \"id\": 3,\n        \"year\": 2020,\n        \"city\": \"Tokyo\",\n        \"medalsCount\": 37,\n        \"athleteCount\": 425\n      }\n    ]\n  },\n  {\n    \"id\": 5,\n    \"country\": \"France\",\n    \"participations\": [\n      {\n        \"id\": 1,\n        \"year\": 2012,\n        \"city\": \"Londres\",\n        \"medalsCount\": 35,\n        \"athleteCount\": 423\n      },\n      {\n        \"id\": 2,\n        \"year\": 2016,\n        \"city\": \"Rio de Janeiro\",\n        \"medalsCount\": 45,\n        \"athleteCount\": 412\n      },\n      {\n        \"id\": 3,\n        \"year\": 2020,\n        \"city\": \"Tokyo\",\n        \"medalsCount\": 33,\n        \"athleteCount\": 403\n      }\n    ]\n  }\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
